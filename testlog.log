
> conflux-web@1.2.1 test-coveralls /Users/liping/about_cfx/ConfluxWeb
> istanbul cover _mocha -- -R spec && cat coverage/lcov.info | coveralls --verbose



  lib/solidity/coder
    decodeParam
      ✓ should turn address: 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1
      ✓ should turn address[2]: 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1,0x407D73d8A49eEB85D32Cf465507Dd71d507100c3
      ✓ should turn address[]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1,0x407D73d8A49eEB85D32Cf465507Dd71d507100c3
      ✓ should turn address[][2]: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1,0x407d73d8a49EEB85d32Cf465507dD71D507100c2,0x407D73d8A49eEB85D32Cf465507Dd71d507100c3,0x407D73d8a49eeb85D32CF465507dd71d507100C4
      ✓ should turn address[2][]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1,0x407d73d8a49EEB85d32Cf465507dD71D507100c2,0x407D73d8A49eEB85D32Cf465507Dd71d507100c3,0x407D73d8a49eeb85D32CF465507dd71d507100C4
      ✓ should turn bool: 0000000000000000000000000000000000000000000000000000000000000001 to true
      ✓ should turn bool: 0000000000000000000000000000000000000000000000000000000000000000 to false
      ✓ should turn bool[2]: 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000 to true,false
      ✓ should turn bool[]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000 to true,true,false
      ✓ should turn int: 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn int: 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn int: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn int: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to -1
      ✓ should turn int256: 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn int256: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn int256: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to -1
      ✓ should turn int8: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn int8[2]: 00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000002 to 16,2
      ✓ should turn int32: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn int64: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn int128: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn int[]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000 to 
      ✓ should turn int[]: 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003 to 3
      ✓ should turn int256[]: 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003 to 3
      ✓ should turn int[]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003 to 1,2,3
      ✓ should turn int[3][]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006 to 1,2,3,4,5,6
      ✓ should turn uint: 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn uint: 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn uint: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn uint: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to 115792089237316195423570985008687907853269984665640564039457584007913129639935
      ✓ should turn uint256: 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn uint256: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn uint8: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn uint32: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn uint64: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn uint128: 0000000000000000000000000000000000000000000000000000000000000010 to 16
      ✓ should turn uint[]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000 to 
      ✓ should turn uint[]: 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003 to 3
      ✓ should turn uint256[]: 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003 to 3
      ✓ should turn uint[]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003 to 1,2,3
      ✓ should turn uint[3][]: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006 to 1,2,3,4,5,6
      ✓ should turn bytes: 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000 to 0x6761766f66796f726b
      ✓ should turn bytes: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b
      ✓ should turn bytes: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b
      ✓ should turn bytes: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b
      ✓ should turn bytes[2]: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002200000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff0000 to 0x00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff,0x21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff
      ✓ should turn bytes[][2]: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002200000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff00000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002200000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff0000 to 0x00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff,0x21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff,0x00000c8c18f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff,0x21f9252830fb3c56471c51335a8262f16a6d70e276417a7c7d897f617fff
      ✓ should turn bytes1: cf00000000000000000000000000000000000000000000000000000000000000 to 0xcf
      ✓ should turn bytes1[4]: cf0000000000000000000000000000000000000000000000000000000000000068000000000000000000000000000000000000000000000000000000000000004d00000000000000000000000000000000000000000000000000000000000000fb00000000000000000000000000000000000000000000000000000000000000 to 0xcf,0x68,0x4d,0xfb
      ✓ should turn bytes32: 6761766f66796f726b0000000000000000000000000000000000000000000000 to 0x6761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn string: 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000 to gavofyork
      ✓ should turn string: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000008c383c2a4c383c2a4000000000000000000000000000000000000000000000000 to Ã¤Ã¤
      ✓ should turn string: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002c3bc000000000000000000000000000000000000000000000000000000000000 to ü
      ✓ should turn string: 0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000 to 
      ✓ should turn string: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002c383000000000000000000000000000000000000000000000000000000000000 to Ã
      ✓ should turn string: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000026486565c3a4c3b6c3b6c3a4f09f9185443334c99dc9a33234d084cdbd2d2e2cc3a4c3bc2b232f0000000000000000000000000000000000000000000000000000 to Heeäööä👅D34ɝɣ24Єͽ-.,äü+#/
      ✓ should turn bytes: 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000006c3a40000c3a40000000000000000000000000000000000000000000000000000 to 0xc3a40000c3a4
      ✓ should turn bytes32: c3a40000c3a40000000000000000000000000000000000000000000000000000 to 0xc3a40000c3a40000000000000000000000000000000000000000000000000000
      ✓ should turn address: 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1
      ✓ should turn string: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003e77656c636f6d6520746f20657468657265756d2e2077656c636f6d6520746f20657468657265756d2e2077656c636f6d6520746f20657468657265756d2e0000 to welcome to ethereum. welcome to ethereum. welcome to ethereum.
      ✓ should turn bytes: 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000009ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff100 to 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1
      ✓ should turn tuple(address): 000000000000000000000000bbf289d846208c16edc8474705c748aff07732db to 0xbBF289D846208c16EDc8474705C748aff07732dB
      ✓ should turn tuple(address,address): 000000000000000000000000bbf289d846208c16edc8474705c748aff07732db000000000000000000000000bbf289d846208c16edc8474705c748aff07732db to 0xbBF289D846208c16EDc8474705C748aff07732dB,0xbBF289D846208c16EDc8474705C748aff07732dB
      ✓ should turn tuple(uint256,uint256): 00000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000005 to 5,5
      ✓ should turn tuple(string,string): 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000 to hello,world
      ✓ should turn tuple(bytes,bytes): 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000701fe517acd15ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007abcdef1234567800000000000000000000000000000000000000000000000000 to 0x01fe517acd15ff,0xabcdef12345678
      ✓ should turn tuple(bool,bool): 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 to false,true
      ✓ should turn tuple(uint256,string,bytes): 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000977686174207768617400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007abcdef1234567800000000000000000000000000000000000000000000000000 to 4,what what,0xabcdef12345678
      ✓ should turn tuple(uint128,string,bytes): 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000029a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000010656e636f646520796f7572206b696473000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010656e636f646520796f7572207769666500000000000000000000000000000000 to 666,encode your kids,0x656e636f646520796f75722077696665
      ✓ should turn tuple(string,bytes32,uint256,bool): 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000080aabbccddeeff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000007666f6f2062617200000000000000000000000000000000000000000000000000 to foo bar,0xaabbccddeeff0000000000000000000000000000000000000000000000000000,321,true
      ✓ should turn tuple(uint8,uint8,uint8,uint8,string,address,bool): 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000046669766500000000000000000000000000000000000000000000000000000000 to 1,2,3,4,five,0x0000000000000000000000000000000000000006,true
      ✓ should turn tuple(tuple(address,address),tuple(uint256,uint256)): 0000000000000000000000001234567890123456789012345678901234567890000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000006 to 0x1234567890123456789012345678901234567890,0x1234567890123456789012345678901234567890,5,6
      ✓ should turn tuple(tuple(address,address),tuple(uint256,uint256),tuple(string,string)): 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000123456789012345678901234567890123456789000000000000000000000000012345678901234567890123456789012345678900000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000086120737472696e67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e616e6f7468657220737472696e67000000000000000000000000000000000000 to 0x1234567890123456789012345678901234567890,0x1234567890123456789012345678901234567890,5,6,a string,another string

  lib/solidity/coder
    decodeParams
      ✓ should turn 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1
      ✓ should turn 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1,0x407D73d8A49eEB85D32Cf465507Dd71d507100c3
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 to true,false,false,false,true
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000005 to 1,2,3,4,5
      ✓ should turn 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000005 to 1,2,3,4,5
      ✓ should turn 0000000000000000000000000000000000000000000000000000000000000001 to 1
      ✓ should turn aa00000000000000000000000000000000000000000000000000000000000000bb00000000000000000000000000000000000000000000000000000000000000 to 0xaa,0xbb
      ✓ should turn aa00000000000000000000000000000000000000000000000000000000000000bb00000000000000000000000000000000000000000000000000000000000000cc00000000000000000000000000000000000000000000000000000000000000 to 0xaa,0xbb,0xcc
      ✓ should turn 000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000020731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b0000000000000000000000000000000000000000000000000000000000000020731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134c to 0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b,0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134c
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000 to 1,gavofyork,5
      ✓ should turn 6761766f66796f726b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005 to 0x6761766f66796f726b0000000000000000000000000000000000000000000000,5
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000056761766f66796f726b0000000000000000000000000000000000000000000000 to 5,0x6761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn 000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000007 to 1,gavofyork,2,3,4,5,6,7
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b0000000000000000000000000000000000000000000000000000000000000040331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b431a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 5,0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b,3,0x331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b431a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b
      ✓ should turn 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c30000000000000000000000000000000000000000000000000000000000000000 to 0x407D73d8a49eeb85D32Cf465507dd71d507100c1,0x407D73d8A49eEB85D32Cf465507Dd71d507100c3,false
      ✓ should turn 000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 to true,false,true
      ✓ should turn aa00000000000000000000000000000000000000000000000000000000000000bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 to 0xaa,0xbb,true
      ✓ should turn 000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001 to 1,2,true
      ✓ should turn 000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001 to 1,2,true
      ✓ should turn 000000000000000000000000123456789012345678901234567890123456789000000000000000000000000012345678901234567890123456789012345678900000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000 to 0x1234567890123456789012345678901234567890,0x1234567890123456789012345678901234567890,hello,world,false
      ✓ should turn 000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000a74686520737472696e670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000b736f6d6520737472696e670000000000000000000000000000000000000000001234567890123456789012345678901234567890123456789012345678901234000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000031295810000000000000000000000000000000000000000000000000000000000 to the string,56,some string,true,0x1234567890123456789012345678901234567890123456789012345678901234,0x129581
      ✓ should turn 0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000004c0000000000000000000000000000000000000000000000000000000000000043000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000005390000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a6c61737420706172616d00000000000000000000000000000000000000000000 to true,false,true,false,true,256,76,67,1337,hello,last param
      ✓ should turn 000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000000b68656c6c6f20776f726c64000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000047768617400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000269730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000046576656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000968617070656e696e6700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002696eb676f64666f7273616b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047465737400000000000000000000000000000000000000000000000000000000 to hello world,what,is,even,happening,0x696e,0x74686973,0x676f64666f7273616b656e,test
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000000474686973000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000026973000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000076d61646e65737300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d6275742049206c6f76652069740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000106265636175736520697420776f726b7300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000112345678901234567890123456789012345678901234567890123456789012340000000000000000000000001337133713371337133713371337133713371337000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000206265636175736520697420776f726b736265636175736520697420776f726b73 to this,true,is,true,utter,true,madness,0x1234567890123456789012345678901234567890123456789012345678901234,0x6275742049206c6f7665206974,0x6265636175736520697420776f726b73,true,0x1234567890123456789012345678901234567890123456789012345678901234,0x1337133713371337133713371337133713371337,0x6265636175736520697420776f726b736265636175736520697420776f726b73
      ✓ should turn 00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000001b3f5fe0fd513e6cbdee459f0b0e19095fe91958000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001774686973206973206d6f726520726561736f6e61626c6500000000000000000000000000000000000000000000000000000000000000000000000000000000096c6f6c6f6c6f6c6f6c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d13b6e9058e58b8677233cec2315e1d9e77c79c40000000000000000000000000000000000000000000000000000000000000007abcdef1234567800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000787654321fedcba00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000662617a6261720000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000060fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000000000000000000000b1eef147028e9f480dbc5ccaa3277d417d1b85f00000000000000000000000000000000000000000000000000000000000000006666f6f6261720000000000000000000000000000000000000000000000000000 to this is more reasonable,true,false,0x1b3F5FE0Fd513E6cbdEE459F0b0e19095FE91958,0x6c6f6c6f6c6f6c6f6c,0xabcdef12345678,0x87654321fedcba,bazbar,false,0xd13b6e9058E58B8677233CEc2315e1D9e77C79C4,-6,-7,5,foobar,-8,0xB1eeF147028E9f480DbC5ccaA3277D417D1b85F0
      ✓ should turn ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae0000000000000000000000000000000000000000000000000000000000000001ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae00000000000000000000000012345678901234567890123456789012345678900000000000000000000000000000000000000000000000000000000000000160000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001234567890123456789012345678901234567890ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbaeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa28bbc0000000000000000000000000000000000000000000000000000000000015ba80ab3e6dfa1594c15af0000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000006737472696e670000000000000000000000000000000000000000000000000000 to 0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae,true,0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae,0x1234567890123456789012345678901234567890,0x0ab3e6dfa1594c15af0000000000000000000000000000000000000000000000,0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae,string,0x1234567890123456789012345678901234567890,true,0x1234567890123456789012345678901234567890,0xffffffffffffffffffffffffffffffffabdef123849181759adebfadecaefbae,-6124612,89000

  lib/solidity/coder
    encodeParameter
      ✓ should turn 0x407d73d8a49eeb85d32cf465507dd71d507100c1 to 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1 for address
      ✓ should turn 0x407d73d8a49eeb85d32cf465507dd71d507100c1,0x407d73d8a49eeb85d32cf465507dd71d507100c3 to 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3 for address[2]
      ✓ should turn 0x407d73d8a49eeb85d32cf465507dd71d507100c1,0x407d73d8a49eeb85d32cf465507dd71d507100c3 to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3 for address[]
      ✓ should turn 0x407d73d8a49eeb85d32cf465507dd71d507100c1,0x407d73d8a49eeb85d32cf465507dd71d507100c2,0x407d73d8a49eeb85d32cf465507dd71d507100c3,0x407d73d8a49eeb85d32cf465507dd71d507100c4 to 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4 for address[][2]
      ✓ should turn 0x407d73d8a49eeb85d32cf465507dd71d507100c1,0x407d73d8a49eeb85d32cf465507dd71d507100c2,0x407d73d8a49eeb85d32cf465507dd71d507100c3,0x407d73d8a49eeb85d32cf465507dd71d507100c4 to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4 for address[2][]
      ✓ should turn true to 0000000000000000000000000000000000000000000000000000000000000001 for bool
      ✓ should turn false to 0000000000000000000000000000000000000000000000000000000000000000 for bool
      ✓ should turn false,false to 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 for bool[1][2]
      ✓ should turn true,false to 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000 for bool[2]
      ✓ should turn true,true,false to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000 for bool[]
      ✓ should turn 1 to 0000000000000000000000000000000000000000000000000000000000000001 for int
      ✓ should turn 16 to 0000000000000000000000000000000000000000000000000000000000000010 for int
      ✓ should turn -1 to ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff for int
      ✓ should turn 1 to 0000000000000000000000000000000000000000000000000000000000000001 for int256
      ✓ should turn 16 to 0000000000000000000000000000000000000000000000000000000000000010 for int256
      ✓ should turn -1 to ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff for int256
      ✓ should turn 1 to 0000000000000000000000000000000000000000000000000000000000000001 for uint
      ✓ should turn 16 to 0000000000000000000000000000000000000000000000000000000000000010 for uint
      ✓ should turn 1 to 0000000000000000000000000000000000000000000000000000000000000001 for uint256
      ✓ should turn 16 to 0000000000000000000000000000000000000000000000000000000000000010 for uint256
      ✓ should turn 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff for uint256
      ✓ should turn 0x6761766f66796f726b to 6761766f66796f726b0000000000000000000000000000000000000000000000 for bytes32
      ✓ should turn 0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b for bytes32
      ✓ should turn 0x02838654a83c213dae3698391eabbd54a5b6e1fb3452bc7fa4ea0dd5c8ce7e29 to 02838654a83c213dae3698391eabbd54a5b6e1fb3452bc7fa4ea0dd5c8ce7e29 for bytes32
      ✓ should turn 0x6761766f66796f726b to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000 for bytes
      ✓ should turn 0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b for bytes
      ✓ should turn 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1 to 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000009ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff100 for bytes
      ✓ should turn gavofyork to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000 for string
      ✓ should turn Heeäööä👅D34ɝɣ24Єͽ-.,äü+#/ to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000026486565c3a4c3b6c3b6c3a4f09f9185443334c99dc9a33234d084cdbd2d2e2cc3a4c3bc2b232f0000000000000000000000000000000000000000000000000000 for string
      ✓ should turn 0xc3a40000c3a4 to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000006c3a40000c3a40000000000000000000000000000000000000000000000000000 for bytes
      ✓ should turn 0xc3a40000c3a4 to c3a40000c3a40000000000000000000000000000000000000000000000000000 for bytes32
      ✓ should turn Ã¤Ã¤ to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000008c383c2a4c383c2a4000000000000000000000000000000000000000000000000 for string
      ✓ should turn ü to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002c3bc000000000000000000000000000000000000000000000000000000000000 for string
      ✓ should turn Ã to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002c383000000000000000000000000000000000000000000000000000000000000 for string
      ✓ should turn  to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000 for int[]
      ✓ should turn 3 to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003 for int[]
      ✓ should turn 3 to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003 for int256[]
      ✓ should turn 1,2,3 to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003 for int[]
      ✓ should turn 0xcf,0x68,0x4d,0xfb to cf0000000000000000000000000000000000000000000000000000000000000068000000000000000000000000000000000000000000000000000000000000004d00000000000000000000000000000000000000000000000000000000000000fb00000000000000000000000000000000000000000000000000000000000000 for bytes1[4]
      ✓ should turn 0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000040131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b for bytes
      ✓ should turn 0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b for bytes
      ✓ should turn welcome to ethereum. welcome to ethereum. welcome to ethereum. to 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003e77656c636f6d6520746f20657468657265756d2e2077656c636f6d6520746f20657468657265756d2e2077656c636f6d6520746f20657468657265756d2e0000 for string
      ✓ should turn welcome to ethereum.,welcome to ethereum. to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001477656c636f6d6520746f20657468657265756d2e000000000000000000000000000000000000000000000000000000000000000000000000000000000000001477656c636f6d6520746f20657468657265756d2e000000000000000000000000 for tuple(string,string)
      ✓ should turn 0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001477656c636f6d6520746f20657468657265756d2e000000000000000000000000000000000000000000000000000000000000000000000000000000000000001477656c636f6d6520746f20657468657265756d2e000000000000000000000000 for tuple(bytes,bytes)
      ✓ should turn 0x77656c636f6d6520746f20657468657265756d2e,true,124515 to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001e663000000000000000000000000000000000000000000000000000000000000001477656c636f6d6520746f20657468657265756d2e000000000000000000000000 for tuple(bytes,bool,uint256)
      ✓ should turn hello,true,-151,0x0175010374017501037401750103740175010374 to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff690000000000000000000000000175010374017501037401750103740175010374000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000 for tuple(string,tuple(bool,int256),address)
      ✓ should turn true,false,0x81017589ab81017589ab81017589ab81017589ab,0x81017589ab81017589ab81017589ab81017589ab,string One,string Two to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000081017589ab81017589ab81017589ab81017589ab00000000000000000000000081017589ab81017589ab81017589ab81017589ab00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000a737472696e67204f6e6500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a737472696e672054776f00000000000000000000000000000000000000000000 for tuple(tuple(bool,bool),tuple(address,address),tuple(string,string))
      ✓ should turn false,false,0xab1394581edfa2ef9ca71,0x15abe391df19aef19a4561,0xec2270c849236333c86834728e783cd2f789088e,true,0x81017589ab81017589ab81017589ab81017589ab to 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000004000000000000000000000000081017589ab81017589ab81017589ab81017589ab0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000ec2270c849236333c86834728e783cd2f789088e000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b0ab1394581edfa2ef9ca71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b15abe391df19aef19a4561000000000000000000000000000000000000000000 for tuple(tuple(tuple(bool,bool),tuple(bytes,bytes),tuple(address,bool)),address)
      ✓ should turn true,testing,false,0x1981710abe1981710abe1981710abe1981710abe,0x1981710abe1981710abe1981710abe1981710abe to 0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001981710abe1981710abe1981710abe1981710abe0000000000000000000000001981710abe1981710abe1981710abe1981710abe000000000000000000000000000000000000000000000000000000000000000774657374696e6700000000000000000000000000000000000000000000000000 for tuple(bool,string,bool,tuple(address,address))
      ✓ should turn 0x1981710abe1981710abe1981710abe1981710abe,0x1981710abe1981710abe1981710abe1981710abe,structs are great,-1951,194018,so many possibilities to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000001981710abe1981710abe1981710abe1981710abe0000000000000000000000001981710abe1981710abe1981710abe1981710abe00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000080fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff861000000000000000000000000000000000000000000000000000000000002f5e200000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001173747275637473206172652067726561740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015736f206d616e7920706f73736962696c69746965730000000000000000000000 for tuple(address,address,tuple(string,tuple(int256,int256),string))
      ✓ should turn true,0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18,-18291849,0xabdef18710a18a18abdef18710a18a18abdef18710a18a18,0xabdef18710a18a18,false,true,false,testing testing to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18fffffffffffffffffffffffffffffffffffffffffffffffffffffffffee8e377abdef18710a18a18abdef18710a18a18abdef18710a18a180000000000000000abdef18710a18a180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000f74657374696e672074657374696e670000000000000000000000000000000000 for tuple(bool,tuple(bytes32,int256,tuple(bytes24,bytes8)),tuple(bool,bool,bool),string)

  lib/solidity/coder
    encodeParameters
      ✓ should turn 0x407d73d8a49eeb85d32cf465507dd71d507100c1,0x407d73d8a49eeb85d32cf465507dd71d507100c3 to 000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3
      ✓ should turn true,false,false,false,true to 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
      ✓ should turn 1 to 0000000000000000000000000000000000000000000000000000000000000001
      ✓ should turn 16 to 0000000000000000000000000000000000000000000000000000000000000010
      ✓ should turn -1 to ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      ✓ should turn 1 to 0000000000000000000000000000000000000000000000000000000000000001
      ✓ should turn 16 to 0000000000000000000000000000000000000000000000000000000000000010
      ✓ should turn -1 to ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      ✓ should turn 3 to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003
      ✓ should turn 3 to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003
      ✓ should turn 1,2,3 to 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003
      ✓ should turn 1,2,3,4 to 000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004
      ✓ should turn 1,2,3,4,5,6,7 to 000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c
      ✓ should turn 0x6761766f66796f726b to 6761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn gavofyork to 000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn gavofyork,gavofyork to 0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn 0x6761766f66796f726b,5 to 6761766f66796f726b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
      ✓ should turn 5,0x6761766f66796f726b to 00000000000000000000000000000000000000000000000000000000000000056761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn 5,gavofyork to 0000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn gavofyork,5 to 0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn gavofyork,true,1,2,3 to 0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003
      ✓ should turn gavofyork,1,2,3 to 0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003
      ✓ should turn 5,gavofyork to 0000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b0000000000000000000000000000000000000000000000
      ✓ should turn 1,gavofyork,2,3,4,5,6,7 to 000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000096761766f66796f726b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000007
      ✓ should turn 5,0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b,3,0x331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b431a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b to 00000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000040131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b0000000000000000000000000000000000000000000000000000000000000040331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b431a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b
      ✓ should turn 0xcf0011,0x4d00000000000000000000000000000000000000000000000000000000000012 to cf00110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000204d00000000000000000000000000000000000000000000000000000000000012
      ✓ should turn what,what what,what what to 0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000047768617400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000009776861742077686174000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000097768617420776861740000000000000000000000000000000000000000000000
      ✓ should turn 0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18,true,true,0x77656c636f6d6520746f20657468657265756d2e to abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a180000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000077656c636f6d6520746f20657468657265756d2e
      ✓ should turn 0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18,true,true,0x77656c636f6d6520746f20657468657265756d2e to abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a180000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000077656c636f6d6520746f20657468657265756d2e
      ✓ should turn 0x77656c636f6d6520746f20657468657265756d2e,148,5910,true,0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18,0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18 to 00000000000000000000000077656c636f6d6520746f20657468657265756d2e000000000000000000000000000000000000000000000000000000000000009400000000000000000000000000000000000000000000000000000000000017160000000000000000000000000000000000000000000000000000000000000001abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18
      ✓ should turn 0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,true,false,false,true,0xab1394581edfa2ef9ca71,0x15abe391df19aef19a4561,182,1937,0x77656c636f6d6520746f20657468657265756d2e to 00000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000077656c636f6d6520746f20657468657265756d2e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000077656c636f6d6520746f20657468657265756d2e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b6000000000000000000000000000000000000000000000000000000000000079100000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b0ab1394581edfa2ef9ca71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b15abe391df19aef19a4561000000000000000000000000000000000000000000
      ✓ should turn 18320,true,691,0xab1394581edfa2ef9ca71,0x15abe391df19aef19a4561,0xab1394581edfa2ef9ca71,false,0xfe,0x77656c636f6d6520746f20657468657265756d2e,0xabdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18 to 000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000047900000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002b3000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b0ab1394581edfa2ef9ca71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b15abe391df19aef19a4561000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0ab1394581edfa2ef9ca710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000077656c636f6d6520746f20657468657265756d2e0000000000000000000000000000000000000000000000000000000000000001fe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020abdef18710a18a18abdef18710a18a18abdef18710a18a18abdef18710a18a18
      ✓ should turn 0x77656c636f6d6520746f20657468657265756d2e,true,0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,-12451,-12451018,false to 00000000000000000000000077656c636f6d6520746f20657468657265756d2e000000000000000000000000000000000000000000000000000000000000000100000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000077656c636f6d6520746f20657468657265756d2effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf5dffffffffffffffffffffffffffffffffffffffffffffffffffffffffff4203360000000000000000000000000000000000000000000000000000000000000000
      ✓ should turn 0xabef15,true,false,true,0xabef15,0xcdef151,0xabfe151,0x15abe391df19aef19a4561,true,0x77656c636f6d6520746f20657468657265756d2e,1840181,-819184919,0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,-18491,false,1918491,0xabdcf151dae to 000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000003600000000000000000000000000000000000000000000000000000000000000003abef1500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000001c1435ffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf2c3ae900000000000000000000000077656c636f6d6520746f20657468657265756d2e000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000003abef15000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040cdef1510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040abfe151000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000077656c636f6d6520746f20657468657265756d2e000000000000000000000000000000000000000000000000000000000000000b15abe391df19aef19a456100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001477656c636f6d6520746f20657468657265756d2e000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb7c50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000001d461b000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000060abdcf151dae0000000000000000000000000000000000000000000000000000
      ✓ should turn 0xabef15,0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,0x77656c636f6d6520746f20657468657265756d2e,0xabef15,0x77656c636f6d6520746f20657468657265756d2e,0x81017589ab81017589ab81017589ab81017589ab,0x77656c636f6d6520746f20657468657265756d2e,0x81017589ab81017589ab81017589ab81017589ab,false to 00000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000016000000000000000000000000081017589ab81017589ab81017589ab81017589ab00000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000081017589ab81017589ab81017589ab81017589ab0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000077656c636f6d6520746f20657468657265756d2e0000000000000000000000000000000000000000000000000000000000000003abef15000000000000000000000000000000000000000000000000000000000000000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000077656c636f6d6520746f20657468657265756d2e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000077656c636f6d6520746f20657468657265756d2e0000000000000000000000000000000000000000000000000000000000000003abef150000000000000000000000000000000000000000000000000000000000
      ✓ should turn 0xabef15,0xa,0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff,0xaf,0xaf,0xbc,0xaf,0xbc,0xde to 000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000003abef15000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001af00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001af000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001bc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001af000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001bc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001de00000000000000000000000000000000000000000000000000000000000000

  async
    ✓ test callback: 0
    ✓ test promise: 0
    ✓ error test callback: 0
    ✓ error test promise: 0

  lib/conflux-web/batch
    execute
      ✓ should execute batch request
      ✓ should execute batch request for async properties
      ✓ should execute batch request with contract
      ✓ should execute batch requests and receive errors
      ✓ should propagate output formatter error to callback
      ✓ should execute batch request with provider that supports sendAsync

  cfx
    Iban
      ✓ toAddress() should transform iban to address: 0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8
      ✓ toIban() should transform address to iban: 0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8
      ✓ toAddress() should transform iban to address: 0x11c5496AEE77c1bA1f0854206a26dDa82A81D6D8
      ✓ toIban() should transform address to iban: 0x11c5496AEE77c1bA1f0854206a26dDa82A81D6D8
      ✓ toAddress() should transform iban to address: 0xa94f5374Fce5edBC8E2a8697C15331677e6EbF0B
      ✓ toIban() should transform address to iban: 0xa94f5374Fce5edBC8E2a8697C15331677e6EbF0B
      ✓ toAddress() should transform iban to address: 0xHELLO
      ✓ toIban() should transform address to iban: 0xHELLO

  decodeLog
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly

  decodeParameter
    ✓ should convert correctly
    ✓ should convert correctly

  decodeParameters
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly

  decodeParameters
    ✓ should not convert 0x to string,uint256
    ✓ should not convert 0x to [object Object],[object Object]
    ✓ should not convert 0x to string
    ✓ should not convert 0x to int256
    ✓ should not convert 0x to uint256
    ✓ should not convert 0x to bytes
    ✓ should not convert 0x to address
    ✓ should not convert 0x to bytes32
    ✓ should not convert 0x to bool

  encodeEventSignature
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly

  encodeFunctionCall
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly

  encodeFunctionSignature
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly

  encodeParameter
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly

  encodeParameters
    ✓ should convert correctly
    ✓ should convert correctly
    ✓ should convert correctly

  cfx
    accounts
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet
      ✓ create cfx.account, and compare to ethers wallet

  cfx
    accounts
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account (47ms)
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ encrypt cfx.account, and compare to ethers wallet
      ✓ encrypt cfx.account, and decrypt with ethers wallet
      ✓ encrypt ethers wallet, and decrypt with eth.account
      ✓ decrypt static signature using ethers wallet and eth.account and compare
      ✓ decrypt staticTests and compare to private key (6517ms)
      ✓ decrypt staticTests and compare to private key (293ms)
      ✓ decrypt staticTests and compare to private key
      ✓ decrypt staticTests and compare to private key

  cfx
    accounts
      ✓ sign data using a string
      ✓ sign data using a utf8 encoded hex string
      ✓ recover signature using a string
      ✓ recover signature using a string and preFixed
      ✓ recover signature using a hash and r s v values and preFixed
      ✓ recover signature (pre encoded) using a signature object
      ✓ recover signature using a signature object
      ✓ recover signature (pre encoded) using a hash and r s v values
      ✓ recover signature using a hash and r s v values
      ✓ sign data using a string
      ✓ sign data using a utf8 encoded hex string
      ✓ recover signature using a string
      ✓ recover signature using a string and preFixed
      ✓ recover signature using a hash and r s v values and preFixed
      ✓ recover signature (pre encoded) using a signature object
      ✓ recover signature using a signature object
      ✓ recover signature (pre encoded) using a hash and r s v values
      ✓ recover signature using a hash and r s v values
      ✓ sign data using a string
      ✓ sign data using a utf8 encoded hex string
      ✓ recover signature using a string
      ✓ recover signature using a string and preFixed
      ✓ recover signature using a hash and r s v values and preFixed
      ✓ recover signature (pre encoded) using a signature object
      ✓ recover signature using a signature object
      ✓ recover signature (pre encoded) using a hash and r s v values
      ✓ recover signature using a hash and r s v values

  eth
    accounts
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must compare to cfx_signTransaction
      ✓ signTransaction using the iban as "to" must compare to cfx_signTransaction
      ✓ signTransaction will call for nonce
      ✓ signTransaction will call for gasPrice
      ✓ signTransaction will call for chainId
      ✓ signTransaction will call for nonce, gasPrice and chainId
      ✓ recoverTransaction, must recover signature
      ✓ recoverTransaction, must also recover old signature from eth-signer
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error
      ✓ signTransaction must error

  cfx
    accounts.wallet
      ✓ creates the right number of wallets
      ✓ add wallet using a privatekey
      ✓ add wallet using an account
      ✓ add wallet double shouldn't work
      ✓ remove wallet using an index
      ✓ remove wallet using an address
      ✓ remove wallet using an lowercase address
      ✓ create 5 wallets, remove two, create two more and check for overwrites
      ✓ clear wallet
      ✓ remove accounts then clear wallet
      ✓ encrypt then decrypt wallet (254ms)
      ✓ creates the right number of wallets
      ✓ add wallet using a privatekey
      ✓ add wallet using an account
      ✓ add wallet double shouldn't work
      ✓ remove wallet using an index
      ✓ remove wallet using an address
      ✓ remove wallet using an lowercase address
      ✓ create 5 wallets, remove two, create two more and check for overwrites
      ✓ clear wallet
      ✓ remove accounts then clear wallet
      ✓ encrypt then decrypt wallet (245ms)

  conflux-web.cfx
    call
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1

  web3.eth
    defaultAccount
      ✓ should check if defaultAccount is set to proper value
      ✓ should set defaultAccount for all sub packages is set to proper value, if Eth package is changed
      ✓ should fail if address is invalid, wich is to be set to defaultAccount
      ✓ should have different values for two Eth instances
      ✓ should have different values for two Web3 instances

  web3.eth
    defaultBlock
      ✓ should check if defaultBlock is set to proper value
      ✓ should set defaultBlock for all sub packages is set to proper value, if Eth package is changed

  conflux-web.cfx
    estimateGas
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    getGasPrice
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    getAccounts
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1

  conflux-web.cfx
    getBalance
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1
      ✓ promise test: 2
      ✓ callback test: 2
      ✓ promise test: 3
      ✓ callback test: 3
      ✓ promise test: 4
      ✓ callback test: 4
      ✓ promise test: 5
      ✓ callback test: 5
      ✓ promise test: 6
      ✓ callback test: 6
      ✓ promise test: 7
      ✓ callback test: 7
      ✓ promise test: 8
      ✓ callback test: 8
      ✓ promise test: 9
      ✓ callback test: 9
      ✓ promise test: 10
      ✓ callback test: 10
      ✓ promise test: 11
      ✓ callback test: 11

  conflux-web.cfx
    getBlock
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1
      ✓ promise test: 2
      ✓ callback test: 2

  conflux-web.cfx
    getBlockNumber
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    getBlockTransactionCount
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1
      ✓ promise test: 2
      ✓ callback test: 2
      ✓ promise test: 3
      ✓ callback test: 3

  conflux-web.cfx
    getCode
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1
      ✓ promise test: 2
      ✓ callback test: 2

  conflux-web.cfx
    getCoinbase
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    getHashrate
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    getStorageAt
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1
      ✓ promise test: 2
      ✓ callback test: 2
      ✓ promise test: 3
      ✓ callback test: 3

  conflux-web.cfx
    getTransaction
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    getTransactionFromBlock
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1

  conflux-web.cfx
    getTransactionReceipt
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1
      ✓ promise test: 2
      ✓ callback test: 2

  conflux-web.cfx
    getWork
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    isMining
      ✓ promise test: 0
      ✓ callback test: 0

  getNetworkType
    ✓ should detect the main net
    ✓ should detect the main net
    ✓ should detect the main net
    ✓ should detect the private net
    ✓ should detect the private net
    ✓ should detect the private net

  conflux-web.cfx.net
    getPeerCount
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx.net
    isListening
      ✓ promise test: 0
      ✓ callback test: 0

  web3.net
    methods
      ✓ should have method getId implemented
      ✓ should have method getNetworkType implemented
      ✓ should have method isListening implemented
      ✓ should have method getPeerCount implemented

  conflux-web.cfx
    getProtocolVersion
      ✓ promise test: 0
      ✓ callback test: 0

  conflux-web.cfx
    sendTransaction
      ✓ promise test: 0 (105ms)
      ✓ callback test: 0
      ✓ promise test: 1 (105ms)
      ✓ callback test: 1
      ✓ promise test: 2 (106ms)
      ✓ callback test: 2
      ✓ promise test: 3 (109ms)
      ✓ callback test: 3
      ✓ promise test: 4 (106ms)
      ✓ callback test: 4
      ✓ promise test: 5 (107ms)
      ✓ callback test: 5
      ✓ promise test: 6 (108ms)
      ✓ callback test: 6
      ✓ promise test: 7
      ✓ callback test: 7

  sendTransaction
    ✓ promise test: 0 (1008ms)
    ✓ callback test: 0
    ✓ promise test: 1 (1008ms)
    ✓ callback test: 1
    ✓ promise test: 2 (1008ms)
    ✓ callback test: 2
    ✓ promise test: 3 (1006ms)
    ✓ callback test: 3
    ✓ promise test: 4
    ✓ callback test: 4
    ✓ promise test: 5
    ✓ callback test: 5
    ✓ promise test: 6
    ✓ callback test: 6
    ✓ promise test: 7
    ✓ callback test: 7

  conflux-web.cfx
    sign
      ✓ promise test: 0
      ✓ callback test: 0
      ✓ promise test: 1
      ✓ callback test: 1
      ✓ promise test: 2
      ✓ callback test: 2
      ✓ promise test: 3
      ✓ callback test: 3

  conflux-web.cfx
    submitWork
      ✓ promise test: 0
      ✓ callback test: 0

  cfx
    methods
      ✓ should have method getBalance implemented
      ✓ should have method getStorageAt implemented
      ✓ should have method getTransactionCount implemented
      ✓ should have method getCode implemented
      ✓ should have method isSyncing implemented
      ✓ should have method sendTransaction implemented
      ✓ should have method call implemented
      ✓ should have method getBlock implemented
      ✓ should have method getTransaction implemented
      ✓ should have method getBlockTransactionCount implemented
      ✓ should have method subscribe implemented
      ✓ should have method Contract implemented
      ✓ should have method Iban implemented
      ✓ should have method isMining implemented
      ✓ should have method getCoinbase implemented
      ✓ should have method getGasPrice implemented
      ✓ should have method getHashrate implemented
      ✓ should have method getAccounts implemented
      ✓ should have method getBlockNumber implemented
      ✓ should have method getProtocolVersion implemented
      ✓ should have method setProvider implemented
      ✓ should have property givenProvider implemented
      ✓ should have property defaultBlock implemented
      ✓ should have property defaultAccount implemented
      ✓ should have property net implemented
      ✓ should have method getId implemented
      ✓ should have method isListening implemented
      ✓ should have method getPeerCount implemented

  contract
    method.encodeABI
      ✓ should handle bytes32 arrays that only contain 1 byte
      ✓ should handle bytes32 arrays that are short 1 byte
      ✓ should handle bytes32 arrays that are full

  typical usage
    ✓ should update contract instance provider when assigned a provider to eth instance that contract instance came from
    ✓ should deploy a contract, sign transaction, and return contract instance (117ms)
    instantiation
      ✓ should transform address from checksum addressess
      ✓ should transform address to checksum address
      ✓ should fail on invalid address
      ✓ should fail on invalid address as options.from
      ✓ .clone() should properly clone the contract instance
    provider assignment
      ✓ should assign a provider to a new instance without modifying old instance
    internal method
      ✓ _encodeEventABI should return the encoded event object without topics
      ✓ _encodeEventABI should return the encoded event object with topics
      ✓ _encodeEventABI should return the encoded event object with topics and multiple choices
      ✓ _decodeEventABI should return the decoded event object with topics
      ✓ _decodeMethodReturn should return the decoded values
      ✓ _decodeMethodReturn should return a single decoded value
      ✓ _executeMethod as instantSealEngine should sendTransaction and check for receipts
      ✓ _executeMethod should sendTransaction and check for receipts (105ms)
      ✓ _executeMethod should call and return values
    event
      ✓ should create event subscription (109ms)
      ✓ should create event from the events object and use the fromBlock option (105ms)
      ✓ should create event from the events object using a signature and callback (102ms)
      ✓ should create event from the events object using event name and parameters (109ms)
      ✓ should create event using the  function and unsubscribe after one log received (119ms)
      ✓ should create event using the  function and unsubscribe after one log received when no options are provided (115ms)
      ✓ should throw an error when using the once() function and no callback is provided
      ✓ should create event subscription and fire the changed event, if log.removed = true (66ms)
      ✓ should create all event filter and receive two logs (116ms)
    with methods
      ✓ should change the address
      ✓ should reset functions when resetting json interface
      ✓ should encode a function call
      ✓ should encode a constructor call with pre set data
      ✓ should encode a constructor call with passed data
      ✓ should estimate a function
      ✓ should estimate the constructor
      ✓ should send with many parameters
      ✓ should send overload functions with zero parameters
      ✓ should send overload functions with one parameters
      ✓ should call constant function
      ✓ should call constant function with default block
      ✓ should call constant concurrently
      ✓ should return an error when returned string is 0x
      ✓ should return an empty string when 0x0
      ✓ should sendTransaction and check for receipts with formatted logs (111ms)
      ✓ should sendTransaction and check for receipts with formatted logs when multiple of same event (108ms)
      ✓ should sendTransaction and check for receipts with formatted logs using the HTTP provider (1010ms)
      ✓ should sendTransaction and receive multiple confirmations (114ms)
      ✓ should sendTransaction to contract function
      ✓ should throw error when trying to send ether to a non payable contract function
      ✓ should not throw error when trying to not send ether to a non payable contract function
      ✓ should sendTransaction to contract function using the function namen incl. parameters
      ✓ should sendTransaction to contract function using the signature
      ✓ should throw when trying to create a tx object and wrong amount of params
      ✓ should make a call with optional params
      ✓ should explicitly make a call with optional params
      ✓ should explicitly make a call with optional params and defaultBlock
      ✓ should sendTransaction with optional params
      ✓ should sendTransaction and fill in default gasPrice
      ✓ should explicitly sendTransaction with optional params
      ✓ should explicitly call sendTransaction with optional params and call callback without error
      ✓ should explicitly estimateGas with optional params
      ✓ getPastEvents should get past events and format them correctly
      ✓ should call testArr method and properly parse result
      ✓ should call testArr method, properly parse result and return the result in a callback
      ✓ should call owner method, properly
      ✓ should decode an struct correctly
      ✓ should call an contract method with an struct as parameter
    with data
      ✓ should deploy a contract and use callback
      ✓ should deploy a contract and use all promise steps (109ms)

  standalone usage
    instantiation
      ✓ should transform address from checksum addressess
      ✓ should transform address to checksum address
      ✓ should fail on invalid address
      ✓ should fail on invalid address as options.from
      ✓ .clone() should properly clone the contract instance
    provider assignment
      ✓ should assign a provider to a new instance without modifying old instance
    internal method
      ✓ _encodeEventABI should return the encoded event object without topics
      ✓ _encodeEventABI should return the encoded event object with topics
      ✓ _encodeEventABI should return the encoded event object with topics and multiple choices
      ✓ _decodeEventABI should return the decoded event object with topics
      ✓ _decodeMethodReturn should return the decoded values
      ✓ _decodeMethodReturn should return a single decoded value
      ✓ _executeMethod as instantSealEngine should sendTransaction and check for receipts
      ✓ _executeMethod should sendTransaction and check for receipts (109ms)
      ✓ _executeMethod should call and return values
    event
      ✓ should create event subscription (104ms)
      ✓ should create event from the events object and use the fromBlock option (107ms)
      ✓ should create event from the events object using a signature and callback (107ms)
      ✓ should create event from the events object using event name and parameters (107ms)
      ✓ should create event using the  function and unsubscribe after one log received (116ms)
      ✓ should create event using the  function and unsubscribe after one log received when no options are provided (118ms)
      ✓ should throw an error when using the once() function and no callback is provided
      ✓ should create event subscription and fire the changed event, if log.removed = true (64ms)
      ✓ should create all event filter and receive two logs (114ms)
    with methods
      ✓ should change the address
      ✓ should reset functions when resetting json interface
      ✓ should encode a function call
      ✓ should encode a constructor call with pre set data
      ✓ should encode a constructor call with passed data
      ✓ should estimate a function
      ✓ should estimate the constructor
      ✓ should send with many parameters
      ✓ should send overload functions with zero parameters
      ✓ should send overload functions with one parameters
      ✓ should call constant function
      ✓ should call constant function with default block
      ✓ should call constant concurrently
      ✓ should return an error when returned string is 0x
      ✓ should return an empty string when 0x0
      ✓ should sendTransaction and check for receipts with formatted logs (108ms)
      ✓ should sendTransaction and check for receipts with formatted logs when multiple of same event (106ms)
      ✓ should sendTransaction and check for receipts with formatted logs using the HTTP provider (1014ms)
      ✓ should sendTransaction and receive multiple confirmations (113ms)
      ✓ should sendTransaction to contract function
      ✓ should throw error when trying to send ether to a non payable contract function
      ✓ should not throw error when trying to not send ether to a non payable contract function
      ✓ should sendTransaction to contract function using the function namen incl. parameters
      ✓ should sendTransaction to contract function using the signature
      ✓ should throw when trying to create a tx object and wrong amount of params
      ✓ should make a call with optional params
      ✓ should explicitly make a call with optional params
      ✓ should explicitly make a call with optional params and defaultBlock
      ✓ should sendTransaction with optional params
      ✓ should sendTransaction and fill in default gasPrice
      ✓ should explicitly sendTransaction with optional params
      ✓ should explicitly call sendTransaction with optional params and call callback without error
      ✓ should explicitly estimateGas with optional params
      ✓ getPastEvents should get past events and format them correctly
      ✓ should call testArr method and properly parse result
      ✓ should call testArr method, properly parse result and return the result in a callback
      ✓ should call owner method, properly
      ✓ should decode an struct correctly
      ✓ should call an contract method with an struct as parameter
    with data
      ✓ should deploy a contract and use callback
      ✓ should deploy a contract and use all promise steps (107ms)

  lib/conflux-web/method
    getCall
      ✓ should return and error
      ✓ should return and error
      ✓ should return and error
      ✓ should return and error
      ✓ should return and error
      ✓ should return and error

  lib/conflux-web/event
    decode
      ✓ test no: 0
      ✓ test no: 1
      ✓ test no: 2
      ✓ test no: 3

  lib/conflux-web/event
    encode
      ✓ test no: 0
      ✓ test no: 1
      ✓ test no: 2
      ✓ test no: 3
      ✓ test no: 4
      ✓ test no: 5
      ✓ test no: 6
      ✓ test no: 7
      ✓ test no: 8

  web3
    extend
      ✓ test no: 0
      ✓ test no: 1
      ✓ test no: 2
      ✓ test no: 3

  formatters
    inputAddressFormatter correct addresses
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value

  formatters
    inputAddressFormatter wrong addresses
      ✓ should throw an exception
      ✓ should throw an exception
      ✓ should throw an exception
      ✓ should throw an exception
      ✓ should throw an exception
      ✓ should throw an exception
      ✓ should throw an exception
      ✓ should throw an exception
      ✓ should throw an exception

  lib/conflux-web/formatters
    inputDefaultBlockNumberFormatter
      ✓ should turn latest_state to latest_state
      ✓ should turn latest_mined to latest_mined
      ✓ should turn earliest to 0x0
      ✓ should turn 1 to 0x1
      ✓ should turn 0x1 to 0x1

  formatters
    inputPostFormatter
      ✓ should return the correct value

  formatters
    inputTransactionFormatter
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value
      ✓ should return the correct value

  formatters
    outputBlockFormatter
      ✓ should return the correct value
      ✓ should return the correct value, when null values are present

  formatters
    outputLogFormatter
      ✓ should return the correct value
      ✓ should return the correct value, when null values are present

  formatters
    outputPostFormatter
      ✓ should return the correct value

  formatters
    outputTransactionFormatter
      ✓ should return the correct value
      ✓ should return the correct value, when null values are present

  web3-providers-http
    prepareRequest
      ✓ should set request header
    send
      ✓ should send basic async request

  lib/conflux-web/iban
    createIndirect
      ✓ shoud create indirect iban: XE81ETHXREGGAVOFYORK

  lib/conflux-web/iban
    fromAddress
      ✓ shoud create indirect iban: XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS
      ✓ shoud create indirect iban: XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS
      ✓ shoud create indirect iban: XE1222Q908LN1QBBU6XUQSO1OHWJIOS46OO
      ✓ shoud create indirect iban: XE499OG1EH8ZZI0KXC6N83EKGT1BM97P2O7
      ✓ shoud create indirect iban: XE0600DQK33XDTYUCRI0KYM5ELAKXDWWF6

  lib/conflux-web/iban
    isValid
      ✓ shoud test if value function () {} is iban: false
      ✓ shoud test if value function anonymous(
) {

} is iban: false
      ✓ shoud test if value function is iban: false
      ✓ shoud test if value [object Object] is iban: false
      ✓ shoud test if value [] is iban: false
      ✓ shoud test if value [1, 2] is iban: false
      ✓ shoud test if value {} is iban: false
      ✓ shoud test if value {"a": 123, "b" :3,} is iban: false
      ✓ shoud test if value {"c" : 2} is iban: false
      ✓ shoud test if value XE81ETHXREGGAVOFYORK is iban: true
      ✓ shoud test if value XE82ETHXREGGAVOFYORK is iban: false
      ✓ shoud test if value XE81ETCXREGGAVOFYORK is iban: false
      ✓ shoud test if value XE81ETHXREGGAVOFYORKD is iban: false
      ✓ shoud test if value XE81ETHXREGGaVOFYORK is iban: false
      ✓ shoud test if value XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS is iban: true
      ✓ shoud test if value XE7438O073KYGTWWZN0F2WZ0R8PX5ZPPZS is iban: false
      ✓ shoud test if value XD7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS is iban: false
      ✓ shoud test if value XE1222Q908LN1QBBU6XUQSO1OHWJIOS46OO is iban: true

  lib/conflux-web/iban
    Iban.toAddress()
      ✓ shoud transform iban to address: 0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8
    iban instance address()
      ✓ shoud transform iban to address: 0x00c5496aEe77C1bA1f0854206A26DdA82a81D6D8

  lib/conflux-web/iban
    fromAddress
      ✓ shoud create indirect iban: XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS
      ✓ shoud create indirect iban: XE7338O073KYGTWWZN0F2WZ0R8PX5ZPPZS
      ✓ shoud create indirect iban: XE1222Q908LN1QBBU6XUQSO1OHWJIOS46OO
      ✓ shoud create indirect iban: XE499OG1EH8ZZI0KXC6N83EKGT1BM97P2O7
      ✓ shoud create indirect iban: XE0600DQK33XDTYUCRI0KYM5ELAKXDWWF6

  lib/conflux-web/jsonrpc
    id
      ✓ should increment the id

  jsonrpc
    isValidResponse
      ✓ should validate basic jsonrpc response
      ✓ should validate basic undefined response
      ✓ should validate jsonrpc response without jsonrpc field
      ✓ should validate jsonrpc response with wrong jsonrpc version
      ✓ should validate jsonrpc response without id number
      ✓ should validate jsonrpc response with string id field
      ✓ should validate jsonrpc response with string id field but as number
      ✓ should validate jsonrpc response without result field
      ✓ should validate jsonrpc response with result field === false
      ✓ should validate jsonrpc response with result field === 0

  jsonrpc
    toBatchPayload
      ✓ should create basic batch payload
      ✓ should create batch payload for empty input array

  jsonrpc
    toPayload
      ✓ should create basic payload
      ✓ should create payload with params

  lib/conflux-web/method
    buildCall
      ✓ should return a promise and resolve it
      ✓ should return a promise and fail it
      ✓ should return an error, if the outputFormatter returns an error
      ✓ should return an error, if the outputFormatter throws
      ✓ should fill in gasPrice if not given
      ✓ should use promise "then" when subscribing and checking for receipt if "sendTransaction" (110ms)
      ✓ should use on("receipt", ...) when subscribing and checking for receipt if "sendTransaction" (104ms)
      ✓ should use promise "then" when subscribing and checking for receipt and code if "sendTransaction" deploying contract (109ms)
      ✓ should use on("receipt", ...) when subscribing and checking  for receipt and code if "sendTransaction" deploying contract (109ms)
      ✓ should fail on promise when subscribing and check for receipt and code if "sendTransaction" and deploying contract: error if code is empty (113ms)
      ✓ should fail with on("error", ...) when subscribing and check for receipt and code if "sendTransaction" and deploying contract: error if code is empty (108ms)
      ✓ should fail on promise when subscribing and check for receipt and code if "sendTransaction" and deploying contract: error if receipt has no contract address (110ms)
      ✓ should fail with on("error", ...) when subscribing and check for receipt and code if "sendTransaction" and deploying contract: error if receipt has no contract address (110ms)
      ✓ should fail with promise when subscribing and check for receipt and code if "sendTransaction" and deploying contract: if not receipt after 50 blocks (659ms)
      ✓ should fail with on("error", ...) when subscribing and check for receipt and code if "sendTransaction" and deploying contract: if not receipt after 50 blocks (657ms)
      ✓ should give confirmation receipts with on("confirmation", ...) when subscribing "sendTransaction" (237ms)

  lib/conflux-web/method
    extractCallback
      ✓ should extract callback
      ✓ should extract callback created using newFunction
      ✓ should not extract the callback

  lib/conflux-web/method
    formatInput
      ✓ should format plain input
      ✓ should do nothing if there is no formatter

  lib/conflux-web/method
    formatOutput
      ✓ should format plain output
      ✓ should format plain output if array
      ✓ should format output arrays with the same formatter
      ✓ should do nothing if there is no formatter

  lib/conflux-web/method
    getCall
      ✓ should return call name
      ✓ should return call based on args

  lib/web3/method
    validateArgs
      ✓ should pass
      ✓ should return call based on args

  conflux-web
    automatic provider selection
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ can't autodetect the provider
      ✓ can't autodetect the provider when using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ can't autodetect the provider
      ✓ can't autodetect the provider when using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ initiates on package level
      ✓ initiates using setProvider
      ✓ can't autodetect the provider
      ✓ can't autodetect the provider when using setProvider

  lib/conflux-web/requestmanager
    send
      ✓ should return expected result asynchronously

  lib/conflux-web/setProvider
    ✓ Web3 submodules should set the provider using constructor

  lib/utils/utils
    asciiToHex
      ✓ should turn myString to 0x6d79537472696e67
      ✓ should turn myString  to 0x6d79537472696e6700
      ✓ should turn    5èÆÕL]|Î¾7«2(ÐY
<      e!ßd/ñõì:z¦Î¦±ç·÷Í¢Ëß6*ñùC1ÉUÀé2ÓB to 0x0300000035e8c6d54c5d127c9dcebe9e1a37ab9b05321128d097590a3c100000000000006521df642ff1f5ec0c3a7aa6cea6b1e7b7f7cda2cbdf07362a85088e97f19ef94331c955c0e9321ad386428c

  lib/utils/utils
    numberToHex
      ✓ should turn 1 to 0x1
      ✓ should turn 21345678976543214567869765432145647586 to 0x100f073a3d694d13d1615dc9bc3097e2
      ✓ should turn 1 to 0x1
      ✓ should turn 0x1 to 0x1
      ✓ should turn 0x01 to 0x1
      ✓ should turn 15 to 0xf
      ✓ should turn 15 to 0xf
      ✓ should turn 0xf to 0xf
      ✓ should turn 0x0f to 0xf
      ✓ should turn -1 to -0x1
      ✓ should turn -1 to -0x1
      ✓ should turn -0x1 to -0x1
      ✓ should turn -0x01 to -0x1
      ✓ should turn -15 to -0xf
      ✓ should turn -15 to -0xf
      ✓ should turn -0xf to -0xf
      ✓ should turn -0x0f to -0xf
      ✓ should turn 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      ✓ should turn 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd to 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
      ✓ should turn -0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to -0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      ✓ should turn -0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd to -0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
      ✓ should turn 0 to 0x0
      ✓ should turn 0 to 0x0
      ✓ should turn 0x0 to 0x0
      ✓ should turn 0 to 0x0
      ✓ should turn -0 to 0x0
      ✓ should turn -0x0 to 0x0

  lib/utils/utils
    fromWei
      ✓ should return the correct value

  lib/utils/utils
    isAddress
      ✓ shoud test if value function () {} is address: false
      ✓ shoud test if value function anonymous(
) {

} is address: false
      ✓ shoud test if value function is address: false
      ✓ shoud test if value [object Object] is address: false
      ✓ shoud test if value 0xc6d9d2cd449a754c494264e1809c50e34d64562b is address: true
      ✓ shoud test if value c6d9d2cd449a754c494264e1809c50e34d64562b is address: true
      ✓ shoud test if value 0xE247A45c287191d435A8a5D72A7C8dc030451E9F is address: true
      ✓ shoud test if value 0xE247a45c287191d435A8a5D72A7C8dc030451E9F is address: false
      ✓ shoud test if value 0xe247a45c287191d435a8a5d72a7c8dc030451e9f is address: true
      ✓ shoud test if value 0xE247A45C287191D435A8A5D72A7C8DC030451E9F is address: true
      ✓ shoud test if value 0XE247A45C287191D435A8A5D72A7C8DC030451E9F is address: true

  lib/utils/utils
    isBigNumber
      ✓ shoud test if value undefined is BigNumber: false
      ✓ shoud test if value undefined is BigNumber: false
      ✓ shoud test if value undefined is BigNumber: false
      ✓ shoud test if value undefined is BigNumber: false
      ✓ shoud test if value undefined is BigNumber: false
      ✓ shoud test if value undefined is BigNumber: true
      ✓ shoud test if value undefined is BigNumber: false
      ✓ shoud test if value undefined is BigNumber: false

  lib/utils/utils
    checkAddressChecksum
      ✓ shoud test if address 0x52908400098527886E0F7030069857D2E4169EE7 passes checksum: true
      ✓ shoud test if address 0x8617E340B3D01FA5F11F306F4090FD50E238070D passes checksum: true
      ✓ shoud test if address 0xde709f2102306220921060314715629080e2fb77 passes checksum: true
      ✓ shoud test if address 0x27b1fdb04752bbc536007a920d24acb045561c26 passes checksum: true
      ✓ shoud test if address 0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed passes checksum: true
      ✓ shoud test if address 0xfB6916095ca1df60bB79Ce92cE3Ea74c37c5d359 passes checksum: true
      ✓ shoud test if address 0xdbF03B407c01E7cD3CBea99509d93f8DDDC8C6FB passes checksum: true
      ✓ shoud test if address 0xD1220A0cf47c7B9Be7A2E6BA89F429762e7b9aDb passes checksum: true
      ✓ shoud test if address 0XD1220A0CF47C7B9BE7A2E6BA89F429762E7B9ADB passes checksum: false
      ✓ shoud test if address 0xd1220a0cf47c7b9be7a2e6ba89f429762e7b9adb passes checksum: false

  web3.sha3
    ✓ should return sha3 with hex prefix
    ✓ should return sha3 with hex prefix when hex input
    ✓ should return sha3 with hex prefix when hex input

  web3.soliditySha3
    ✓ should hash "true" into "0x5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2"
    ✓ should hash "{"value":true,"type":"bool"}" into "0x5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2"
    ✓ should hash "{"v":true,"t":"bool"}" into "0x5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2"
    ✓ should hash "{"v":true,"type":"bool"}" into "0x5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2"
    ✓ should hash "{"value":true,"t":"bool"}" into "0x5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2"
    ✓ should hash "false" into "0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a"
    ✓ should hash "{"value":false,"type":"bool"}" into "0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a"
    ✓ should hash "{"v":false,"t":"bool"}" into "0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a"
    ✓ should hash "{"v":false,"type":"bool"}" into "0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a"
    ✓ should hash "{"value":false,"t":"bool"}" into "0xbc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a"
    ✓ should hash ""Hello!%"" into "0x661136a4267dba9ccdf6bfddb7c00e714de936674c4bdb065a531cf1cb15c7fc"
    ✓ should hash "{"value":"Hello!%","type":"string"}" into "0x661136a4267dba9ccdf6bfddb7c00e714de936674c4bdb065a531cf1cb15c7fc"
    ✓ should hash "{"value":"Hello!%","type":"string"}" into "0x661136a4267dba9ccdf6bfddb7c00e714de936674c4bdb065a531cf1cb15c7fc"
    ✓ should hash "{"v":"Hello!%","t":"string"}" into "0x661136a4267dba9ccdf6bfddb7c00e714de936674c4bdb065a531cf1cb15c7fc"
    ✓ should hash "2345676856" into "0xc0a8dac986ad882fff6b05a7792e1259f2fd8fa72d632fb48f54affea59af6fc"
    ✓ should hash ""2345676856"" into "0xc0a8dac986ad882fff6b05a7792e1259f2fd8fa72d632fb48f54affea59af6fc"
    ✓ should hash ""8bd03038"" into "0xc0a8dac986ad882fff6b05a7792e1259f2fd8fa72d632fb48f54affea59af6fc"
    ✓ should hash ""2345676856"" into "0xc0a8dac986ad882fff6b05a7792e1259f2fd8fa72d632fb48f54affea59af6fc"
    ✓ should hash "{"v":"2345676856","t":"uint256"}" into "0xc0a8dac986ad882fff6b05a7792e1259f2fd8fa72d632fb48f54affea59af6fc"
    ✓ should hash "{"v":"8bd03038","t":"uint256"}" into "0xc0a8dac986ad882fff6b05a7792e1259f2fd8fa72d632fb48f54affea59af6fc"
    ✓ should hash "{"v":"2345676856","t":"uint"}" into "0xc0a8dac986ad882fff6b05a7792e1259f2fd8fa72d632fb48f54affea59af6fc"
    ✓ should hash ""2342342342342342342345676856"" into "0x8ac2efaaee0058e1f1fbcb59643f6799c31c27096a347651e40f98daf1905094"
    ✓ should hash ""7918a48d0493ed3da6ed838"" into "0x8ac2efaaee0058e1f1fbcb59643f6799c31c27096a347651e40f98daf1905094"
    ✓ should hash ""2.342342342342342342345676856e+27"" into "0x8ac2efaaee0058e1f1fbcb59643f6799c31c27096a347651e40f98daf1905094"
    ✓ should hash "{"v":"2342342342342342342345676856","t":"uint256"}" into "0x8ac2efaaee0058e1f1fbcb59643f6799c31c27096a347651e40f98daf1905094"
    ✓ should hash "{"v":"2342342342342342342345676856","t":"uint"}" into "0x8ac2efaaee0058e1f1fbcb59643f6799c31c27096a347651e40f98daf1905094"
    ✓ should hash "{"v":"56","t":"uint8"}" into "0xe4b1702d9298fee62dfeccc57d322a463ad55ca201256d01f62b45b2e1c21c10"
    ✓ should hash "{"v":"256","t":"uint16"}" into "0x628bf3596747d233f1e6533345700066bf458fa48daedaf04a7be6c392902476"
    ✓ should hash "{"v":"3256","t":"uint32"}" into "0x720e835027b41b4b3e057ee9e6d4351ffc726d767652cdb0fc874869df88001c"
    ✓ should hash "{"v":"454256","t":"uint64"}" into "0x5ce6ff175acd532fb4dcef362c829e74a0ce1fde4a43885cca0d257b33d06d07"
    ✓ should hash "{"v":"44454256","t":"uint128"}" into "0x372b694bc0f2dd9229f39b3892621a6ae3ffe111c5096a0a9253c34558a92ab8"
    ✓ should hash "{"v":"44454256","t":"int128"}" into "0x372b694bc0f2dd9229f39b3892621a6ae3ffe111c5096a0a9253c34558a92ab8"
    ✓ should hash "{"v":"3435454256","t":"uint160"}" into "0x89e0942df3602c010e0252becbbe1b4053bd4a871a021c02d8ab9878f1194b6b"
    ✓ should hash ""0x2345435675432144555ffffffffdd222222222222224444556553522"" into "0xb7ecb0d74e96b792a62b4a9dad28f5b1795417a89679562178b1987e0767e009"
    ✓ should hash "{"v":"0x2345435675432144555ffffffffdd222222222222224444556553522","t":"bytes"}" into "0xb7ecb0d74e96b792a62b4a9dad28f5b1795417a89679562178b1987e0767e009"
    ✓ should hash "{"v":"2345435675432144555ffffffffdd222222222222224444556553522","t":"bytes"}" into "0xb7ecb0d74e96b792a62b4a9dad28f5b1795417a89679562178b1987e0767e009"
    ✓ should hash "{"error":true,"v":"0x2345435675432144555ffffffffdd22222222222222444455655352","t":"bytes"}" into "0xb7ecb0d74e96b792a62b4a9dad28f5b1795417a89679562178b1987e0767e009"
    ✓ should hash "-3435454256" into "0x858d68fc4ad9f80dc5ee9571c7076298f8139d1d111e0955426de9381b10a061"
    ✓ should hash ""-ccc4df30"" into "0x858d68fc4ad9f80dc5ee9571c7076298f8139d1d111e0955426de9381b10a061"
    ✓ should hash ""-ccc4df30"" into "0x858d68fc4ad9f80dc5ee9571c7076298f8139d1d111e0955426de9381b10a061"
    ✓ should hash ""-3435454256"" into "0x858d68fc4ad9f80dc5ee9571c7076298f8139d1d111e0955426de9381b10a061"
    ✓ should hash "{"v":"-3435454256","t":"int"}" into "0x858d68fc4ad9f80dc5ee9571c7076298f8139d1d111e0955426de9381b10a061"
    ✓ should hash "{"v":"-3435454256","t":"int256"}" into "0x858d68fc4ad9f80dc5ee9571c7076298f8139d1d111e0955426de9381b10a061"
    ✓ should hash "{"v":"-36","t":"int8"}" into "0xd1023f33bbf70407fe1e7011c03159e2efe16e44fa97b4a8d50bc4acbfd6ce23"
    ✓ should hash "{"v":"0x22","t":"bytes2"}" into "0xb07fb0a3471486f9ccb02aab1d525df60d82925cb2d27860f923e655d76f35fc"
    ✓ should hash "{"v":"22","t":"bytes2"}" into "0xb07fb0a3471486f9ccb02aab1d525df60d82925cb2d27860f923e655d76f35fc"
    ✓ should hash "{"error":true,"v":"0x222222","t":"bytes2"}" into "0xb07fb0a3471486f9ccb02aab1d525df60d82925cb2d27860f923e655d76f35fc"
    ✓ should hash "{"v":"0x44222266","t":"bytes4"}" into "0x7cdb669d75710eb06b9b34618e77206db56f0cc71698f246433ce8339ed8075b"
    ✓ should hash "{"v":"44222266","t":"bytes4"}" into "0x7cdb669d75710eb06b9b34618e77206db56f0cc71698f246433ce8339ed8075b"
    ✓ should hash "{"v":"0x44555ffffffffdd222222222222224444556553522","t":"bytes32"}" into "0x5aac5a7501e071c3ee062ede777be470acb4cd05a2724146438d7e4518d91677"
    ✓ should hash "{"v":"44555ffffffffdd222222222222224444556553522","t":"bytes32"}" into "0x5aac5a7501e071c3ee062ede777be470acb4cd05a2724146438d7e4518d91677"
    ✓ should hash ""0x407D73d8a49eeb85D32Cf465507dd71d507100c1"" into "0x4e8ebbefa452077428f93c9520d3edd60594ff452a29ac7d2ccc11d47f3ab95b"
    ✓ should hash ""0x407d73d8a49eeb85D32Cf465507dd71d507100c1"" into "0x4e8ebbefa452077428f93c9520d3edd60594ff452a29ac7d2ccc11d47f3ab95b"
    ✓ should hash "{"v":"0x407D73d8a49eeb85D32Cf465507dd71d507100c1","t":"address"}" into "0x4e8ebbefa452077428f93c9520d3edd60594ff452a29ac7d2ccc11d47f3ab95b"
    ✓ should hash "{"error":true,"v":"0x407d73d8a49eeb85D32Cf465507dd71d507100c1","t":"address"}" into "0x4e8ebbefa452077428f93c9520d3edd60594ff452a29ac7d2ccc11d47f3ab95b"
    ✓ should hash "{"v":"0x407D73d8a49eeb85D32Cf465507dd71d507100c1","t":"bytes"}" into "0x4e8ebbefa452077428f93c9520d3edd60594ff452a29ac7d2ccc11d47f3ab95b"
    ✓ should hash "{"v":"0x407D73d8a49eeb85D32Cf465507dd71d507100c1","t":"bytes20"}" into "0x4e8ebbefa452077428f93c9520d3edd60594ff452a29ac7d2ccc11d47f3ab95b"
    ✓ should hash "{"v":"36","t":"int8"}" into "0xb104e6a8e5e1477c7a8346486401cbd4f10ab4840a4201066d9b59b747cb6f88"
    ✓ should hash "{"v":"36","t":"int256"}" into "0x7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec4"
    ✓ should hash "{"v":[-12,243],"t":"int[]"}" into "0xa9805b78a6ec1d71c3722498d521fde9d3913c92360e3aed06a9403db25f0351"
    ✓ should hash "{"v":[-12,243],"t":"int256[]"}" into "0xa9805b78a6ec1d71c3722498d521fde9d3913c92360e3aed06a9403db25f0351"
    ✓ should hash "{"v":["-12","243"],"t":"int256[]"}" into "0xa9805b78a6ec1d71c3722498d521fde9d3913c92360e3aed06a9403db25f0351"
    ✓ should hash "{"v":["-c","f3"],"t":"int256[]"}" into "0xa9805b78a6ec1d71c3722498d521fde9d3913c92360e3aed06a9403db25f0351"
    ✓ should hash "{"v":["-12","243"],"t":"int256[2]"}" into "0xa9805b78a6ec1d71c3722498d521fde9d3913c92360e3aed06a9403db25f0351"
    ✓ should hash "{"v":[12,243],"t":"uint[]"}" into "0x74282b2d1a7a1a70af6f3a43ab576cd6feeaa6ebaa5fb2033b90d5942bf48a60"
    ✓ should hash "{"v":[12,243],"t":"uint256[]"}" into "0x74282b2d1a7a1a70af6f3a43ab576cd6feeaa6ebaa5fb2033b90d5942bf48a60"
    ✓ should hash "{"v":["12","243"],"t":"uint256[]"}" into "0x74282b2d1a7a1a70af6f3a43ab576cd6feeaa6ebaa5fb2033b90d5942bf48a60"
    ✓ should hash "{"v":["c","f3"],"t":"uint256[]"}" into "0x74282b2d1a7a1a70af6f3a43ab576cd6feeaa6ebaa5fb2033b90d5942bf48a60"
    ✓ should hash "{"v":["12","243"],"t":"uint256[2]"}" into "0x74282b2d1a7a1a70af6f3a43ab576cd6feeaa6ebaa5fb2033b90d5942bf48a60"
    ✓ should hash "{"error":true,"v":["12","243"],"t":"uint256[1]"}" into "0x74282b2d1a7a1a70af6f3a43ab576cd6feeaa6ebaa5fb2033b90d5942bf48a60"
    ✓ should hash "{"v":["0x234656","0x23434234234ffff456"],"t":"bytes32[]"}" into "0x3f67732837541dd9e3aa29cb99d88839fceccf9486b3ec053d82d339d35c79d5"
    ✓ should hash "{"v":"0x234656","t":"bytes16"}" into "0x5d0d56c5b556a2dfee96b3de4717b3bd0333b7ffa5932e208fdcc24a03bdf088"
    ✓ should hash "{"v":"234656","t":"bytes16"}" into "0x5d0d56c5b556a2dfee96b3de4717b3bd0333b7ffa5932e208fdcc24a03bdf088"
    ✓ should hash "{"v":["0x234656","0x23434234234ffff456"],"t":"bytes16[]"}" into "0x3f67732837541dd9e3aa29cb99d88839fceccf9486b3ec053d82d339d35c79d5"
    ✓ should hash "{"v":["234656","23434234234ffff456"],"t":"bytes16[]"}" into "0x3f67732837541dd9e3aa29cb99d88839fceccf9486b3ec053d82d339d35c79d5"
    ✓ should hash "{"v":["0x407D73d8a49eeb85D32Cf465507dd71d507100c1","0x85F43D8a49eeB85d32Cf465507DD71d507100C1d"],"t":"address[]"}" into "0x1dcd26e646452836052e2a57400510aa63e07aede06fa43660cb6054edacfce0"
    ✓ should hash "{"v":["0x407D73d8a49eeb85D32Cf465507dd71d507100c1","0x85F43D8a49eeB85d32Cf465507DD71d507100C1d"],"t":"address[2]"}" into "0x1dcd26e646452836052e2a57400510aa63e07aede06fa43660cb6054edacfce0"
    ✓ should hash "{"error":true,"v":["0x407d73d8a49eeb85D32Cf465507dd71d507100c1","0x85F43D8a49eeB85d32Cf465507DD71d507100C1d"],"t":"address[]"}" into "0x1dcd26e646452836052e2a57400510aa63e07aede06fa43660cb6054edacfce0"
    ✓ should hash "{"error":true,"v":["0x407D73d8a49eeb85D32Cf465507dd71d507100c1","0x85F43D8a49eeB85d32Cf465507DD71d507100C1d"],"t":"address[4]"}" into "0x1dcd26e646452836052e2a57400510aa63e07aede06fa43660cb6054edacfce0"
    ✓ should hash "{"v":0,"t":"uint"}" into "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563"
    ✓ should hash "["someValue"]" into ""
    ✓ should hash mixed boolean values in any order
    ✓ should hash mixed string and number values in any order
    ✓ should hash mixed number types in any order
    ✓ should hash mixed number types addresses and boolean in any order
    ✓ should hash mixed number arrays addresses and boolean in any order

  lib/utils/utils
    hexToAscii
      ✓ should turn 0x6d79537472696e67 to myString
      ✓ should turn 0x6d79537472696e6700 to myString 
      ✓ should turn 0x0300000035e8c6d54c5d127c9dcebe9e1a37ab9b05321128d097590a3c100000000000006521df642ff1f5ec0c3a7aa6cea6b1e7b7f7cda2cbdf07362a85088e97f19ef94331c955c0e9321ad386428c to    5èÆÕL]|Î¾7«2(ÐY
<      e!ßd/ñõì:z¦Î¦±ç·÷Í¢Ëß6*ñùC1ÉUÀé2ÓB

  lib/utils/utils
    toBN
      ✓ should turn 1 to 1
      ✓ should turn 1 to 1
      ✓ should turn 0x1 to 1
      ✓ should turn 0x01 to 1
      ✓ should turn 15 to 15
      ✓ should turn 15 to 15
      ✓ should turn 0xf to 15
      ✓ should turn 0x0f to 15
      ✓ should turn 15 to 15
      ✓ should turn -1 to -1
      ✓ should turn -1 to -1
      ✓ should turn -0x1 to -1
      ✓ should turn -0x01 to -1
      ✓ should turn -15 to -15
      ✓ should turn -15 to -15
      ✓ should turn -0xf to -15
      ✓ should turn -0x0f to -15
      ✓ should turn 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to 115792089237316195423570985008687907853269984665640564039457584007913129639935
      ✓ should turn 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd to 115792089237316195423570985008687907853269984665640564039457584007913129639933
      ✓ should turn -0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to -115792089237316195423570985008687907853269984665640564039457584007913129639935
      ✓ should turn -0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd to -115792089237316195423570985008687907853269984665640564039457584007913129639933
      ✓ should turn 0 to 0
      ✓ should turn 0 to 0
      ✓ should turn 0x0 to 0
      ✓ should turn 0 to 0
      ✓ should turn -0 to 0
      ✓ should turn -0x0 to 0
      ✓ should turn 0 to 0

  lib/utils/utils
    toHex
      ✓ should turn 1 to 0x1
      ✓ should turn 1 to 0x1
      ✓ should turn 0x1 to 0x1
      ✓ should turn 15 to 0xf
      ✓ should turn 0xf to 0xf
      ✓ should turn -1 to -0x1
      ✓ should turn -1 to -0x1
      ✓ should turn -0x1 to -0x1
      ✓ should turn -15 to -0xf
      ✓ should turn -0xf to -0xf
      ✓ should turn 0x657468657265756d to 0x657468657265756d
      ✓ should turn 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd to 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
      ✓ should turn -0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff to -0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      ✓ should turn -0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd to -0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd
      ✓ should turn 0 to 0x0
      ✓ should turn 0 to 0x0
      ✓ should turn 0x0 to 0x0
      ✓ should turn 0 to 0x0
      ✓ should turn -0 to 0x0
      ✓ should turn -0x0 to 0x0
      ✓ should turn 1,2,3,[object Object] to 0x5b312c322c332c7b2274657374223a2264617461227d5d
      ✓ should turn [object Object] to 0x7b2274657374223a2274657374227d
      ✓ should turn {"test": "test"} to 0x7b2274657374223a202274657374227d
      ✓ should turn myString to 0x6d79537472696e67
      ✓ should turn myString 34534! to 0x6d79537472696e6720333435333421
      ✓ should turn 15 to 0xf
      ✓ should turn 15 to 0xf
      ✓ should turn Heeäööä👅D34ɝɣ24Єͽ-.,äü+#/ to 0x486565c3a4c3b6c3b6c3a4f09f9185443334c99dc9a33234d084cdbd2d2e2cc3a4c3bc2b232f
      ✓ should turn true to 0x01
      ✓ should turn false to 0x00
      ✓ should turn ff   5èÆÕL]|Î¾7«2(ÐY
<      e!ßd/ñõì:z¦Î¦±ç·÷Í¢Ëß6*ñùC1ÉUÀé2ÓB to 0x66660300000035c3a8c386c3954c5d127cc29dc38ec2bec29e1a37c2abc29b05321128c390c297590a3c100000000000006521c39f642fc3b1c3b5c3ac0c3a7ac2a6c38ec2a6c2b1c3a7c2b7c3b7c38dc2a2c38bc39f07362ac28508c28ec297c3b1c29ec3b94331c38955c380c3a9321ac393c28642c28c
      ✓ should turn    5èÆÕL]|Î¾7«2(ÐY
<      e!ßd/ñõì:z¦Î¦±ç·÷Í¢Ëß6*ñùC1ÉUÀé2ÓB to 0x0300000035c3a8c386c3954c5d127cc29dc38ec2bec29e1a37c2abc29b05321128c390c297590a3c100000000000006521c39f642fc3b1c3b5c3ac0c3a7ac2a6c38ec2a6c2b1c3a7c2b7c3b7c38dc2a2c38bc39f07362ac28508c28ec297c3b1c29ec3b94331c38955c380c3a9321ac393c28642c28c
      ✓ should turn 내가 제일 잘 나가 to 0xeb82b4eab08020eca09cec9dbc20ec9e9820eb8298eab080

  lib/utils/utils
    hexToNumberString
      ✓ should return the correct value

  lib/utils/utils
    hexToNumberString
      ✓ should return the correct value

  lib/utils/utils
    toTwosComplement
      ✓ printing 1
      ✓ printing 1
      ✓ printing 0x1
      ✓ printing 15
      ✓ printing 0xf
      ✓ printing -1
      ✓ printing -1
      ✓ printing -0x1
      ✓ printing -15
      ✓ printing -0xf
      ✓ printing 0
      ✓ printing 0
      ✓ printing 0x0
      ✓ printing 0
      ✓ printing -0
      ✓ printing -0x0
      ✓ printing 15

  lib/utils/utils
    hexToUtf8
      ✓ should turn 0x486565c3a4c3b6c3b6c3a4f09f9185443334c99dc9a33234d084cdbd2d2e2cc3a4c3bc2b232f to Heeäööä👅D34ɝɣ24Єͽ-.,äü+#/
      ✓ should turn 0x6d79537472696e67 to myString
      ✓ should turn 0x6d79537472696e6700 to myString
      ✓ should turn 0x65787065637465642076616c7565000000000000000000000000000000000000 to expected value
      ✓ should turn 0x000000000000000000000000000000000000657870656374000065642076616c7565 to expect  ed value

  lib/utils/utils
    toWei
      ✓ should return the correct value

  lib/utils/utils
    utf8ToHex
      ✓ should turn Heeäööä👅D34ɝɣ24Єͽ-.,äü+#/ to 0x486565c3a4c3b6c3b6c3a4f09f9185443334c99dc9a33234d084cdbd2d2e2cc3a4c3bc2b232f
      ✓ should turn myString to 0x6d79537472696e67
      ✓ should turn myString  to 0x6d79537472696e67
      ✓ should turn expected value    to 0x65787065637465642076616c7565
      ✓ should turn expect  ed value    to 0x657870656374000065642076616c7565
      ✓ should turn 我能吞下玻璃而不伤身体。 to 0xe68891e883bde5909ee4b88be78ebbe79283e8808ce4b88de4bca4e8baabe4bd93e38082
      ✓ should turn 나는 유리를 먹을 수 있어요. 그래도 아프지 않아요 to 0xeb8298eb8a9420ec9ca0eba6aceba5bc20eba8b9ec9d8420ec889820ec9e88ec96b4ec9a942e20eab7b8eb9e98eb8f8420ec9584ed9484eca78020ec958aec9584ec9a94

  utils
    methods
      ✓ should have method sha3 implemented
      ✓ should have method hexToAscii implemented
      ✓ should have method asciiToHex implemented
      ✓ should have method hexToNumberString implemented
      ✓ should have method numberToHex implemented
      ✓ should have method fromWei implemented
      ✓ should have method toWei implemented
      ✓ should have method toBN implemented
      ✓ should have method isAddress implemented

  conflux-web
    methods
      ✓ should have method setProvider implemented
      ✓ should have property givenProvider implemented
      ✓ should have property cfx implemented
      ✓ should have property utils implemented


  2361 passing (26s)


=============================== Coverage summary ===============================
Statements   : 79.38% ( 1513/1906 )
Branches     : 68.92% ( 756/1097 )
Functions    : 79.45% ( 259/326 )
Lines        : 79.53% ( 1511/1900 )
================================================================================
[debug] "2019-09-05T03:29:40.238Z"  'TN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-cfx-abi/src/index.js\nFN:28,(anonymous_1)\nFN:36,Result\nFN:42,(anonymous_3)\nFN:52,(anonymous_4)\nFN:67,(anonymous_5)\nFN:83,(anonymous_6)\nFN:95,(anonymous_7)\nFN:106,(anonymous_8)\nFN:109,(anonymous_9)\nFN:137,(anonymous_10)\nFN:148,(anonymous_11)\nFN:166,(anonymous_12)\nFN:169,(anonymous_13)\nFN:200,(anonymous_14)\nFN:212,(anonymous_15)\nFN:224,(anonymous_16)\nFN:233,(anonymous_17)\nFN:258,(anonymous_18)\nFN:270,(anonymous_19)\nFN:272,(anonymous_20)\nFN:289,(anonymous_21)\nFNF:21\nFNH:18\nFNDA:909,(anonymous_1)\nFNDA:353,Result\nFNDA:1,(anonymous_3)\nFNDA:1505,(anonymous_4)\nFNDA:276,(anonymous_5)\nFNDA:85,(anonymous_6)\nFNDA:225,(anonymous_7)\nFNDA:527,(anonymous_8)\nFNDA:703,(anonymous_9)\nFNDA:703,(anonymous_10)\nFNDA:0,(anonymous_11)\nFNDA:0,(anonymous_12)\nFNDA:0,(anonymous_13)\nFNDA:3,(anonymous_14)\nFNDA:174,(anonymous_15)\nFNDA:313,(anonymous_16)\nFNDA:392,(anonymous_17)\nFNDA:52,(anonymous_18)\nFNDA:190,(anonymous_19)\nFNDA:300,(anonymous_20)\nFNDA:190,(anonymous_21)\nDA:24,1\nDA:25,1\nDA:27,1\nDA:28,1\nDA:29,909\nDA:30,267\nDA:32,642\nDA:36,1\nDA:42,1\nDA:52,1\nDA:53,1505\nDA:54,7\nDA:57,1505\nDA:67,1\nDA:68,276\nDA:69,3\nDA:72,276\nDA:83,1\nDA:84,85\nDA:95,1\nDA:96,225\nDA:106,1\nDA:107,527\nDA:108,527\nDA:109,527\nDA:110,703\nDA:111,0\nDA:112,0\nDA:121,0\nDA:124,703\nDA:127,527\nDA:137,1\nDA:138,703\nDA:148,1\nDA:149,0\nDA:151,0\nDA:152,0\nDA:153,0\nDA:156,0\nDA:166,1\nDA:167,0\nDA:168,0\nDA:169,0\nDA:170,0\nDA:171,0\nDA:180,0\nDA:183,0\nDA:189,0\nDA:200,1\nDA:201,3\nDA:212,1\nDA:213,174\nDA:224,1\nDA:225,313\nDA:226,11\nDA:229,302\nDA:230,301\nDA:231,301\nDA:233,301\nDA:234,392\nDA:235,392\nDA:237,392\nDA:239,392\nDA:240,131\nDA:243,392\nDA:246,301\nDA:258,1\nDA:259,52\nDA:260,52\nDA:262,52\nDA:264,52\nDA:265,52\nDA:266,52\nDA:270,52\nDA:271,190\nDA:272,101\nDA:273,300\nDA:275,101\nDA:277,89\nDA:282,52\nDA:283,52\nDA:285,52\nDA:286,52\nDA:289,52\nDA:290,190\nDA:292,190\nDA:293,89\nDA:295,190\nDA:296,101\nDA:299,190\nDA:300,190\nDA:303,190\nDA:306,52\nDA:309,1\nDA:311,1\nLF:95\nLH:79\nBRDA:29,1,0,267\nBRDA:29,1,1,642\nBRDA:29,2,0,909\nBRDA:29,2,1,291\nBRDA:29,2,2,267\nBRDA:29,2,3,267\nBRDA:53,3,0,7\nBRDA:53,3,1,1498\nBRDA:68,4,0,3\nBRDA:68,4,1,273\nBRDA:110,5,0,0\nBRDA:110,5,1,703\nBRDA:138,6,0,703\nBRDA:138,6,1,277\nBRDA:138,6,2,273\nBRDA:151,7,0,0\nBRDA:151,7,1,0\nBRDA:170,8,0,0\nBRDA:170,8,1,0\nBRDA:225,9,0,11\nBRDA:225,9,1,302\nBRDA:225,10,0,313\nBRDA:225,10,1,313\nBRDA:225,10,2,311\nBRDA:225,10,3,302\nBRDA:235,11,0,1\nBRDA:235,11,1,391\nBRDA:239,12,0,131\nBRDA:239,12,1,261\nBRDA:239,13,0,392\nBRDA:239,13,1,135\nBRDA:260,14,0,52\nBRDA:260,14,1,0\nBRDA:262,15,0,52\nBRDA:262,15,1,3\nBRDA:271,16,0,101\nBRDA:271,16,1,89\nBRDA:272,17,0,99\nBRDA:272,17,1,2\nBRDA:283,18,0,49\nBRDA:283,18,1,3\nBRDA:290,19,0,4\nBRDA:290,19,1,186\nBRDA:292,20,0,89\nBRDA:292,20,1,101\nBRDA:295,21,0,101\nBRDA:295,21,1,89\nBRDA:299,22,0,190\nBRDA:299,22,1,0\nBRF:49\nBRH:42\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-utils/src/index.js\nFN:43,(anonymous_1)\nFN:68,(anonymous_2)\nFN:71,(anonymous_3)\nFN:78,(anonymous_4)\nFN:94,(anonymous_5)\nFN:111,(anonymous_6)\nFN:116,(anonymous_7)\nFN:155,(anonymous_8)\nFN:179,(anonymous_9)\nFN:202,(anonymous_10)\nFN:231,(anonymous_11)\nFN:263,(anonymous_12)\nFN:283,(anonymous_13)\nFNF:13\nFNH:13\nFNDA:15,(anonymous_1)\nFNDA:8,(anonymous_2)\nFNDA:15,(anonymous_3)\nFNDA:8,(anonymous_4)\nFNDA:1793,(anonymous_5)\nFNDA:1928,(anonymous_6)\nFNDA:2761,(anonymous_7)\nFNDA:3,(anonymous_8)\nFNDA:3,(anonymous_9)\nFNDA:41,(anonymous_10)\nFNDA:12,(anonymous_11)\nFNDA:29,(anonymous_12)\nFNDA:469,(anonymous_13)\nDA:25,3\nDA:26,3\nDA:27,3\nDA:28,3\nDA:29,3\nDA:43,3\nDA:47,15\nDA:48,0\nDA:49,0\nDA:52,0\nDA:55,15\nDA:56,0\nDA:59,15\nDA:60,5\nDA:62,15\nDA:65,15\nDA:68,8\nDA:71,15\nDA:72,15\nDA:76,15\nDA:78,8\nDA:79,8\nDA:80,8\nDA:84,15\nDA:94,3\nDA:95,1793\nDA:96,0\nDA:99,1793\nDA:111,3\nDA:114,1928\nDA:116,1928\nDA:117,2761\nDA:118,135\nDA:119,0\nDA:121,135\nDA:122,135\nDA:123,135\nDA:124,135\nDA:126,135\nDA:128,0\nDA:130,135\nDA:132,135\nDA:136,0\nDA:140,2626\nDA:144,1928\nDA:155,3\nDA:156,3\nDA:157,0\nDA:159,3\nDA:160,3\nDA:161,3\nDA:162,3\nDA:164,3\nDA:165,97\nDA:166,97\nDA:169,3\nDA:179,3\nDA:180,3\nDA:181,0\nDA:182,3\nDA:183,3\nDA:184,97\nDA:185,97\nDA:186,97\nDA:189,3\nDA:202,3\nDA:203,41\nDA:204,41\nDA:205,1\nDA:207,40\nDA:231,3\nDA:232,12\nDA:234,12\nDA:235,0\nDA:238,12\nDA:263,3\nDA:264,29\nDA:266,28\nDA:267,0\nDA:270,28\nDA:283,3\nDA:284,469\nDA:286,467\nDA:287,0\nDA:291,467\nDA:292,467\nDA:293,467\nDA:295,467\nDA:297,18680\nDA:298,9314\nDA:300,9366\nDA:303,467\nDA:308,3\nLF:93\nLH:80\nBRDA:47,1,0,0\nBRDA:47,1,1,15\nBRDA:47,2,0,15\nBRDA:47,2,1,15\nBRDA:47,2,2,3\nBRDA:48,3,0,0\nBRDA:48,3,1,0\nBRDA:48,4,0,0\nBRDA:48,4,1,0\nBRDA:55,5,0,0\nBRDA:55,5,1,15\nBRDA:59,6,0,5\nBRDA:59,6,1,10\nBRDA:62,7,0,15\nBRDA:62,7,1,0\nBRDA:65,8,0,8\nBRDA:65,8,1,7\nBRDA:65,9,0,15\nBRDA:65,9,1,15\nBRDA:65,9,2,8\nBRDA:65,9,3,12\nBRDA:76,10,0,8\nBRDA:76,10,1,7\nBRDA:76,11,0,15\nBRDA:76,11,1,15\nBRDA:95,12,0,0\nBRDA:95,12,1,1793\nBRDA:95,13,0,1793\nBRDA:95,13,1,1793\nBRDA:95,13,2,1793\nBRDA:117,14,0,135\nBRDA:117,14,1,2626\nBRDA:118,15,0,0\nBRDA:118,15,1,135\nBRDA:123,16,0,0\nBRDA:123,16,1,135\nBRDA:126,17,0,0\nBRDA:126,17,1,135\nBRDA:126,18,0,135\nBRDA:126,18,1,135\nBRDA:130,19,0,135\nBRDA:130,19,1,0\nBRDA:156,20,0,0\nBRDA:156,20,1,3\nBRDA:161,21,0,3\nBRDA:161,21,1,0\nBRDA:180,22,0,0\nBRDA:180,22,1,3\nBRDA:186,23,0,16\nBRDA:186,23,1,81\nBRDA:203,24,0,41\nBRDA:203,24,1,0\nBRDA:204,25,0,1\nBRDA:204,25,1,40\nBRDA:234,26,0,0\nBRDA:234,26,1,12\nBRDA:234,27,0,12\nBRDA:234,27,1,12\nBRDA:238,28,0,0\nBRDA:238,28,1,12\nBRDA:266,29,0,0\nBRDA:266,29,1,28\nBRDA:266,30,0,28\nBRDA:266,30,1,28\nBRDA:270,31,0,0\nBRDA:270,31,1,28\nBRDA:284,32,0,2\nBRDA:284,32,1,467\nBRDA:286,33,0,0\nBRDA:286,33,1,467\nBRDA:297,34,0,9314\nBRDA:297,34,1,9366\nBRF:72\nBRH:51\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web/src/index.js\nFN:40,ConfluxWeb\nFN:55,(anonymous_2)\nFNF:2\nFNH:2\nFNDA:221,ConfluxWeb\nFNDA:17,(anonymous_2)\nDA:31,1\nDA:32,1\nDA:33,1\nDA:34,1\nDA:38,1\nDA:40,1\nDA:41,221\nDA:44,221\nDA:46,220\nDA:47,220\nDA:49,220\nDA:54,220\nDA:55,220\nDA:56,17\nDA:58,16\nDA:62,16\nDA:66,1\nDA:67,1\nDA:68,1\nDA:76,1\nDA:78,1\nLF:21\nLH:21\nBRF:0\nBRH:0\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core/src/index.js\nFN:30,(anonymous_1)\nFN:40,(anonymous_2)\nFN:43,(anonymous_3)\nFN:68,(anonymous_4)\nFN:81,(anonymous_5)\nFNF:5\nFNH:4\nFNDA:3280,(anonymous_1)\nFNDA:1624,(anonymous_2)\nFNDA:0,(anonymous_3)\nFNDA:286,(anonymous_4)\nFNDA:3,(anonymous_5)\nDA:26,1\nDA:27,1\nDA:29,1\nDA:31,3280\nDA:33,3280\nDA:34,0\nDA:39,3280\nDA:41,1624\nDA:44,0\nDA:51,3280\nDA:52,268\nDA:56,3012\nDA:57,3012\nDA:61,3277\nDA:62,3277\nDA:64,3277\nDA:67,3277\nDA:68,2779\nDA:69,286\nDA:70,283\nDA:71,283\nDA:76,3277\nDA:79,3277\nDA:82,3\nDA:83,3\nLF:25\nLH:23\nBRDA:33,1,0,0\nBRDA:33,1,1,3280\nBRDA:51,2,0,268\nBRDA:51,2,1,3012\nBRDA:51,3,0,3280\nBRDA:51,3,1,1757\nBRDA:67,4,0,2779\nBRDA:67,4,1,498\nBRF:8\nBRH:7\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-requestmanager/src/index.js\nFN:40,RequestManager\nFN:66,(anonymous_2)\nFN:98,requestManagerNotification\nFN:124,(anonymous_4)\nFN:125,(anonymous_5)\nFN:132,(anonymous_6)\nFN:158,(anonymous_7)\nFN:164,(anonymous_8)\nFN:187,(anonymous_9)\nFN:207,(anonymous_10)\nFN:227,(anonymous_11)\nFN:232,(anonymous_12)\nFNF:12\nFNH:10\nFNDA:3281,RequestManager\nFNDA:6579,(anonymous_2)\nFNDA:798,requestManagerNotification\nFNDA:712,(anonymous_4)\nFNDA:41,(anonymous_5)\nFNDA:712,(anonymous_6)\nFNDA:6,(anonymous_7)\nFNDA:6,(anonymous_8)\nFNDA:45,(anonymous_9)\nFNDA:41,(anonymous_10)\nFNDA:0,(anonymous_11)\nFNDA:0,(anonymous_12)\nDA:26,1\nDA:27,1\nDA:28,1\nDA:29,1\nDA:30,1\nDA:40,1\nDA:41,3281\nDA:42,3281\nDA:44,3281\nDA:45,3281\nDA:50,1\nDA:52,1\nDA:66,1\nDA:67,6579\nDA:70,6579\nDA:73,77\nDA:74,22\nDA:77,55\nDA:78,27\nDA:81,28\nDA:82,22\nDA:84,6\nDA:85,6\nDA:90,6573\nDA:91,0\nDA:94,6573\nDA:97,6573\nDA:98,1860\nDA:99,798\nDA:102,798\nDA:103,175\nDA:124,1\nDA:125,712\nDA:127,712\nDA:128,0\nDA:131,712\nDA:132,712\nDA:133,712\nDA:135,712\nDA:136,3\nDA:139,709\nDA:140,0\nDA:143,709\nDA:144,0\nDA:147,709\nDA:158,1\nDA:159,6\nDA:160,0\nDA:163,6\nDA:164,6\nDA:165,6\nDA:166,0\nDA:169,6\nDA:170,0\nDA:173,6\nDA:187,1\nDA:188,45\nDA:189,45\nDA:196,0\nDA:207,1\nDA:208,41\nDA:210,41\nDA:212,41\nDA:218,41\nDA:227,1\nDA:228,0\nDA:232,0\nDA:233,0\nDA:234,0\nDA:239,0\nDA:240,0\nDA:243,1\nLF:72\nLH:58\nBRDA:70,1,0,77\nBRDA:70,1,1,6502\nBRDA:70,2,0,6579\nBRDA:70,2,1,2027\nBRDA:70,2,2,77\nBRDA:73,3,0,22\nBRDA:73,3,1,55\nBRDA:77,4,0,27\nBRDA:77,4,1,28\nBRDA:81,5,0,22\nBRDA:81,5,1,6\nBRDA:81,6,0,28\nBRDA:81,6,1,28\nBRDA:81,6,2,22\nBRDA:84,7,0,6\nBRDA:84,7,1,0\nBRDA:90,8,0,0\nBRDA:90,8,1,6573\nBRDA:90,9,0,6573\nBRDA:90,9,1,223\nBRDA:94,10,0,6573\nBRDA:94,10,1,4552\nBRDA:97,11,0,1860\nBRDA:97,11,1,4713\nBRDA:97,12,0,6573\nBRDA:97,12,1,2021\nBRDA:99,13,0,798\nBRDA:99,13,1,0\nBRDA:102,14,0,175\nBRDA:102,14,1,623\nBRDA:102,15,0,798\nBRDA:102,15,1,798\nBRDA:102,15,2,175\nBRDA:125,16,0,712\nBRDA:125,16,1,41\nBRDA:127,17,0,0\nBRDA:127,17,1,712\nBRDA:132,18,0,0\nBRDA:132,18,1,712\nBRDA:133,19,0,0\nBRDA:133,19,1,712\nBRDA:133,20,0,712\nBRDA:133,20,1,712\nBRDA:133,20,2,712\nBRDA:135,21,0,3\nBRDA:135,21,1,709\nBRDA:139,22,0,0\nBRDA:139,22,1,709\nBRDA:139,23,0,709\nBRDA:139,23,1,709\nBRDA:143,24,0,0\nBRDA:143,24,1,709\nBRDA:159,25,0,0\nBRDA:159,25,1,6\nBRDA:164,26,0,1\nBRDA:164,26,1,5\nBRDA:165,27,0,0\nBRDA:165,27,1,6\nBRDA:169,28,0,0\nBRDA:169,28,1,6\nBRDA:188,29,0,45\nBRDA:188,29,1,0\nBRDA:210,30,0,41\nBRDA:210,30,1,0\nBRDA:233,31,0,0\nBRDA:233,31,1,0\nBRDA:233,32,0,0\nBRDA:233,32,1,0\nBRDA:239,33,0,0\nBRDA:239,33,1,0\nBRF:70\nBRH:51\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-helpers/src/index.js\nFNF:0\nFNH:0\nDA:25,3\nDA:26,3\nDA:28,3\nLF:3\nLH:3\nBRF:0\nBRH:0\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-helpers/src/errors.js\nFN:27,(anonymous_1)\nFN:31,(anonymous_2)\nFN:34,(anonymous_3)\nFN:37,(anonymous_4)\nFN:40,(anonymous_5)\nFN:44,(anonymous_6)\nFNF:6\nFNH:3\nFNDA:2,(anonymous_1)\nFNDA:6,(anonymous_2)\nFNDA:0,(anonymous_3)\nFNDA:0,(anonymous_4)\nFNDA:0,(anonymous_5)\nFNDA:6,(anonymous_6)\nDA:26,3\nDA:28,2\nDA:29,2\nDA:32,6\nDA:35,0\nDA:38,0\nDA:41,0\nDA:42,0\nDA:45,6\nLF:9\nLH:5\nBRDA:28,1,0,2\nBRDA:28,1,1,0\nBRDA:28,2,0,2\nBRDA:28,2,1,2\nBRDA:28,2,2,2\nBRDA:41,3,0,0\nBRDA:41,3,1,0\nBRDA:41,4,0,0\nBRDA:41,4,1,0\nBRDA:41,4,2,0\nBRF:10\nBRH:4\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-cfx-iban/src/index.js\nFN:32,(anonymous_1)\nFN:48,(anonymous_2)\nFN:55,(anonymous_3)\nFN:73,(anonymous_4)\nFN:90,Iban\nFN:101,(anonymous_6)\nFN:118,(anonymous_7)\nFN:129,(anonymous_8)\nFN:151,(anonymous_9)\nFN:167,(anonymous_10)\nFN:178,(anonymous_11)\nFN:189,(anonymous_12)\nFN:200,(anonymous_13)\nFN:210,(anonymous_14)\nFN:221,(anonymous_15)\nFN:232,(anonymous_16)\nFN:243,(anonymous_17)\nFN:253,(anonymous_18)\nFN:263,(anonymous_19)\nFNF:19\nFNH:15\nFNDA:13,(anonymous_1)\nFNDA:49,(anonymous_2)\nFNDA:1588,(anonymous_3)\nFNDA:49,(anonymous_4)\nFNDA:682,Iban\nFNDA:5,(anonymous_6)\nFNDA:9,(anonymous_7)\nFNDA:14,(anonymous_8)\nFNDA:14,(anonymous_9)\nFNDA:1,(anonymous_10)\nFNDA:18,(anonymous_11)\nFNDA:656,(anonymous_12)\nFNDA:64,(anonymous_13)\nFNDA:0,(anonymous_14)\nFNDA:0,(anonymous_15)\nFNDA:0,(anonymous_16)\nFNDA:0,(anonymous_17)\nFNDA:30,(anonymous_18)\nFNDA:8,(anonymous_19)\nDA:28,3\nDA:29,3\nDA:32,3\nDA:33,13\nDA:34,13\nDA:35,4\nDA:37,13\nDA:48,3\nDA:49,49\nDA:50,49\nDA:52,49\nDA:53,49\nDA:55,49\nDA:56,1588\nDA:57,1588\nDA:59,1095\nDA:61,493\nDA:73,3\nDA:74,49\nDA:77,49\nDA:78,383\nDA:79,383\nDA:82,49\nDA:90,3\nDA:91,682\nDA:101,3\nDA:102,5\nDA:104,5\nDA:105,1\nDA:108,4\nDA:118,3\nDA:119,9\nDA:129,3\nDA:130,14\nDA:131,1\nDA:134,13\nDA:136,13\nDA:137,13\nDA:138,13\nDA:139,13\nDA:151,3\nDA:152,14\nDA:154,14\nDA:155,14\nDA:157,14\nDA:167,3\nDA:168,1\nDA:178,3\nDA:179,18\nDA:180,18\nDA:189,3\nDA:190,656\nDA:200,3\nDA:201,64\nDA:210,3\nDA:211,0\nDA:221,3\nDA:222,0\nDA:232,3\nDA:233,0\nDA:243,3\nDA:244,0\nDA:253,3\nDA:254,30\nDA:255,30\nDA:256,30\nDA:257,30\nDA:260,0\nDA:263,3\nDA:264,8\nDA:267,3\nLF:71\nLH:66\nBRDA:57,1,0,1095\nBRDA:57,1,1,493\nBRDA:57,2,0,1588\nBRDA:57,2,1,1095\nBRDA:104,3,0,1\nBRDA:104,3,1,4\nBRDA:130,4,0,1\nBRDA:130,4,1,13\nBRDA:190,5,0,656\nBRDA:190,5,1,35\nBRDA:201,6,0,64\nBRDA:201,6,1,35\nBRDA:233,7,0,0\nBRDA:233,7,1,0\nBRDA:244,8,0,0\nBRDA:244,8,1,0\nBRDA:254,9,0,30\nBRDA:254,9,1,0\nBRF:18\nBRH:13\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-requestmanager/src/jsonrpc.js\nFN:40,(anonymous_1)\nFN:63,(anonymous_2)\nFN:66,validateSingleMessage\nFN:82,(anonymous_4)\nFN:83,(anonymous_5)\nFNF:5\nFNH:5\nFNDA:731,(anonymous_1)\nFNDA:730,(anonymous_2)\nFNDA:730,validateSingleMessage\nFNDA:8,(anonymous_4)\nFNDA:15,(anonymous_5)\nDA:28,1\nDA:40,1\nDA:41,731\nDA:42,0\nDA:46,731\nDA:48,731\nDA:63,1\nDA:64,730\nDA:66,1\nDA:67,730\nDA:82,1\nDA:83,8\nDA:84,15\nDA:88,1\nLF:14\nLH:13\nBRDA:41,1,0,0\nBRDA:41,1,1,731\nBRDA:52,2,0,731\nBRDA:52,2,1,4\nBRDA:64,3,0,0\nBRDA:64,3,1,730\nBRDA:67,4,0,730\nBRDA:67,4,1,729\nBRDA:67,4,2,729\nBRDA:67,4,3,727\nBRDA:67,4,4,3\nBRDA:67,4,5,726\nBRF:12\nBRH:10\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-requestmanager/src/batch.js\nFN:28,(anonymous_1)\nFN:39,(anonymous_2)\nFN:48,(anonymous_3)\nFN:50,(anonymous_4)\nFN:52,(anonymous_5)\nFN:54,(anonymous_6)\nFNF:6\nFNH:6\nFNDA:6,(anonymous_1)\nFNDA:13,(anonymous_2)\nFNDA:6,(anonymous_3)\nFNDA:6,(anonymous_4)\nFNDA:13,(anonymous_5)\nFNDA:13,(anonymous_6)\nDA:25,1\nDA:26,1\nDA:28,1\nDA:29,6\nDA:30,6\nDA:39,1\nDA:40,13\nDA:48,1\nDA:49,6\nDA:50,6\nDA:51,6\nDA:52,6\nDA:53,13\nDA:55,13\nDA:56,13\nDA:57,2\nDA:60,11\nDA:61,0\nDA:64,11\nDA:65,11\nDA:67,1\nDA:74,1\nLF:22\nLH:21\nBRDA:51,1,0,6\nBRDA:51,1,1,0\nBRDA:53,2,0,13\nBRDA:53,2,1,0\nBRDA:55,3,0,13\nBRDA:55,3,1,0\nBRDA:56,4,0,2\nBRDA:56,4,1,11\nBRDA:56,5,0,13\nBRDA:56,5,1,13\nBRDA:60,6,0,0\nBRDA:60,6,1,11\nBRDA:65,7,0,11\nBRDA:65,7,1,0\nBRF:14\nBRH:9\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-requestmanager/src/givenProvider.js\nFN:53,(anonymous_1)\nFN:60,(anonymous_2)\nFNF:2\nFNH:0\nFNDA:0,(anonymous_1)\nFNDA:0,(anonymous_2)\nDA:25,1\nDA:29,1\nDA:30,1\nDA:31,1\nDA:33,0\nDA:37,1\nDA:38,0\nDA:41,1\nDA:43,0\nDA:44,0\nDA:45,0\nDA:49,0\nDA:53,0\nDA:55,0\nDA:56,0\nDA:58,0\nDA:60,0\nDA:61,0\nDA:63,0\nDA:65,0\nDA:66,0\nDA:68,0\nDA:72,0\nDA:73,0\nDA:77,0\nDA:80,0\nDA:81,0\nDA:86,0\nDA:91,1\nLF:29\nLH:7\nBRDA:37,1,0,0\nBRDA:37,1,1,1\nBRDA:41,2,0,0\nBRDA:41,2,1,1\nBRDA:41,3,0,1\nBRDA:41,3,1,0\nBRDA:43,4,0,0\nBRDA:43,4,1,0\nBRDA:49,5,0,0\nBRDA:49,5,1,0\nBRDA:49,6,0,0\nBRDA:49,6,1,0\nBRDA:49,6,2,0\nBRDA:55,7,0,0\nBRDA:55,7,1,0\nBRDA:58,8,0,0\nBRDA:58,8,1,0\nBRDA:72,9,0,0\nBRDA:72,9,1,0\nBRDA:72,10,0,0\nBRDA:72,10,1,0\nBRF:21\nBRH:3\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-providers-ws/src/index.js\nFN:34,(anonymous_1)\nFN:41,(anonymous_2)\nFN:51,(anonymous_3)\nFN:60,WebsocketProvider\nFN:100,(anonymous_5)\nFN:104,(anonymous_6)\nFN:110,(anonymous_7)\nFN:120,(anonymous_8)\nFN:135,(anonymous_9)\nFN:147,(anonymous_10)\nFN:150,(anonymous_11)\nFN:154,(anonymous_12)\nFN:172,(anonymous_13)\nFN:184,(anonymous_14)\nFN:201,(anonymous_15)\nFN:227,(anonymous_16)\nFN:238,(anonymous_17)\nFN:252,(anonymous_18)\nFN:262,(anonymous_19)\nFN:266,(anonymous_20)\nFN:297,(anonymous_21)\nFN:334,(anonymous_22)\nFN:339,(anonymous_23)\nFN:359,(anonymous_24)\nFN:390,(anonymous_25)\nFN:401,(anonymous_26)\nFNF:26\nFNH:9\nFNDA:5,(anonymous_1)\nFNDA:27,(anonymous_2)\nFNDA:0,(anonymous_3)\nFNDA:27,WebsocketProvider\nFNDA:0,(anonymous_5)\nFNDA:0,(anonymous_6)\nFNDA:0,(anonymous_7)\nFNDA:0,(anonymous_8)\nFNDA:0,(anonymous_9)\nFNDA:54,(anonymous_10)\nFNDA:27,(anonymous_11)\nFNDA:27,(anonymous_12)\nFNDA:0,(anonymous_13)\nFNDA:0,(anonymous_14)\nFNDA:0,(anonymous_15)\nFNDA:0,(anonymous_16)\nFNDA:0,(anonymous_17)\nFNDA:81,(anonymous_18)\nFNDA:0,(anonymous_19)\nFNDA:0,(anonymous_20)\nFNDA:50,(anonymous_21)\nFNDA:0,(anonymous_22)\nFNDA:0,(anonymous_23)\nFNDA:0,(anonymous_24)\nFNDA:27,(anonymous_25)\nFNDA:0,(anonymous_26)\nDA:25,1\nDA:26,1\nDA:27,1\nDA:29,1\nDA:31,1\nDA:32,1\nDA:33,1\nDA:34,1\nDA:35,5\nDA:37,1\nDA:38,1\nDA:40,1\nDA:41,1\nDA:42,27\nDA:47,0\nDA:50,0\nDA:51,0\nDA:52,0\nDA:60,1\nDA:61,27\nDA:62,0\nDA:65,27\nDA:66,27\nDA:67,27\nDA:69,27\nDA:70,27\nDA:75,27\nDA:76,27\nDA:77,27\nDA:78,27\nDA:79,5\nDA:83,27\nDA:87,27\nDA:91,27\nDA:92,0\nDA:94,27\nDA:96,27\nDA:100,27\nDA:102,0\nDA:104,0\nDA:106,0\nDA:109,0\nDA:110,0\nDA:111,0\nDA:112,0\nDA:115,0\nDA:119,0\nDA:120,0\nDA:121,0\nDA:122,0\nDA:126,0\nDA:127,0\nDA:128,0\nDA:134,27\nDA:136,0\nDA:147,1\nDA:148,54\nDA:150,54\nDA:151,27\nDA:154,54\nDA:155,27\nDA:158,27\nDA:172,1\nDA:173,0\nDA:177,0\nDA:184,0\nDA:187,0\nDA:188,0\nDA:190,0\nDA:192,0\nDA:193,0\nDA:197,0\nDA:200,0\nDA:201,0\nDA:202,0\nDA:203,0\nDA:206,0\nDA:210,0\nDA:211,0\nDA:213,0\nDA:214,0\nDA:217,0\nDA:227,1\nDA:228,0\nDA:229,0\nDA:231,0\nDA:232,0\nDA:234,0\nDA:237,0\nDA:238,0\nDA:239,0\nDA:240,0\nDA:241,0\nDA:252,1\nDA:253,81\nDA:254,0\nDA:255,0\nDA:256,0\nDA:262,1\nDA:263,0\nDA:265,0\nDA:266,0\nDA:267,0\nDA:269,0\nDA:275,0\nDA:276,0\nDA:277,0\nDA:278,0\nDA:280,0\nDA:282,0\nDA:283,0\nDA:286,0\nDA:287,0\nDA:297,1\nDA:299,50\nDA:300,0\nDA:302,50\nDA:304,50\nDA:305,50\nDA:308,0\nDA:309,0\nDA:312,0\nDA:313,0\nDA:316,0\nDA:317,0\nDA:334,1\nDA:335,0\nDA:337,0\nDA:339,0\nDA:340,0\nDA:341,0\nDA:343,0\nDA:359,1\nDA:360,0\nDA:362,0\nDA:363,0\nDA:368,0\nDA:369,0\nDA:372,0\nDA:373,0\nDA:376,0\nDA:377,0\nDA:381,0\nDA:390,1\nDA:391,27\nDA:392,27\nDA:398,27\nDA:401,1\nDA:402,0\nDA:403,0\nDA:407,1\nLF:151\nLH:58\nBRDA:29,1,0,1\nBRDA:29,1,1,0\nBRDA:33,2,0,1\nBRDA:33,2,1,0\nBRDA:38,3,0,1\nBRDA:38,3,1,0\nBRDA:61,4,0,0\nBRDA:61,4,1,27\nBRDA:69,5,0,27\nBRDA:69,5,1,27\nBRDA:76,6,0,27\nBRDA:76,6,1,27\nBRDA:77,7,0,27\nBRDA:77,7,1,27\nBRDA:78,8,0,5\nBRDA:78,8,1,22\nBRDA:78,9,0,27\nBRDA:78,9,1,5\nBRDA:83,10,0,27\nBRDA:83,10,1,27\nBRDA:87,11,0,27\nBRDA:87,11,1,27\nBRDA:91,12,0,0\nBRDA:91,12,1,27\nBRDA:102,13,0,0\nBRDA:102,13,1,0\nBRDA:109,14,0,0\nBRDA:109,14,1,0\nBRDA:111,15,0,0\nBRDA:111,15,1,0\nBRDA:119,16,0,0\nBRDA:119,16,1,0\nBRDA:119,17,0,0\nBRDA:119,17,1,0\nBRDA:119,17,2,0\nBRDA:119,17,3,0\nBRDA:121,18,0,0\nBRDA:121,18,1,0\nBRDA:126,19,0,0\nBRDA:126,19,1,0\nBRDA:136,20,0,0\nBRDA:136,20,1,0\nBRDA:187,21,0,0\nBRDA:187,21,1,0\nBRDA:213,22,0,0\nBRDA:213,22,1,0\nBRDA:228,23,0,0\nBRDA:228,23,1,0\nBRDA:229,24,0,0\nBRDA:229,24,1,0\nBRDA:237,25,0,0\nBRDA:237,25,1,0\nBRDA:239,26,0,0\nBRDA:239,26,1,0\nBRDA:254,27,0,0\nBRDA:254,27,1,0\nBRDA:265,28,0,0\nBRDA:265,28,1,0\nBRDA:275,29,0,0\nBRDA:275,29,1,0\nBRDA:277,30,0,0\nBRDA:277,30,1,0\nBRDA:299,31,0,0\nBRDA:299,31,1,50\nBRDA:302,32,0,50\nBRDA:302,32,1,0\nBRDA:302,32,2,0\nBRDA:302,32,3,0\nBRDA:337,33,0,0\nBRDA:340,34,0,0\nBRDA:340,34,1,0\nBRDA:360,35,0,0\nBRDA:360,35,1,0\nBRDA:360,35,2,0\nBRDA:360,35,3,0\nBRDA:360,35,4,0\nBRDA:402,36,0,0\nBRDA:402,36,1,0\nBRF:78\nBRH:21\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-providers-http/src/index.js\nFN:34,HttpProvider\nFN:52,(anonymous_2)\nFN:65,(anonymous_3)\nFN:80,(anonymous_4)\nFN:84,(anonymous_5)\nFN:100,(anonymous_6)\nFN:113,(anonymous_7)\nFNF:7\nFNH:5\nFNDA:24,HttpProvider\nFNDA:2,(anonymous_2)\nFNDA:1,(anonymous_3)\nFNDA:1,(anonymous_4)\nFNDA:1,(anonymous_5)\nFNDA:0,(anonymous_6)\nFNDA:0,(anonymous_7)\nDA:25,2\nDA:26,2\nDA:27,2\nDA:28,2\nDA:34,2\nDA:35,24\nDA:37,24\nDA:41,24\nDA:42,24\nDA:43,0\nDA:45,24\nDA:47,24\nDA:48,24\nDA:49,24\nDA:52,2\nDA:53,2\nDA:54,2\nDA:59,2\nDA:60,2\nDA:61,2\nDA:62,2\nDA:64,2\nDA:65,1\nDA:66,1\nDA:70,2\nDA:80,2\nDA:81,1\nDA:82,1\nDA:84,1\nDA:85,1\nDA:86,1\nDA:87,1\nDA:89,1\nDA:90,1\nDA:92,0\nDA:95,1\nDA:96,1\nDA:100,1\nDA:101,0\nDA:102,0\nDA:105,1\nDA:106,1\nDA:108,0\nDA:109,0\nDA:113,2\nDA:118,2\nLF:46\nLH:40\nBRDA:35,1,0,24\nBRDA:35,1,1,23\nBRDA:38,2,0,24\nBRDA:38,2,1,0\nBRDA:38,3,0,24\nBRDA:38,3,1,24\nBRDA:41,4,0,24\nBRDA:41,4,1,1\nBRDA:42,5,0,0\nBRDA:42,5,1,24\nBRDA:47,6,0,24\nBRDA:47,6,1,24\nBRDA:61,7,0,0\nBRDA:61,7,1,2\nBRDA:61,8,0,2\nBRDA:61,8,1,0\nBRDA:64,9,0,1\nBRDA:64,9,1,1\nBRDA:85,10,0,1\nBRDA:85,10,1,0\nBRDA:85,11,0,1\nBRDA:85,11,1,1\nBRF:22\nBRH:17\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-providers-ipc/src/index.js\nFN:30,IpcProvider\nFN:42,(anonymous_2)\nFN:49,(anonymous_3)\nFN:59,(anonymous_4)\nFN:76,(anonymous_5)\nFN:87,(anonymous_6)\nFN:90,(anonymous_7)\nFN:94,(anonymous_8)\nFN:98,(anonymous_9)\nFN:102,(anonymous_10)\nFN:106,(anonymous_11)\nFN:120,(anonymous_12)\nFN:132,(anonymous_13)\nFN:149,(anonymous_14)\nFN:175,(anonymous_15)\nFN:188,(anonymous_16)\nFN:202,(anonymous_17)\nFN:207,(anonymous_18)\nFN:224,(anonymous_19)\nFN:248,(anonymous_20)\nFN:263,(anonymous_21)\nFN:268,(anonymous_22)\nFN:286,(anonymous_23)\nFN:303,(anonymous_24)\nFNF:24\nFNH:6\nFNDA:22,IpcProvider\nFNDA:0,(anonymous_2)\nFNDA:0,(anonymous_3)\nFNDA:0,(anonymous_4)\nFNDA:0,(anonymous_5)\nFNDA:22,(anonymous_6)\nFNDA:0,(anonymous_7)\nFNDA:22,(anonymous_8)\nFNDA:22,(anonymous_9)\nFNDA:0,(anonymous_10)\nFNDA:0,(anonymous_11)\nFNDA:0,(anonymous_12)\nFNDA:0,(anonymous_13)\nFNDA:0,(anonymous_14)\nFNDA:0,(anonymous_15)\nFNDA:22,(anonymous_16)\nFNDA:0,(anonymous_17)\nFNDA:0,(anonymous_18)\nFNDA:40,(anonymous_19)\nFNDA:0,(anonymous_20)\nFNDA:0,(anonymous_21)\nFNDA:0,(anonymous_22)\nFNDA:0,(anonymous_23)\nFNDA:0,(anonymous_24)\nDA:25,2\nDA:26,2\nDA:27,2\nDA:30,2\nDA:31,22\nDA:32,22\nDA:33,22\nDA:34,22\nDA:35,22\nDA:37,22\nDA:39,22\nDA:42,22\nDA:45,0\nDA:48,0\nDA:49,0\nDA:50,0\nDA:51,0\nDA:54,0\nDA:58,0\nDA:59,0\nDA:60,0\nDA:61,0\nDA:65,0\nDA:66,0\nDA:67,0\nDA:72,22\nDA:73,0\nDA:76,22\nDA:77,0\nDA:87,2\nDA:88,22\nDA:90,22\nDA:91,0\nDA:94,22\nDA:95,22\nDA:98,22\nDA:99,22\nDA:102,22\nDA:103,0\nDA:106,22\nDA:107,0\nDA:120,2\nDA:121,0\nDA:125,0\nDA:132,0\nDA:135,0\nDA:136,0\nDA:138,0\nDA:140,0\nDA:141,0\nDA:145,0\nDA:148,0\nDA:149,0\nDA:150,0\nDA:151,0\nDA:154,0\nDA:158,0\nDA:159,0\nDA:161,0\nDA:162,0\nDA:165,0\nDA:175,2\nDA:176,0\nDA:177,0\nDA:179,0\nDA:180,0\nDA:188,2\nDA:189,22\nDA:190,0\nDA:191,0\nDA:192,0\nDA:202,2\nDA:203,0\nDA:207,2\nDA:209,0\nDA:210,0\nDA:213,0\nDA:214,0\nDA:224,2\nDA:226,40\nDA:227,0\nDA:229,40\nDA:231,40\nDA:232,40\nDA:236,0\nDA:237,0\nDA:248,2\nDA:250,0\nDA:251,0\nDA:253,0\nDA:263,2\nDA:264,0\nDA:266,0\nDA:268,0\nDA:269,0\nDA:270,0\nDA:272,0\nDA:275,0\nDA:276,0\nDA:286,2\nDA:287,0\nDA:289,0\nDA:290,0\nDA:293,0\nDA:294,0\nDA:303,2\nDA:304,0\nDA:305,0\nDA:307,0\nDA:308,0\nDA:309,0\nDA:311,0\nDA:314,2\nLF:113\nLH:39\nBRDA:48,1,0,0\nBRDA:48,1,1,0\nBRDA:50,2,0,0\nBRDA:50,2,1,0\nBRDA:58,3,0,0\nBRDA:58,3,1,0\nBRDA:58,4,0,0\nBRDA:58,4,1,0\nBRDA:60,5,0,0\nBRDA:60,5,1,0\nBRDA:65,6,0,0\nBRDA:65,6,1,0\nBRDA:72,7,0,0\nBRDA:72,7,1,22\nBRDA:135,8,0,0\nBRDA:135,8,1,0\nBRDA:161,9,0,0\nBRDA:161,9,1,0\nBRDA:176,10,0,0\nBRDA:176,10,1,0\nBRDA:177,11,0,0\nBRDA:177,11,1,0\nBRDA:190,12,0,0\nBRDA:190,12,1,0\nBRDA:209,13,0,0\nBRDA:209,13,1,0\nBRDA:226,14,0,0\nBRDA:226,14,1,40\nBRDA:229,15,0,40\nBRDA:229,15,1,0\nBRDA:250,16,0,0\nBRDA:250,16,1,0\nBRDA:266,17,0,0\nBRDA:266,17,1,0\nBRDA:269,18,0,0\nBRDA:269,18,1,0\nBRDA:287,19,0,0\nBRDA:287,19,1,0\nBRF:38\nBRH:3\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core/src/extend.js\nFN:31,(anonymous_1)\nFN:33,(anonymous_2)\nFN:46,(anonymous_3)\nFNF:3\nFNH:3\nFNDA:3277,(anonymous_1)\nFNDA:4,(anonymous_2)\nFNDA:6,(anonymous_3)\nDA:26,1\nDA:27,1\nDA:28,1\nDA:31,1\nDA:33,3277\nDA:35,4\nDA:36,4\nDA:37,1\nDA:38,1\nDA:40,1\nDA:42,3\nDA:45,4\nDA:46,4\nDA:47,6\nDA:48,6\nDA:51,4\nDA:52,4\nDA:56,2\nDA:59,3277\nDA:60,3277\nDA:61,3277\nDA:63,3277\nDA:68,1\nLF:23\nLH:23\nBRDA:36,1,0,1\nBRDA:36,1,1,3\nBRDA:37,2,0,1\nBRDA:37,2,1,0\nBRDA:45,3,0,4\nBRDA:45,3,1,0\nBRDA:47,4,0,6\nBRDA:47,4,1,0\nBRF:8\nBRH:5\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-method/src/index.js\nFN:37,Method\nFN:60,(anonymous_2)\nFN:70,(anonymous_3)\nFN:79,(anonymous_4)\nFN:98,(anonymous_5)\nFN:109,(anonymous_6)\nFN:122,(anonymous_7)\nFN:135,(anonymous_8)\nFN:142,(anonymous_9)\nFN:155,(anonymous_10)\nFN:159,(anonymous_11)\nFN:174,(anonymous_12)\nFN:194,(anonymous_13)\nFN:240,(anonymous_14)\nFN:247,(anonymous_15)\nFN:252,(anonymous_16)\nFN:260,(anonymous_17)\nFN:266,(anonymous_18)\nFN:298,(anonymous_19)\nFN:313,(anonymous_20)\nFN:349,(anonymous_21)\nFN:384,(anonymous_22)\nFN:413,(anonymous_23)\nFN:425,(anonymous_24)\nFN:437,(anonymous_25)\nFN:444,(anonymous_26)\nFN:463,(anonymous_27)\nFN:469,(anonymous_28)\nFN:475,(anonymous_29)\nFN:516,(anonymous_30)\nFN:528,(anonymous_31)\nFN:580,(anonymous_32)\nFN:609,(anonymous_33)\nFNF:33\nFNH:31\nFNDA:15665,Method\nFNDA:15512,(anonymous_2)\nFNDA:88,(anonymous_3)\nFNDA:15544,(anonymous_4)\nFNDA:614,(anonymous_5)\nFNDA:613,(anonymous_6)\nFNDA:610,(anonymous_7)\nFNDA:612,(anonymous_8)\nFNDA:686,(anonymous_9)\nFNDA:605,(anonymous_10)\nFNDA:20,(anonymous_11)\nFNDA:610,(anonymous_12)\nFNDA:69,(anonymous_13)\nFNDA:207,(anonymous_14)\nFNDA:197,(anonymous_15)\nFNDA:12,(anonymous_16)\nFNDA:0,(anonymous_17)\nFNDA:197,(anonymous_18)\nFNDA:65,(anonymous_19)\nFNDA:7,(anonymous_20)\nFNDA:65,(anonymous_21)\nFNDA:132,(anonymous_22)\nFNDA:67,(anonymous_23)\nFNDA:69,(anonymous_24)\nFNDA:0,(anonymous_25)\nFNDA:11,(anonymous_26)\nFNDA:15650,(anonymous_27)\nFNDA:603,(anonymous_28)\nFNDA:595,(anonymous_29)\nFNDA:7,(anonymous_30)\nFNDA:599,(anonymous_31)\nFNDA:7,(anonymous_32)\nFNDA:7,(anonymous_33)\nDA:26,1\nDA:27,1\nDA:28,1\nDA:29,1\nDA:30,1\nDA:31,1\nDA:33,1\nDA:34,1\nDA:35,1\nDA:37,1\nDA:39,15665\nDA:40,2\nDA:43,15663\nDA:44,15663\nDA:45,15663\nDA:46,15663\nDA:47,15663\nDA:48,15663\nDA:49,15663\nDA:51,15663\nDA:54,15663\nDA:56,15663\nDA:57,15663\nDA:60,1\nDA:61,15512\nDA:64,15512\nDA:65,9282\nDA:70,1\nDA:71,88\nDA:72,88\nDA:74,88\nDA:76,88\nDA:79,1\nDA:80,15544\nDA:81,15544\nDA:82,15544\nDA:83,15544\nDA:84,0\nDA:85,0\nDA:87,15544\nDA:98,1\nDA:99,614\nDA:109,1\nDA:110,613\nDA:111,119\nDA:122,1\nDA:123,610\nDA:124,2\nDA:135,1\nDA:136,612\nDA:138,612\nDA:139,95\nDA:142,517\nDA:144,686\nDA:155,1\nDA:156,605\nDA:158,605\nDA:159,10\nDA:160,20\nDA:163,595\nDA:174,1\nDA:175,610\nDA:176,610\nDA:177,610\nDA:178,606\nDA:180,606\nDA:186,606\nDA:187,8\nDA:190,606\nDA:194,1\nDA:195,69\nDA:209,69\nDA:239,69\nDA:240,69\nDA:241,207\nDA:242,207\nDA:247,69\nDA:248,197\nDA:250,197\nDA:251,14\nDA:253,12\nDA:258,197\nDA:261,0\nDA:262,0\nDA:263,0\nDA:267,197\nDA:268,130\nDA:272,67\nDA:273,19\nDA:277,67\nDA:282,31\nDA:283,29\nDA:286,29\nDA:287,29\nDA:289,29\nDA:290,1\nDA:291,1\nDA:295,65\nDA:300,65\nDA:302,9\nDA:304,2\nDA:305,2\nDA:306,2\nDA:309,2\nDA:310,2\nDA:313,7\nDA:315,7\nDA:316,0\nDA:320,7\nDA:321,5\nDA:324,5\nDA:325,3\nDA:327,2\nDA:331,5\nDA:332,5\nDA:336,2\nDA:339,7\nDA:340,7\nDA:342,7\nDA:346,63\nDA:351,65\nDA:353,30\nDA:356,30\nDA:357,30\nDA:360,30\nDA:361,27\nDA:365,0\nDA:366,0\nDA:367,0\nDA:370,0\nDA:376,30\nDA:377,27\nDA:379,30\nDA:385,132\nDA:388,132\nDA:390,0\nDA:391,0\nDA:392,0\nDA:393,0\nDA:396,132\nDA:397,2\nDA:398,2\nDA:399,2\nDA:406,0\nDA:407,0\nDA:408,0\nDA:413,69\nDA:415,67\nDA:416,57\nDA:418,10\nDA:424,69\nDA:426,69\nDA:427,4\nDA:429,2\nDA:431,4\nDA:433,65\nDA:434,65\nDA:438,0\nDA:444,1\nDA:445,11\nDA:448,11\nDA:449,2\nDA:452,9\nDA:453,2\nDA:457,7\nDA:460,11\nDA:463,1\nDA:464,15650\nDA:469,15650\nDA:470,603\nDA:475,599\nDA:476,595\nDA:477,595\nDA:479,3\nDA:482,595\nDA:483,1\nDA:486,595\nDA:487,588\nDA:488,103\nDA:491,7\nDA:492,3\nDA:495,7\nDA:499,588\nDA:501,519\nDA:502,519\nDA:508,69\nDA:510,69\nDA:516,599\nDA:518,7\nDA:524,7\nDA:528,599\nDA:530,599\nDA:531,11\nDA:535,11\nDA:536,7\nDA:537,7\nDA:541,7\nDA:542,7\nDA:547,4\nDA:548,4\nDA:549,4\nDA:552,4\nDA:553,4\nDA:555,4\nDA:556,2\nDA:559,4\nDA:560,4\nDA:567,588\nDA:571,599\nDA:573,7\nDA:580,7\nDA:582,7\nDA:583,7\nDA:585,7\nDA:589,592\nDA:593,599\nDA:597,15650\nDA:599,15650\nDA:600,15650\nDA:609,1\nDA:610,7\nDA:611,7\nDA:612,7\nDA:615,1\nLF:224\nLH:206\nBRDA:39,1,0,2\nBRDA:39,1,1,15663\nBRDA:39,2,0,15665\nBRDA:39,2,1,15664\nBRDA:45,3,0,15663\nBRDA:45,3,1,7907\nBRDA:56,4,0,15663\nBRDA:56,4,1,15582\nBRDA:57,5,0,15663\nBRDA:57,5,1,15663\nBRDA:64,6,0,9282\nBRDA:64,6,1,6230\nBRDA:74,7,0,88\nBRDA:74,7,1,81\nBRDA:74,8,0,88\nBRDA:74,8,1,88\nBRDA:83,9,0,0\nBRDA:83,9,1,15544\nBRDA:84,10,0,0\nBRDA:84,10,1,0\nBRDA:99,11,0,27\nBRDA:99,11,1,587\nBRDA:110,12,0,119\nBRDA:110,12,1,494\nBRDA:123,13,0,2\nBRDA:123,13,1,608\nBRDA:138,14,0,95\nBRDA:138,14,1,517\nBRDA:144,15,0,420\nBRDA:144,15,1,266\nBRDA:158,16,0,10\nBRDA:158,16,1,595\nBRDA:160,17,0,17\nBRDA:160,17,1,3\nBRDA:160,18,0,20\nBRDA:160,18,1,17\nBRDA:163,19,0,217\nBRDA:163,19,1,378\nBRDA:163,20,0,595\nBRDA:163,20,1,418\nBRDA:186,21,0,8\nBRDA:186,21,1,598\nBRDA:202,22,0,19\nBRDA:202,22,1,50\nBRDA:202,23,0,69\nBRDA:202,23,1,69\nBRDA:203,24,0,69\nBRDA:203,24,1,69\nBRDA:203,24,2,48\nBRDA:203,24,3,48\nBRDA:248,25,0,197\nBRDA:248,25,1,0\nBRDA:250,26,0,14\nBRDA:250,26,1,183\nBRDA:258,27,0,8\nBRDA:258,27,1,189\nBRDA:267,28,0,130\nBRDA:267,28,1,67\nBRDA:267,29,0,197\nBRDA:267,29,1,67\nBRDA:272,30,0,19\nBRDA:272,30,1,48\nBRDA:272,31,0,67\nBRDA:272,31,1,19\nBRDA:277,32,0,31\nBRDA:277,32,1,36\nBRDA:282,33,0,29\nBRDA:282,33,1,2\nBRDA:282,34,0,31\nBRDA:282,34,1,6\nBRDA:289,35,0,1\nBRDA:289,35,1,28\nBRDA:300,36,0,9\nBRDA:300,36,1,56\nBRDA:300,37,0,65\nBRDA:300,37,1,9\nBRDA:302,38,0,2\nBRDA:302,38,1,7\nBRDA:304,39,0,2\nBRDA:304,39,1,0\nBRDA:315,40,0,0\nBRDA:315,40,1,7\nBRDA:320,41,0,5\nBRDA:320,41,1,2\nBRDA:324,42,0,3\nBRDA:324,42,1,2\nBRDA:324,43,0,5\nBRDA:324,43,1,3\nBRDA:331,44,0,5\nBRDA:331,44,1,0\nBRDA:339,45,0,7\nBRDA:339,45,1,0\nBRDA:351,46,0,30\nBRDA:351,46,1,35\nBRDA:351,47,0,65\nBRDA:351,47,1,56\nBRDA:353,48,0,30\nBRDA:353,48,1,0\nBRDA:353,49,0,30\nBRDA:353,49,1,30\nBRDA:353,49,2,3\nBRDA:353,49,3,30\nBRDA:353,49,4,30\nBRDA:353,49,5,30\nBRDA:360,50,0,27\nBRDA:360,50,1,3\nBRDA:366,51,0,0\nBRDA:366,51,1,0\nBRDA:366,52,0,0\nBRDA:366,52,1,0\nBRDA:376,53,0,27\nBRDA:376,53,1,3\nBRDA:388,54,0,0\nBRDA:388,54,1,132\nBRDA:390,55,0,0\nBRDA:390,55,1,0\nBRDA:396,56,0,2\nBRDA:396,56,1,130\nBRDA:415,57,0,57\nBRDA:415,57,1,10\nBRDA:426,58,0,4\nBRDA:426,58,1,65\nBRDA:426,59,0,69\nBRDA:426,59,1,4\nBRDA:427,60,0,2\nBRDA:427,60,1,2\nBRDA:433,61,0,65\nBRDA:433,61,1,0\nBRDA:438,62,0,0\nBRDA:438,62,1,0\nBRDA:448,63,0,2\nBRDA:448,63,1,9\nBRDA:452,64,0,2\nBRDA:452,64,1,7\nBRDA:452,65,0,9\nBRDA:452,65,1,2\nBRDA:452,65,2,2\nBRDA:466,66,0,15650\nBRDA:466,66,1,15261\nBRDA:482,67,0,1\nBRDA:482,67,1,594\nBRDA:486,68,0,588\nBRDA:486,68,1,7\nBRDA:487,69,0,103\nBRDA:487,69,1,485\nBRDA:491,70,0,3\nBRDA:491,70,1,4\nBRDA:499,71,0,519\nBRDA:499,71,1,69\nBRDA:501,72,0,519\nBRDA:501,72,1,0\nBRDA:530,73,0,11\nBRDA:530,73,1,588\nBRDA:530,74,0,599\nBRDA:530,74,1,599\nBRDA:530,74,2,178\nBRDA:530,74,3,168\nBRDA:535,75,0,7\nBRDA:535,75,1,4\nBRDA:537,76,0,7\nBRDA:537,76,1,0\nBRDA:541,77,0,7\nBRDA:541,77,1,0\nBRDA:541,78,0,7\nBRDA:541,78,1,7\nBRDA:547,79,0,4\nBRDA:547,79,1,0\nBRDA:552,80,0,4\nBRDA:552,80,1,0\nBRDA:552,81,0,4\nBRDA:552,81,1,4\nBRDA:555,82,0,2\nBRDA:555,82,1,2\nBRDA:571,83,0,7\nBRDA:571,83,1,592\nBRDA:571,84,0,599\nBRDA:571,84,1,69\nBRDA:571,84,2,69\nBRDA:582,85,0,7\nBRDA:582,85,1,0\nBRF:180\nBRH:155\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-promievent/src/index.js\nFN:33,PromiEvent\nFN:35,(anonymous_2)\nFN:69,(anonymous_3)\nFNF:3\nFNH:3\nFNDA:700,PromiEvent\nFNDA:700,(anonymous_2)\nFNDA:8,(anonymous_3)\nDA:25,1\nDA:26,1\nDA:33,1\nDA:34,700\nDA:36,700\nDA:37,700\nDA:40,700\nDA:41,590\nDA:49,110\nDA:52,110\nDA:53,110\nDA:54,110\nDA:55,110\nDA:56,110\nDA:57,110\nDA:58,110\nDA:59,110\nDA:60,110\nDA:62,110\nDA:69,1\nDA:70,8\nDA:71,8\nDA:72,8\nDA:75,1\nLF:24\nLH:24\nBRDA:40,1,0,590\nBRDA:40,1,1,110\nBRF:2\nBRH:2\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-subscriptions/src/index.js\nFN:28,Subscriptions\nFN:36,(anonymous_2)\nFN:41,(anonymous_3)\nFN:53,(anonymous_4)\nFN:56,(anonymous_5)\nFNF:5\nFNH:5\nFNDA:411,Subscriptions\nFNDA:342,(anonymous_2)\nFNDA:411,(anonymous_3)\nFNDA:411,(anonymous_4)\nFNDA:57,(anonymous_5)\nDA:25,1\nDA:28,1\nDA:29,411\nDA:30,411\nDA:31,411\nDA:32,411\nDA:36,1\nDA:37,342\nDA:41,1\nDA:42,411\nDA:43,411\nDA:44,411\nDA:45,0\nDA:46,0\nDA:48,411\nDA:53,1\nDA:54,411\nDA:56,411\nDA:57,57\nDA:58,0\nDA:61,57\nDA:67,57\nDA:72,1\nLF:23\nLH:20\nBRDA:31,1,0,411\nBRDA:31,1,1,0\nBRDA:44,2,0,0\nBRDA:44,2,1,411\nBRDA:45,3,0,0\nBRDA:45,3,1,0\nBRDA:57,4,0,0\nBRDA:57,4,1,57\nBRF:8\nBRH:3\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-core-subscriptions/src/subscription.js\nFN:29,Subscription\nFN:57,(anonymous_2)\nFN:71,(anonymous_3)\nFN:93,(anonymous_4)\nFN:104,(anonymous_5)\nFN:119,(anonymous_6)\nFN:132,(anonymous_7)\nFN:173,(anonymous_8)\nFN:188,(anonymous_9)\nFN:226,(anonymous_10)\nFN:228,(anonymous_11)\nFN:249,(anonymous_12)\nFN:254,(anonymous_13)\nFN:261,(anonymous_14)\nFN:279,(anonymous_15)\nFN:286,(anonymous_16)\nFNF:16\nFNH:14\nFNDA:73,Subscription\nFNDA:73,(anonymous_2)\nFNDA:73,(anonymous_3)\nFNDA:73,(anonymous_4)\nFNDA:16,(anonymous_5)\nFNDA:179,(anonymous_6)\nFNDA:73,(anonymous_7)\nFNDA:41,(anonymous_8)\nFNDA:73,(anonymous_9)\nFNDA:2,(anonymous_10)\nFNDA:4,(anonymous_11)\nFNDA:73,(anonymous_12)\nFNDA:175,(anonymous_13)\nFNDA:175,(anonymous_14)\nFNDA:0,(anonymous_15)\nFNDA:0,(anonymous_16)\nDA:25,1\nDA:26,1\nDA:27,1\nDA:29,1\nDA:30,73\nDA:32,73\nDA:33,73\nDA:34,73\nDA:35,73\nDA:37,73\nDA:45,1\nDA:46,1\nDA:57,1\nDA:58,73\nDA:59,73\nDA:71,1\nDA:72,73\nDA:74,73\nDA:75,0\nDA:77,73\nDA:78,57\nDA:80,73\nDA:81,0\nDA:93,1\nDA:94,73\nDA:96,73\nDA:97,0\nDA:100,73\nDA:101,57\nDA:104,16\nDA:105,16\nDA:108,16\nDA:119,1\nDA:120,179\nDA:122,179\nDA:132,1\nDA:133,73\nDA:134,73\nDA:136,73\nDA:137,73\nDA:140,73\nDA:141,57\nDA:145,73\nDA:146,73\nDA:147,73\nDA:148,73\nDA:153,73\nDA:154,73\nDA:157,73\nDA:158,0\nDA:161,73\nDA:173,1\nDA:174,41\nDA:175,41\nDA:176,41\nDA:177,41\nDA:188,1\nDA:189,73\nDA:190,73\nDA:191,73\nDA:193,73\nDA:194,0\nDA:197,73\nDA:198,0\nDA:199,0\nDA:200,0\nDA:201,0\nDA:205,73\nDA:206,0\nDA:207,0\nDA:208,0\nDA:209,0\nDA:213,73\nDA:214,0\nDA:218,73\nDA:221,73\nDA:223,2\nDA:227,2\nDA:228,2\nDA:229,4\nDA:230,4\nDA:231,4\nDA:237,0\nDA:238,0\nDA:246,73\nDA:247,16\nDA:249,73\nDA:250,73\nDA:251,45\nDA:254,45\nDA:256,175\nDA:257,175\nDA:258,175\nDA:261,175\nDA:262,175\nDA:264,175\nDA:265,20\nDA:267,155\nDA:271,155\nDA:275,0\nDA:278,0\nDA:279,0\nDA:281,0\nDA:282,0\nDA:286,0\nDA:287,0\nDA:288,0\nDA:291,0\nDA:294,0\nDA:298,28\nDA:299,28\nDA:304,73\nDA:307,1\nLF:113\nLH:87\nBRDA:58,1,0,73\nBRDA:58,1,1,0\nBRDA:74,2,0,0\nBRDA:74,2,1,73\nBRDA:77,3,0,57\nBRDA:77,3,1,16\nBRDA:80,4,0,0\nBRDA:80,4,1,73\nBRDA:96,5,0,0\nBRDA:96,5,1,73\nBRDA:100,6,0,57\nBRDA:100,6,1,16\nBRDA:105,7,0,16\nBRDA:105,7,1,0\nBRDA:122,8,0,179\nBRDA:122,8,1,0\nBRDA:122,9,0,179\nBRDA:122,9,1,179\nBRDA:122,9,2,179\nBRDA:134,10,0,73\nBRDA:134,10,1,0\nBRDA:136,11,0,73\nBRDA:136,11,1,0\nBRDA:140,12,0,57\nBRDA:140,12,1,16\nBRDA:145,13,0,73\nBRDA:145,13,1,0\nBRDA:157,14,0,0\nBRDA:157,14,1,73\nBRDA:193,15,0,0\nBRDA:193,15,1,73\nBRDA:197,16,0,0\nBRDA:197,16,1,73\nBRDA:205,17,0,0\nBRDA:205,17,1,73\nBRDA:213,18,0,0\nBRDA:213,18,1,73\nBRDA:221,19,0,2\nBRDA:221,19,1,71\nBRDA:221,20,0,73\nBRDA:221,20,1,16\nBRDA:221,20,2,16\nBRDA:221,20,3,2\nBRDA:227,21,0,2\nBRDA:227,21,1,0\nBRDA:246,22,0,16\nBRDA:246,22,1,57\nBRDA:250,23,0,45\nBRDA:250,23,1,28\nBRDA:250,24,0,73\nBRDA:250,24,1,73\nBRDA:256,25,0,175\nBRDA:256,25,1,0\nBRDA:257,26,0,175\nBRDA:257,26,1,0\nBRDA:264,27,0,20\nBRDA:264,27,1,155\nBRDA:278,28,0,0\nBRDA:278,28,1,0\nBRDA:281,29,0,0\nBRDA:281,29,1,0\nBRF:61\nBRH:40\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-cfx/src/index.js\nFN:44,(anonymous_1)\nFN:49,(anonymous_2)\nFN:58,(anonymous_3)\nFN:68,Cfx\nFN:76,(anonymous_5)\nFN:89,(anonymous_6)\nFN:92,(anonymous_7)\nFN:102,(anonymous_8)\nFN:111,(anonymous_9)\nFN:114,(anonymous_10)\nFN:121,(anonymous_11)\nFN:151,Contract\nFN:160,(anonymous_13)\nFN:166,(anonymous_14)\nFN:263,(anonymous_15)\nFN:339,(anonymous_16)\nFN:396,(anonymous_17)\nFN:411,(anonymous_18)\nFN:423,(anonymous_19)\nFN:440,(anonymous_20)\nFN:457,(anonymous_21)\nFNF:21\nFNH:17\nFNDA:12,(anonymous_1)\nFNDA:4,(anonymous_2)\nFNDA:8,(anonymous_3)\nFNDA:343,Cfx\nFNDA:88,(anonymous_5)\nFNDA:9925,(anonymous_6)\nFNDA:4,(anonymous_7)\nFNDA:84,(anonymous_8)\nFNDA:9925,(anonymous_9)\nFNDA:1,(anonymous_10)\nFNDA:28,(anonymous_11)\nFNDA:91,Contract\nFNDA:1,(anonymous_13)\nFNDA:429,(anonymous_14)\nFNDA:12,(anonymous_15)\nFNDA:8,(anonymous_16)\nFNDA:0,(anonymous_17)\nFNDA:0,(anonymous_18)\nFNDA:0,(anonymous_19)\nFNDA:0,(anonymous_20)\nFNDA:9576,(anonymous_21)\nDA:25,1\nDA:26,1\nDA:27,1\nDA:28,1\nDA:29,1\nDA:30,1\nDA:31,1\nDA:35,1\nDA:36,1\nDA:37,1\nDA:38,1\nDA:40,1\nDA:41,1\nDA:44,1\nDA:46,12\nDA:49,1\nDA:51,4\nDA:58,1\nDA:60,8\nDA:68,1\nDA:69,343\nDA:72,343\nDA:75,342\nDA:76,342\nDA:77,88\nDA:78,87\nDA:80,87\nDA:81,87\nDA:85,342\nDA:86,342\nDA:88,342\nDA:90,9925\nDA:93,4\nDA:94,4\nDA:98,3\nDA:102,3\nDA:103,84\nDA:106,3\nDA:110,342\nDA:112,9925\nDA:115,1\nDA:117,1\nDA:121,1\nDA:122,28\nDA:125,1\nDA:131,342\nDA:134,342\nDA:136,342\nDA:139,342\nDA:150,342\nDA:151,342\nDA:152,91\nDA:158,89\nDA:159,89\nDA:160,89\nDA:161,1\nDA:162,1\nDA:166,342\nDA:167,429\nDA:172,342\nDA:173,342\nDA:176,342\nDA:177,342\nDA:178,342\nDA:179,342\nDA:182,342\nDA:185,342\nDA:190,342\nDA:263,12\nDA:340,8\nDA:341,8\nDA:397,0\nDA:398,0\nDA:400,0\nDA:403,0\nDA:404,0\nDA:412,0\nDA:415,0\nDA:416,0\nDA:417,0\nDA:419,0\nDA:420,0\nDA:423,0\nDA:424,0\nDA:426,0\nDA:427,0\nDA:433,0\nDA:434,0\nDA:435,0\nDA:439,0\nDA:440,0\nDA:441,0\nDA:442,0\nDA:443,0\nDA:445,0\nDA:446,0\nDA:457,342\nDA:458,9576\nDA:459,9576\nDA:460,9576\nDA:461,9576\nDA:466,1\nDA:469,1\nLF:103\nLH:78\nBRDA:46,1,0,2\nBRDA:46,1,1,10\nBRDA:46,2,0,12\nBRDA:46,2,1,2\nBRDA:51,3,0,2\nBRDA:51,3,1,2\nBRDA:51,4,0,4\nBRDA:51,4,1,2\nBRDA:60,5,0,4\nBRDA:60,5,1,4\nBRDA:60,6,0,8\nBRDA:60,6,1,6\nBRDA:93,7,0,4\nBRDA:93,7,1,0\nBRDA:397,8,0,0\nBRDA:397,8,1,0\nBRDA:403,9,0,0\nBRDA:403,9,1,0\nBRDA:415,10,0,0\nBRDA:415,10,1,0\nBRDA:419,11,0,0\nBRDA:419,11,1,0\nBRDA:426,12,0,0\nBRDA:426,12,1,0\nBRDA:434,13,0,0\nBRDA:434,13,1,0\nBRDA:441,14,0,0\nBRDA:441,14,1,0\nBRDA:445,15,0,0\nBRDA:445,15,1,0\nBRF:30\nBRH:13\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-net/src/index.js\nFN:30,(anonymous_1)\nFN:55,(anonymous_2)\nFNF:2\nFNH:2\nFNDA:356,(anonymous_1)\nFNDA:1065,(anonymous_2)\nDA:25,1\nDA:26,1\nDA:27,1\nDA:30,1\nDA:31,356\nDA:34,356\nDA:37,355\nDA:56,1065\nDA:57,1065\nDA:62,1\nDA:65,1\nLF:11\nLH:11\nBRF:0\nBRH:0\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-cfx-contract/src/index.js\nFN:54,Contract\nFN:90,(anonymous_2)\nFN:95,(anonymous_3)\nFN:103,(anonymous_4)\nFN:107,(anonymous_5)\nFN:174,(anonymous_6)\nFN:185,(anonymous_7)\nFN:188,(anonymous_8)\nFN:198,(anonymous_9)\nFN:201,(anonymous_10)\nFN:222,(anonymous_11)\nFN:237,getCallback\nFN:251,(anonymous_13)\nFN:265,getOrSetDefaultOptions\nFN:290,(anonymous_15)\nFN:295,(anonymous_16)\nFN:297,(anonymous_17)\nFN:317,(anonymous_18)\nFN:319,(anonymous_19)\nFN:329,(anonymous_20)\nFN:357,(anonymous_21)\nFN:366,(anonymous_22)\nFN:406,_encodeMethodABI\nFN:411,(anonymous_24)\nFN:414,(anonymous_25)\nFN:425,(anonymous_26)\nFN:459,(anonymous_27)\nFN:486,(anonymous_28)\nFN:499,(anonymous_29)\nFN:522,(anonymous_30)\nFN:535,(anonymous_31)\nFN:560,(anonymous_32)\nFN:574,(anonymous_33)\nFN:589,(anonymous_34)\nFN:608,(anonymous_35)\nFN:625,(anonymous_36)\nFN:641,(anonymous_37)\nFN:655,(anonymous_38)\nFN:680,_createTxObject\nFN:723,_processExecuteArguments\nFN:765,_executeMethod\nFN:822,(anonymous_42)\nFN:847,(anonymous_43)\nFN:851,(anonymous_44)\nFN:861,(anonymous_45)\nFN:883,(anonymous_46)\nFNF:46\nFNH:44\nFNDA:161,Contract\nFNDA:166,(anonymous_2)\nFNDA:272,(anonymous_3)\nFNDA:161,(anonymous_4)\nFNDA:1918,(anonymous_5)\nFNDA:153,(anonymous_6)\nFNDA:84,(anonymous_7)\nFNDA:0,(anonymous_8)\nFNDA:84,(anonymous_9)\nFNDA:0,(anonymous_10)\nFNDA:497,(anonymous_11)\nFNDA:113,getCallback\nFNDA:32,(anonymous_13)\nFNDA:113,getOrSetDefaultOptions\nFNDA:33,(anonymous_15)\nFNDA:66,(anonymous_16)\nFNDA:10,(anonymous_17)\nFNDA:103,(anonymous_18)\nFNDA:58,(anonymous_19)\nFNDA:6,(anonymous_20)\nFNDA:46,(anonymous_21)\nFNDA:182,(anonymous_22)\nFNDA:98,_encodeMethodABI\nFNDA:1255,(anonymous_24)\nFNDA:98,(anonymous_25)\nFNDA:98,(anonymous_26)\nFNDA:45,(anonymous_27)\nFNDA:11,(anonymous_28)\nFNDA:11,(anonymous_29)\nFNDA:18,(anonymous_30)\nFNDA:176,(anonymous_31)\nFNDA:5,(anonymous_32)\nFNDA:6,(anonymous_33)\nFNDA:4,(anonymous_34)\nFNDA:16,(anonymous_35)\nFNDA:20,(anonymous_36)\nFNDA:10,(anonymous_37)\nFNDA:2,(anonymous_38)\nFNDA:96,_createTxObject\nFNDA:89,_processExecuteArguments\nFNDA:89,_executeMethod\nFNDA:36,(anonymous_42)\nFNDA:19,(anonymous_43)\nFNDA:12,(anonymous_44)\nFNDA:12,(anonymous_45)\nFNDA:3,(anonymous_46)\nDA:34,1\nDA:35,1\nDA:36,1\nDA:37,1\nDA:38,1\nDA:39,1\nDA:40,1\nDA:41,1\nDA:42,1\nDA:54,1\nDA:55,161\nDA:58,161\nDA:59,0\nDA:63,161\nDA:65,161\nDA:69,161\nDA:70,0\nDA:76,161\nDA:78,161\nDA:79,161\nDA:80,13\nDA:82,13\nDA:83,11\nDA:84,0\nDA:89,159\nDA:91,166\nDA:92,147\nDA:96,272\nDA:102,159\nDA:104,161\nDA:105,161\nDA:107,161\nDA:108,1918\nDA:112,1918\nDA:113,1918\nDA:116,1918\nDA:117,1783\nDA:122,1918\nDA:123,1498\nDA:124,1498\nDA:131,1498\nDA:132,1363\nDA:134,135\nDA:139,135\nDA:143,1498\nDA:146,1498\nDA:150,420\nDA:151,273\nDA:152,273\nDA:155,273\nDA:156,273\nDA:159,273\nDA:162,273\nDA:166,1918\nDA:170,161\nDA:172,161\nDA:175,153\nDA:181,159\nDA:182,159\nDA:184,159\nDA:186,84\nDA:189,0\nDA:190,0\nDA:193,0\nDA:197,159\nDA:199,84\nDA:202,0\nDA:204,0\nDA:210,159\nDA:211,159\nDA:213,159\nDA:214,159\nDA:217,159\nDA:218,157\nDA:222,1\nDA:224,497\nDA:226,497\nDA:237,1\nDA:238,113\nDA:239,52\nDA:251,1\nDA:252,32\nDA:253,0\nDA:265,1\nDA:266,113\nDA:267,113\nDA:269,111\nDA:271,111\nDA:272,111\nDA:273,111\nDA:276,111\nDA:278,111\nDA:290,1\nDA:291,33\nDA:292,33\nDA:295,33\nDA:296,66\nDA:298,10\nDA:302,33\nDA:303,0\nDA:308,33\nDA:311,33\nDA:312,29\nDA:316,33\nDA:317,31\nDA:318,103\nDA:320,58\nDA:321,58\nDA:322,30\nDA:328,28\nDA:329,3\nDA:330,6\nDA:333,25\nDA:336,31\nDA:339,33\nDA:340,2\nDA:343,33\nDA:344,33\nDA:347,33\nDA:357,1\nDA:358,46\nDA:360,46\nDA:361,46\nDA:362,46\nDA:365,46\nDA:366,16\nDA:367,182\nDA:372,46\nDA:375,46\nDA:377,46\nDA:378,46\nDA:381,46\nDA:384,46\nDA:387,46\nDA:391,46\nDA:392,46\nDA:395,46\nDA:406,1\nDA:407,98\nDA:410,98\nDA:412,1255\nDA:415,98\nDA:417,98\nDA:418,0\nDA:421,98\nDA:422,87\nDA:424,98\nDA:426,98\nDA:430,98\nDA:431,11\nDA:432,0\nDA:434,11\nDA:439,87\nDA:441,87\nDA:442,0\nDA:444,87\nDA:459,1\nDA:460,45\nDA:461,0\nDA:464,45\nDA:465,45\nDA:467,42\nDA:468,40\nDA:470,2\nDA:471,2\nDA:486,1\nDA:488,11\nDA:490,11\nDA:491,11\nDA:495,11\nDA:496,0\nDA:499,11\nDA:500,11\nDA:502,11\nDA:504,11\nDA:522,1\nDA:523,18\nDA:526,18\nDA:529,18\nDA:531,18\nDA:532,18\nDA:536,176\nDA:539,18\nDA:540,0\nDA:543,18\nDA:544,0\nDA:547,18\nDA:560,1\nDA:561,5\nDA:574,1\nDA:575,6\nDA:578,6\nDA:580,6\nDA:581,2\nDA:585,4\nDA:586,4\nDA:589,4\nDA:590,4\nDA:591,4\nDA:592,4\nDA:596,4\nDA:608,1\nDA:609,16\nDA:613,16\nDA:614,16\nDA:619,16\nDA:626,20\nDA:627,2\nDA:629,18\nDA:632,20\nDA:633,20\nDA:641,16\nDA:643,16\nDA:655,1\nDA:656,2\nDA:658,2\nDA:665,2\nDA:666,2\nDA:668,2\nDA:670,2\nDA:680,1\nDA:681,96\nDA:682,96\nDA:684,96\nDA:686,85\nDA:687,85\nDA:691,96\nDA:692,96\nDA:693,96\nDA:694,96\nDA:696,96\nDA:697,4\nDA:698,2\nDA:700,2\nDA:703,92\nDA:704,92\nDA:705,92\nDA:706,92\nDA:708,92\nDA:709,11\nDA:712,92\nDA:723,1\nDA:724,89\nDA:726,89\nDA:729,89\nDA:732,89\nDA:733,7\nDA:736,89\nDA:739,89\nDA:741,89\nDA:742,89\nDA:745,89\nDA:746,0\nDA:748,89\nDA:749,82\nDA:752,89\nDA:753,0\nDA:755,89\nDA:765,1\nDA:766,89\nDA:772,89\nDA:774,6\nDA:779,6\nDA:780,6\nDA:782,6\nDA:783,6\nDA:786,0\nDA:789,6\nDA:793,83\nDA:796,6\nDA:809,6\nDA:815,40\nDA:823,36\nDA:831,40\nDA:836,37\nDA:837,0\nDA:840,37\nDA:841,2\nDA:846,35\nDA:848,19\nDA:851,8\nDA:852,12\nDA:859,8\nDA:860,8\nDA:861,8\nDA:862,12\nDA:864,12\nDA:865,2\nDA:866,0\nDA:868,2\nDA:871,10\nDA:874,0\nDA:875,0\nDA:879,8\nDA:881,19\nDA:884,3\nDA:885,3\nDA:886,3\nDA:890,35\nDA:903,35\nDA:911,1\nLF:301\nLH:277\nBRDA:58,1,0,0\nBRDA:58,1,1,161\nBRDA:69,2,0,0\nBRDA:69,2,1,161\nBRDA:69,3,0,161\nBRDA:69,3,1,161\nBRDA:79,4,0,13\nBRDA:79,4,1,148\nBRDA:79,5,0,161\nBRDA:79,5,1,17\nBRDA:83,6,0,0\nBRDA:83,6,1,11\nBRDA:91,7,0,147\nBRDA:91,7,1,19\nBRDA:112,8,0,1918\nBRDA:112,8,1,1510\nBRDA:112,8,2,1510\nBRDA:113,9,0,1918\nBRDA:113,9,1,1783\nBRDA:116,10,0,1783\nBRDA:116,10,1,135\nBRDA:122,11,0,1498\nBRDA:122,11,1,420\nBRDA:131,12,0,1363\nBRDA:131,12,1,135\nBRDA:150,13,0,273\nBRDA:150,13,1,147\nBRDA:155,14,0,273\nBRDA:155,14,1,0\nBRDA:155,15,0,273\nBRDA:155,15,1,0\nBRDA:182,16,0,159\nBRDA:182,16,1,69\nBRDA:189,17,0,0\nBRDA:189,17,1,0\nBRDA:238,18,0,52\nBRDA:238,18,1,61\nBRDA:238,19,0,113\nBRDA:238,19,1,113\nBRDA:252,20,0,0\nBRDA:252,20,1,32\nBRDA:266,21,0,39\nBRDA:266,21,1,74\nBRDA:267,22,0,64\nBRDA:267,22,1,49\nBRDA:269,23,0,111\nBRDA:269,23,1,100\nBRDA:271,24,0,111\nBRDA:271,24,1,49\nBRDA:272,25,0,111\nBRDA:272,25,1,72\nBRDA:273,26,0,111\nBRDA:273,26,1,86\nBRDA:273,26,2,86\nBRDA:291,27,0,33\nBRDA:291,27,1,2\nBRDA:292,28,0,33\nBRDA:292,28,1,7\nBRDA:302,29,0,0\nBRDA:302,29,1,33\nBRDA:311,30,0,29\nBRDA:311,30,1,4\nBRDA:311,31,0,33\nBRDA:311,31,1,33\nBRDA:311,31,2,31\nBRDA:316,32,0,31\nBRDA:316,32,1,2\nBRDA:321,33,0,30\nBRDA:321,33,1,28\nBRDA:328,34,0,3\nBRDA:328,34,1,25\nBRDA:339,35,0,2\nBRDA:339,35,1,31\nBRDA:343,36,0,33\nBRDA:343,36,1,0\nBRDA:360,37,0,46\nBRDA:360,37,1,1\nBRDA:361,38,0,46\nBRDA:361,38,1,2\nBRDA:365,39,0,16\nBRDA:365,39,1,30\nBRDA:366,40,0,16\nBRDA:366,40,1,0\nBRDA:372,41,0,46\nBRDA:372,41,1,0\nBRDA:375,42,0,1\nBRDA:375,42,1,45\nBRDA:384,43,0,3\nBRDA:384,43,1,43\nBRDA:384,44,0,46\nBRDA:384,44,1,45\nBRDA:408,45,0,98\nBRDA:408,45,1,0\nBRDA:411,46,0,98\nBRDA:411,46,1,13\nBRDA:412,47,0,1255\nBRDA:412,47,1,154\nBRDA:412,47,2,1244\nBRDA:412,47,3,1157\nBRDA:412,47,4,1157\nBRDA:412,47,5,87\nBRDA:415,48,0,98\nBRDA:415,48,1,0\nBRDA:417,49,0,0\nBRDA:417,49,1,98\nBRDA:421,50,0,87\nBRDA:421,50,1,11\nBRDA:424,51,0,98\nBRDA:424,51,1,0\nBRDA:430,52,0,11\nBRDA:430,52,1,87\nBRDA:431,53,0,0\nBRDA:431,53,1,11\nBRDA:439,54,0,87\nBRDA:439,54,1,0\nBRDA:441,55,0,0\nBRDA:441,55,1,87\nBRDA:460,56,0,0\nBRDA:460,56,1,45\nBRDA:464,57,0,45\nBRDA:464,57,1,0\nBRDA:467,58,0,40\nBRDA:467,58,1,2\nBRDA:488,59,0,11\nBRDA:488,59,1,0\nBRDA:490,60,0,11\nBRDA:490,60,1,0\nBRDA:495,61,0,0\nBRDA:495,61,1,11\nBRDA:499,62,0,11\nBRDA:499,62,1,0\nBRDA:529,63,0,16\nBRDA:529,63,1,2\nBRDA:531,64,0,18\nBRDA:531,64,1,0\nBRDA:532,65,0,2\nBRDA:532,65,1,16\nBRDA:536,66,0,176\nBRDA:536,66,1,16\nBRDA:536,66,2,10\nBRDA:539,67,0,0\nBRDA:539,67,1,18\nBRDA:543,68,0,0\nBRDA:543,68,1,18\nBRDA:580,69,0,2\nBRDA:580,69,1,4\nBRDA:585,70,0,4\nBRDA:585,70,1,0\nBRDA:591,71,0,4\nBRDA:591,71,1,0\nBRDA:626,72,0,2\nBRDA:626,72,1,18\nBRDA:632,73,0,20\nBRDA:632,73,1,0\nBRDA:641,74,0,16\nBRDA:641,74,1,4\nBRDA:684,75,0,85\nBRDA:684,75,1,11\nBRDA:696,76,0,4\nBRDA:696,76,1,92\nBRDA:696,77,0,96\nBRDA:696,77,1,96\nBRDA:696,77,2,96\nBRDA:697,78,0,2\nBRDA:697,78,1,2\nBRDA:703,79,0,92\nBRDA:703,79,1,0\nBRDA:706,80,0,92\nBRDA:706,80,1,41\nBRDA:708,81,0,11\nBRDA:708,81,1,81\nBRDA:732,82,0,7\nBRDA:732,82,1,82\nBRDA:732,83,0,89\nBRDA:732,83,1,46\nBRDA:732,83,2,44\nBRDA:732,83,3,44\nBRDA:736,84,0,58\nBRDA:736,84,1,31\nBRDA:739,85,0,6\nBRDA:739,85,1,83\nBRDA:745,86,0,0\nBRDA:745,86,1,89\nBRDA:745,87,0,89\nBRDA:745,87,1,82\nBRDA:748,88,0,82\nBRDA:748,88,1,7\nBRDA:752,89,0,0\nBRDA:752,89,1,89\nBRDA:769,90,0,89\nBRDA:769,90,1,89\nBRDA:772,91,0,6\nBRDA:772,91,1,83\nBRDA:779,92,0,6\nBRDA:779,92,1,0\nBRDA:793,93,0,6\nBRDA:793,93,1,40\nBRDA:793,93,2,37\nBRDA:836,94,0,0\nBRDA:836,94,1,37\nBRDA:840,95,0,2\nBRDA:840,95,1,35\nBRDA:840,96,0,37\nBRDA:840,96,1,28\nBRDA:840,96,2,6\nBRDA:840,96,3,2\nBRDA:848,97,0,8\nBRDA:848,97,1,11\nBRDA:862,98,0,12\nBRDA:862,98,1,0\nBRDA:864,99,0,2\nBRDA:864,99,1,10\nBRDA:865,100,0,0\nBRDA:865,100,1,2\nBRDA:897,101,0,35\nBRDA:897,101,1,35\nBRF:216\nBRH:178\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-cfx-accounts/src/index.js\nFN:40,(anonymous_1)\nFN:44,(anonymous_2)\nFN:51,(anonymous_3)\nFN:59,Accounts\nFN:87,(anonymous_5)\nFN:93,(anonymous_6)\nFN:98,(anonymous_7)\nFN:107,(anonymous_8)\nFN:111,signTransaction\nFN:114,sign\nFN:118,encrypt\nFN:126,create\nFN:130,privateKeyToAccount\nFN:134,signTransaction\nFN:139,(anonymous_15)\nFN:148,signed\nFN:228,(anonymous_17)\nFN:237,recoverTransaction\nFN:248,hashMessage\nFN:257,sign\nFN:271,recover\nFN:293,(anonymous_22)\nFN:338,(anonymous_23)\nFN:397,Wallet\nFN:403,(anonymous_25)\nFN:412,(anonymous_26)\nFN:415,(anonymous_27)\nFN:416,(anonymous_28)\nFN:421,(anonymous_29)\nFN:428,(anonymous_30)\nFN:449,(anonymous_31)\nFN:471,(anonymous_32)\nFN:475,(anonymous_33)\nFN:482,(anonymous_34)\nFN:486,(anonymous_35)\nFN:494,(anonymous_36)\nFN:497,(anonymous_37)\nFN:510,(anonymous_38)\nFN:516,(anonymous_39)\nFNF:39\nFNH:36\nFNDA:324,(anonymous_1)\nFNDA:552,(anonymous_2)\nFNDA:276,(anonymous_3)\nFNDA:1701,Accounts\nFNDA:30,(anonymous_5)\nFNDA:30,(anonymous_6)\nFNDA:5103,(anonymous_7)\nFNDA:1718,(anonymous_8)\nFNDA:95,signTransaction\nFNDA:0,sign\nFNDA:108,encrypt\nFNDA:1174,create\nFNDA:544,privateKeyToAccount\nFNDA:102,signTransaction\nFNDA:102,(anonymous_15)\nFNDA:102,signed\nFNDA:54,(anonymous_17)\nFNDA:24,recoverTransaction\nFNDA:40,hashMessage\nFNDA:25,sign\nFNDA:36,recover\nFNDA:112,(anonymous_22)\nFNDA:108,(anonymous_23)\nFNDA:1701,Wallet\nFNDA:375,(anonymous_25)\nFNDA:8,(anonymous_26)\nFNDA:180,(anonymous_27)\nFNDA:180,(anonymous_28)\nFNDA:14,(anonymous_29)\nFNDA:109,(anonymous_30)\nFNDA:60,(anonymous_31)\nFNDA:6,(anonymous_32)\nFNDA:44,(anonymous_33)\nFNDA:2,(anonymous_34)\nFNDA:8,(anonymous_35)\nFNDA:2,(anonymous_36)\nFNDA:8,(anonymous_37)\nFNDA:0,(anonymous_38)\nFNDA:0,(anonymous_39)\nDA:25,1\nDA:26,1\nDA:27,1\nDA:28,1\nDA:29,1\nDA:30,1\nDA:31,1\nDA:32,1\nDA:33,1\nDA:34,1\nDA:35,1\nDA:36,1\nDA:37,1\nDA:38,1\nDA:40,1\nDA:41,324\nDA:44,1\nDA:45,552\nDA:46,78\nDA:48,552\nDA:51,1\nDA:52,276\nDA:53,23\nDA:55,276\nDA:59,1\nDA:60,1701\nDA:63,1701\nDA:66,1701\nDA:67,1701\nDA:69,1701\nDA:88,30\nDA:89,30\nDA:91,0\nDA:93,30\nDA:97,1701\nDA:98,1701\nDA:99,5103\nDA:100,5103\nDA:104,1701\nDA:107,1\nDA:108,1718\nDA:111,1718\nDA:112,95\nDA:114,1718\nDA:115,0\nDA:118,1718\nDA:119,108\nDA:123,1718\nDA:126,1\nDA:127,1174\nDA:130,1\nDA:131,544\nDA:134,1\nDA:135,102\nDA:139,102\nDA:141,102\nDA:142,0\nDA:144,0\nDA:145,0\nDA:148,1\nDA:150,102\nDA:151,0\nDA:154,102\nDA:158,5\nDA:161,102\nDA:162,5\nDA:163,5\nDA:166,97\nDA:167,97\nDA:169,92\nDA:170,92\nDA:171,92\nDA:172,92\nDA:173,92\nDA:175,92\nDA:187,92\nDA:189,92\nDA:191,92\nDA:193,92\nDA:194,92\nDA:195,92\nDA:197,92\nDA:199,92\nDA:200,92\nDA:209,5\nDA:210,5\nDA:213,92\nDA:214,92\nDA:218,102\nDA:219,48\nDA:224,54\nDA:229,54\nDA:230,0\nDA:232,54\nDA:237,1\nDA:238,24\nDA:239,24\nDA:240,24\nDA:241,24\nDA:242,24\nDA:243,24\nDA:244,24\nDA:248,1\nDA:249,40\nDA:250,40\nDA:251,40\nDA:252,40\nDA:253,40\nDA:254,40\nDA:257,1\nDA:258,25\nDA:259,25\nDA:260,25\nDA:261,25\nDA:271,1\nDA:272,36\nDA:275,36\nDA:276,6\nDA:279,30\nDA:280,9\nDA:283,30\nDA:284,9\nDA:285,9\nDA:287,9\nDA:289,21\nDA:293,1\nDA:296,112\nDA:297,0\nDA:300,112\nDA:302,112\nDA:303,0\nDA:306,112\nDA:307,112\nDA:308,112\nDA:309,111\nDA:312,111\nDA:313,1\nDA:314,1\nDA:316,1\nDA:317,0\nDA:320,1\nDA:322,0\nDA:325,112\nDA:327,112\nDA:328,112\nDA:329,0\nDA:332,112\nDA:333,112\nDA:335,112\nDA:338,1\nDA:340,108\nDA:342,108\nDA:343,108\nDA:344,108\nDA:346,108\nDA:347,108\nDA:348,108\nDA:353,108\nDA:354,0\nDA:355,0\nDA:356,0\nDA:357,108\nDA:359,108\nDA:360,108\nDA:361,108\nDA:362,108\nDA:364,0\nDA:367,108\nDA:368,108\nDA:369,0\nDA:372,108\nDA:374,108\nDA:376,108\nDA:397,1\nDA:398,1701\nDA:399,1701\nDA:400,1701\nDA:403,1\nDA:404,375\nDA:405,375\nDA:406,268\nDA:408,107\nDA:412,1\nDA:413,8\nDA:414,8\nDA:415,180\nDA:416,180\nDA:418,8\nDA:421,1\nDA:422,14\nDA:423,74\nDA:425,14\nDA:428,1\nDA:430,109\nDA:431,95\nDA:433,109\nDA:434,105\nDA:435,105\nDA:437,105\nDA:438,105\nDA:439,105\nDA:441,105\nDA:443,105\nDA:445,4\nDA:449,1\nDA:450,60\nDA:452,60\nDA:454,60\nDA:455,60\nDA:457,60\nDA:458,60\nDA:460,60\nDA:461,60\nDA:463,60\nDA:465,60\nDA:467,0\nDA:471,1\nDA:472,6\nDA:473,6\nDA:475,6\nDA:476,44\nDA:479,6\nDA:482,1\nDA:483,2\nDA:484,2\nDA:486,2\nDA:487,8\nDA:490,2\nDA:494,1\nDA:495,2\nDA:497,2\nDA:498,8\nDA:500,8\nDA:501,8\nDA:503,0\nDA:507,2\nDA:510,1\nDA:511,0\nDA:513,0\nDA:516,1\nDA:517,0\nDA:519,0\nDA:520,0\nDA:521,0\nDA:527,0\nDA:530,1\nDA:531,1\nDA:532,1\nDA:536,1\nLF:249\nLH:223\nBRDA:34,1,0,0\nBRDA:34,1,1,1\nBRDA:41,2,0,324\nBRDA:41,2,1,240\nBRDA:45,3,0,630\nBRDA:45,3,1,630\nBRDA:52,4,0,23\nBRDA:52,4,1,253\nBRDA:88,5,0,30\nBRDA:88,5,1,0\nBRDA:127,6,0,1174\nBRDA:127,6,1,1170\nBRDA:139,7,0,102\nBRDA:139,7,1,102\nBRDA:141,8,0,0\nBRDA:141,8,1,102\nBRDA:150,9,0,0\nBRDA:150,9,1,102\nBRDA:150,10,0,102\nBRDA:150,10,1,0\nBRDA:154,11,0,5\nBRDA:154,11,1,97\nBRDA:154,12,0,102\nBRDA:154,12,1,101\nBRDA:154,12,2,100\nBRDA:154,12,3,99\nBRDA:161,13,0,5\nBRDA:161,13,1,97\nBRDA:170,14,0,92\nBRDA:170,14,1,2\nBRDA:171,15,0,92\nBRDA:171,15,1,11\nBRDA:172,16,0,92\nBRDA:172,16,1,2\nBRDA:182,17,0,92\nBRDA:182,17,1,0\nBRDA:189,18,0,92\nBRDA:189,18,1,0\nBRDA:218,19,0,48\nBRDA:218,19,1,54\nBRDA:218,20,0,102\nBRDA:218,20,1,72\nBRDA:218,20,2,60\nBRDA:225,21,0,30\nBRDA:225,21,1,24\nBRDA:226,22,0,24\nBRDA:226,22,1,30\nBRDA:227,23,0,30\nBRDA:227,23,1,24\nBRDA:229,24,0,0\nBRDA:229,24,1,54\nBRDA:229,25,0,54\nBRDA:229,25,1,54\nBRDA:229,25,2,54\nBRDA:241,26,0,12\nBRDA:241,26,1,12\nBRDA:249,27,0,22\nBRDA:249,27,1,18\nBRDA:275,28,0,6\nBRDA:275,28,1,30\nBRDA:279,29,0,9\nBRDA:279,29,1,21\nBRDA:283,30,0,9\nBRDA:283,30,1,21\nBRDA:285,31,0,3\nBRDA:285,31,1,6\nBRDA:296,32,0,0\nBRDA:296,32,1,112\nBRDA:300,33,0,62\nBRDA:300,33,1,50\nBRDA:300,34,0,50\nBRDA:300,34,1,0\nBRDA:302,35,0,0\nBRDA:302,35,1,112\nBRDA:308,36,0,111\nBRDA:308,36,1,1\nBRDA:313,37,0,1\nBRDA:313,37,1,0\nBRDA:316,38,0,0\nBRDA:316,38,1,1\nBRDA:328,39,0,0\nBRDA:328,39,1,112\nBRDA:342,40,0,108\nBRDA:342,40,1,8\nBRDA:343,41,0,108\nBRDA:343,41,1,58\nBRDA:344,42,0,108\nBRDA:344,42,1,58\nBRDA:347,43,0,108\nBRDA:347,43,1,108\nBRDA:349,44,0,108\nBRDA:349,44,1,108\nBRDA:353,45,0,0\nBRDA:353,45,1,108\nBRDA:354,46,0,0\nBRDA:354,46,1,0\nBRDA:357,47,0,108\nBRDA:357,47,1,0\nBRDA:359,48,0,108\nBRDA:359,48,1,8\nBRDA:360,49,0,108\nBRDA:360,49,1,58\nBRDA:361,50,0,108\nBRDA:361,50,1,58\nBRDA:367,51,0,108\nBRDA:367,51,1,108\nBRDA:368,52,0,0\nBRDA:368,52,1,108\nBRDA:378,53,0,108\nBRDA:378,53,1,58\nBRDA:385,54,0,108\nBRDA:385,54,1,108\nBRDA:404,55,0,375\nBRDA:404,55,1,107\nBRDA:405,56,0,268\nBRDA:405,56,1,107\nBRDA:430,57,0,95\nBRDA:430,57,1,14\nBRDA:433,58,0,105\nBRDA:433,58,1,4\nBRDA:452,59,0,60\nBRDA:452,59,1,0\nBRDA:452,60,0,60\nBRDA:452,60,1,60\nBRDA:500,61,0,8\nBRDA:500,61,1,0\nBRDA:511,62,0,0\nBRDA:511,62,1,0\nBRDA:517,63,0,0\nBRDA:517,63,1,0\nBRDA:519,64,0,0\nBRDA:519,64,1,0\nBRDA:527,65,0,0\nBRDA:527,65,1,0\nBRDA:530,66,0,1\nBRDA:530,66,1,0\nBRF:136\nBRH:106\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-cfx-accounts/src/scrypt.js\nFN:12,(anonymous_1)\nFN:14,(anonymous_2)\nFN:17,(anonymous_3)\nFN:28,(anonymous_4)\nFN:35,(anonymous_5)\nFN:57,(anonymous_6)\nFNF:6\nFNH:5\nFNDA:1,(anonymous_1)\nFNDA:1,(anonymous_2)\nFNDA:1,(anonymous_3)\nFNDA:1,(anonymous_4)\nFNDA:219,(anonymous_5)\nFNDA:0,(anonymous_6)\nDA:1,1\nDA:3,1\nDA:5,1\nDA:6,1\nDA:7,1\nDA:8,1\nDA:9,1\nDA:10,1\nDA:12,1\nDA:13,1\nDA:14,1\nDA:15,1\nDA:16,1\nDA:17,1\nDA:19,1\nDA:20,0\nDA:22,1\nDA:24,1\nDA:28,1\nDA:29,1\nDA:32,1\nDA:33,1\nDA:34,1\nDA:35,1\nDA:36,219\nDA:37,219\nDA:39,1\nDA:40,1\nDA:41,1\nDA:42,0\nDA:44,1\nDA:45,1\nDA:49,1\nDA:51,0\nDA:55,0\nDA:56,0\nDA:57,0\nDA:58,0\nDA:61,0\nDA:69,1\nDA:71,1\nLF:41\nLH:33\nBRDA:5,1,0,1\nBRDA:5,1,1,0\nBRDA:6,2,0,1\nBRDA:6,2,1,0\nBRDA:10,3,0,1\nBRDA:10,3,1,1\nBRDA:15,4,0,0\nBRDA:15,4,1,1\nBRDA:19,5,0,0\nBRDA:19,5,1,1\nBRDA:32,6,0,1\nBRDA:32,6,1,0\nBRDA:39,7,0,1\nBRDA:39,7,1,0\nBRDA:41,8,0,0\nBRDA:41,8,1,1\nBRDA:56,9,0,0\nBRDA:56,9,1,0\nBRDA:69,10,0,1\nBRDA:69,10,1,0\nBRF:20\nBRH:10\nend_of_record\nTN:\nSF:/Users/liping/about_cfx/ConfluxWeb/packages/conflux-web-cfx/src/getNetworkType.js\nFN:27,(anonymous_1)\nFN:33,(anonymous_2)\nFN:39,(anonymous_3)\nFN:69,(anonymous_4)\nFNF:4\nFNH:3\nFNDA:6,(anonymous_1)\nFNDA:6,(anonymous_2)\nFNDA:6,(anonymous_3)\nFNDA:0,(anonymous_4)\nDA:25,1\nDA:27,1\nDA:28,6\nDA:32,6\nDA:35,6\nDA:37,6\nDA:40,6\nDA:42,6\nDA:44,3\nDA:46,6\nDA:48,0\nDA:50,6\nDA:52,0\nDA:54,6\nDA:56,0\nDA:58,6\nDA:60,0\nDA:63,6\nDA:64,0\nDA:67,6\nDA:70,0\nDA:71,0\nDA:73,0\nDA:78,1\nLF:24\nLH:16\nBRDA:42,1,0,3\nBRDA:42,1,1,3\nBRDA:42,2,0,6\nBRDA:42,2,1,4\nBRDA:46,3,0,0\nBRDA:46,3,1,6\nBRDA:46,4,0,6\nBRDA:46,4,1,0\nBRDA:50,5,0,0\nBRDA:50,5,1,6\nBRDA:50,6,0,6\nBRDA:50,6,1,0\nBRDA:54,7,0,0\nBRDA:54,7,1,6\nBRDA:54,8,0,6\nBRDA:54,8,1,0\nBRDA:58,9,0,0\nBRDA:58,9,1,6\nBRDA:58,10,0,6\nBRDA:58,10,1,0\nBRDA:63,11,0,0\nBRDA:63,11,1,6\nBRDA:70,12,0,0\nBRDA:70,12,1,0\nBRF:24\nBRH:13\nend_of_record\n'
[debug] "2019-09-05T03:29:40.240Z"  'user options undefined'
[warn] "2019-09-05T03:29:40.243Z"  'Repo token could not be determined.  Continuing without it.This is necessary for private repos only, so may not be an issue at all.'
[debug] "2019-09-05T03:29:40.284Z"  { run_at: '2019-09-05T03:29:40.241Z',
  git:
   { head:
      { id: 'a26b48272662eb08f00487f5177c19e34fbed333',
        committer_name: 'liuis',
        committer_email: 'ping.li@conflux-chain.org',
        message: 'Test case all pass! 2361 passing',
        author_name: 'liuis',
        author_email: 'ping.li@conflux-chain.org' },
     branch: 'conflux-web-1.2.1',
     remotes: [ [Object] ] } }
[debug] "2019-09-05T03:29:40.285Z"  'in: ' ''
[info] "2019-09-05T03:29:40.305Z"  'sending this to coveralls.io: ' '{"source_files":[{"name":"packages/conflux-web-cfx-abi/src/index.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file index.js\\n * @author Marek Kotewicz <marek@parity.io>\\n * @author Fabian Vogelsteller <fabian@frozeman.de>\\n * @date 2018\\n */\\n\\nvar _ = require(\'underscore\');\\nvar utils = require(\'conflux-web-utils\');\\n\\nvar EthersAbi = require(\'ethers/utils/abi-coder\').AbiCoder;\\nvar ethersAbiCoder = new EthersAbi(function (type, value) {\\n    if (type.match(/^u?int/) && !_.isArray(value) && (!_.isObject(value) || value.constructor.name !== \'BN\')) {\\n        return value.toString();\\n    }\\n    return value;\\n});\\n\\n// result method\\nfunction Result() {\\n}\\n\\n/**\\n * ABICoder prototype should be used to encode/decode solidity params of any type\\n */\\nvar ABICoder = function () {\\n};\\n\\n/**\\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\\n *\\n * @method encodeFunctionSignature\\n * @param {String|Object} functionName\\n * @return {String} encoded function name\\n */\\nABICoder.prototype.encodeFunctionSignature = function (functionName) {\\n    if (_.isObject(functionName)) {\\n        functionName = utils._jsonInterfaceMethodToString(functionName);\\n    }\\n\\n    return utils.sha3(functionName).slice(0, 10);\\n};\\n\\n/**\\n * Encodes the function name to its ABI representation, which are the first 4 bytes of the sha3 of the function name including  types.\\n *\\n * @method encodeEventSignature\\n * @param {String|Object} functionName\\n * @return {String} encoded function name\\n */\\nABICoder.prototype.encodeEventSignature = function (functionName) {\\n    if (_.isObject(functionName)) {\\n        functionName = utils._jsonInterfaceMethodToString(functionName);\\n    }\\n\\n    return utils.sha3(functionName);\\n};\\n\\n/**\\n * Should be used to encode plain param\\n *\\n * @method encodeParameter\\n * @param {String} type\\n * @param {Object} param\\n * @return {String} encoded plain param\\n */\\nABICoder.prototype.encodeParameter = function (type, param) {\\n    return this.encodeParameters([type], [param]);\\n};\\n\\n/**\\n * Should be used to encode list of params\\n *\\n * @method encodeParameters\\n * @param {Array} types\\n * @param {Array} params\\n * @return {String} encoded list of params\\n */\\nABICoder.prototype.encodeParameters = function (types, params) {\\n    return ethersAbiCoder.encode(this.mapTypes(types), params);\\n};\\n\\n/**\\n * Map types if simplified format is used\\n *\\n * @method mapTypes\\n * @param {Array} types\\n * @return {Array}\\n */\\nABICoder.prototype.mapTypes = function (types) {\\n    var self = this;\\n    var mappedTypes = [];\\n    types.forEach(function (type) {\\n        if (self.isSimplifiedStructFormat(type)) {\\n            var structName = Object.keys(type)[0];\\n            mappedTypes.push(\\n                Object.assign(\\n                    self.mapStructNameAndType(structName),\\n                    {\\n                        components: self.mapStructToCoderFormat(type[structName])\\n                    }\\n                )\\n            );\\n\\n            return;\\n        }\\n\\n        mappedTypes.push(type);\\n    });\\n\\n    return mappedTypes;\\n};\\n\\n/**\\n * Check if type is simplified struct format\\n *\\n * @method isSimplifiedStructFormat\\n * @param {string | Object} type\\n * @returns {boolean}\\n */\\nABICoder.prototype.isSimplifiedStructFormat = function (type) {\\n    return typeof type === \'object\' && typeof type.components === \'undefined\' && typeof type.name === \'undefined\';\\n};\\n\\n/**\\n * Maps the correct tuple type and name when the simplified format in encode/decodeParameter is used\\n *\\n * @method mapStructNameAndType\\n * @param {string} structName\\n * @return {{type: string, name: *}}\\n */\\nABICoder.prototype.mapStructNameAndType = function (structName) {\\n    var type = \'tuple\';\\n\\n    if (structName.indexOf(\'[]\') > -1) {\\n        type = \'tuple[]\';\\n        structName = structName.slice(0, -2);\\n    }\\n\\n    return {type: type, name: structName};\\n};\\n\\n/**\\n * Maps the simplified format in to the expected format of the ABICoder\\n *\\n * @method mapStructToCoderFormat\\n * @param {Object} struct\\n * @return {Array}\\n */\\nABICoder.prototype.mapStructToCoderFormat = function (struct) {\\n    var self = this;\\n    var components = [];\\n    Object.keys(struct).forEach(function (key) {\\n        if (typeof struct[key] === \'object\') {\\n            components.push(\\n                Object.assign(\\n                    self.mapStructNameAndType(key),\\n                    {\\n                        components: self.mapStructToCoderFormat(struct[key])\\n                    }\\n                )\\n            );\\n\\n            return;\\n        }\\n\\n        components.push({\\n            name: key,\\n            type: struct[key]\\n        });\\n    });\\n\\n    return components;\\n};\\n\\n/**\\n * Encodes a function call from its json interface and parameters.\\n *\\n * @method encodeFunctionCall\\n * @param {Array} jsonInterface\\n * @param {Array} params\\n * @return {String} The encoded ABI for this function call\\n */\\nABICoder.prototype.encodeFunctionCall = function (jsonInterface, params) {\\n    return this.encodeFunctionSignature(jsonInterface) + this.encodeParameters(jsonInterface.inputs, params).replace(\'0x\', \'\');\\n};\\n\\n/**\\n * Should be used to decode bytes to plain param\\n *\\n * @method decodeParameter\\n * @param {String} type\\n * @param {String} bytes\\n * @return {Object} plain param\\n */\\nABICoder.prototype.decodeParameter = function (type, bytes) {\\n    return this.decodeParameters([type], bytes)[0];\\n};\\n\\n/**\\n * Should be used to decode list of params\\n *\\n * @method decodeParameter\\n * @param {Array} outputs\\n * @param {String} bytes\\n * @return {Array} array of plain params\\n */\\nABICoder.prototype.decodeParameters = function (outputs, bytes) {\\n    if (outputs.length > 0 && (!bytes || bytes === \'0x\' || bytes === \'0X\')) {\\n        throw new Error(\'Returned values aren\\\\\'t valid, did it run Out of Gas?\');\\n    }\\n\\n    var res = ethersAbiCoder.decode(this.mapTypes(outputs), \'0x\' + bytes.replace(/0x/i, \'\'));\\n    var returnValue = new Result();\\n    returnValue.__length__ = 0;\\n\\n    outputs.forEach(function (output, i) {\\n        var decodedValue = res[returnValue.__length__];\\n        decodedValue = (decodedValue === \'0x\') ? null : decodedValue;\\n\\n        returnValue[i] = decodedValue;\\n\\n        if (_.isObject(output) && output.name) {\\n            returnValue[output.name] = decodedValue;\\n        }\\n\\n        returnValue.__length__++;\\n    });\\n\\n    return returnValue;\\n};\\n\\n/**\\n * Decodes events non- and indexed parameters.\\n *\\n * @method decodeLog\\n * @param {Object} inputs\\n * @param {String} data\\n * @param {Array} topics\\n * @return {Array} array of plain params\\n */\\nABICoder.prototype.decodeLog = function (inputs, data, topics) {\\n    var _this = this;\\n    topics = _.isArray(topics) ? topics : [topics];\\n\\n    data = data || \'\';\\n\\n    var notIndexedInputs = [];\\n    var indexedParams = [];\\n    var topicCount = 0;\\n\\n    // TODO check for anonymous logs?\\n\\n    inputs.forEach(function (input, i) {\\n        if (input.indexed) {\\n            indexedParams[i] = ([\'bool\', \'int\', \'uint\', \'address\', \'fixed\', \'ufixed\'].find(function (staticType) {\\n                return input.type.indexOf(staticType) !== -1;\\n            })) ? _this.decodeParameter(input.type, topics[topicCount]) : topics[topicCount];\\n            topicCount++;\\n        } else {\\n            notIndexedInputs[i] = input;\\n        }\\n    });\\n\\n\\n    var nonIndexedData = data;\\n    var notIndexedParams = (nonIndexedData) ? this.decodeParameters(notIndexedInputs, nonIndexedData) : [];\\n\\n    var returnValue = new Result();\\n    returnValue.__length__ = 0;\\n\\n\\n    inputs.forEach(function (res, i) {\\n        returnValue[i] = (res.type === \'string\') ? \'\' : null;\\n\\n        if (typeof notIndexedParams[i] !== \'undefined\') {\\n            returnValue[i] = notIndexedParams[i];\\n        }\\n        if (typeof indexedParams[i] !== \'undefined\') {\\n            returnValue[i] = indexedParams[i];\\n        }\\n\\n        if (res.name) {\\n            returnValue[res.name] = returnValue[i];\\n        }\\n\\n        returnValue.__length__++;\\n    });\\n\\n    return returnValue;\\n};\\n\\nvar coder = new ABICoder();\\n\\nmodule.exports = coder;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,null,1,1,909,267,null,642,null,null,null,1,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,1,1505,7,null,null,1505,null,null,null,null,null,null,null,null,null,1,276,3,null,null,276,null,null,null,null,null,null,null,null,null,null,1,85,null,null,null,null,null,null,null,null,null,null,1,225,null,null,null,null,null,null,null,null,null,1,527,527,527,703,0,0,null,null,null,null,null,null,null,null,0,null,null,703,null,null,527,null,null,null,null,null,null,null,null,null,1,703,null,null,null,null,null,null,null,null,null,1,0,null,0,0,0,null,null,0,null,null,null,null,null,null,null,null,null,1,0,0,0,0,0,null,null,null,null,null,null,null,null,0,null,null,0,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,1,3,null,null,null,null,null,null,null,null,null,null,1,174,null,null,null,null,null,null,null,null,null,null,1,313,11,null,null,302,301,301,null,301,392,392,null,392,null,392,131,null,null,392,null,null,301,null,null,null,null,null,null,null,null,null,null,null,1,52,52,null,52,null,52,52,52,null,null,null,52,190,101,300,null,101,null,89,null,null,null,null,52,52,null,52,52,null,null,52,190,null,190,89,null,190,101,null,null,190,190,null,null,190,null,null,52,null,null,1,null,1,null],"branches":[29,1,0,267,29,1,1,642,29,2,0,909,29,2,1,291,29,2,2,267,29,2,3,267,53,3,0,7,53,3,1,1498,68,4,0,3,68,4,1,273,110,5,0,0,110,5,1,703,138,6,0,703,138,6,1,277,138,6,2,273,151,7,0,0,151,7,1,0,170,8,0,0,170,8,1,0,225,9,0,11,225,9,1,302,225,10,0,313,225,10,1,313,225,10,2,311,225,10,3,302,235,11,0,1,235,11,1,391,239,12,0,131,239,12,1,261,239,13,0,392,239,13,1,135,260,14,0,52,260,14,1,0,262,15,0,52,262,15,1,3,271,16,0,101,271,16,1,89,272,17,0,99,272,17,1,2,283,18,0,49,283,18,1,3,290,19,0,4,290,19,1,186,292,20,0,89,292,20,1,101,295,21,0,101,295,21,1,89,299,22,0,190,299,22,1,0]},{"name":"packages/conflux-web-utils/src/index.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file utils.js\\n * @author Marek Kotewicz <marek@parity.io>\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\nvar _ = require(\'underscore\');\\nvar ethjsUnit = require(\'ethjs-unit\');\\nvar utils = require(\'./utils.js\');\\nvar soliditySha3 = require(\'./soliditySha3.js\');\\nvar randomHex = require(\'randomhex\');\\n\\n\\n\\n/**\\n * Fires an error in an event emitter and callback and returns the eventemitter\\n *\\n * @method _fireError\\n * @param {Object} error a string, a error, or an object with {message, data}\\n * @param {Object} emitter\\n * @param {Function} reject\\n * @param {Function} callback\\n * @return {Object} the emitter\\n */\\nvar _fireError = function (error, emitter, reject, callback) {\\n    /*jshint maxcomplexity: 10 */\\n\\n    // add data if given\\n    if(_.isObject(error) && !(error instanceof Error) &&  error.data) {\\n        if(_.isObject(error.data) || _.isArray(error.data)) {\\n            error.data = JSON.stringify(error.data, null, 2);\\n        }\\n\\n        error = error.message +\\"\\\\n\\"+ error.data;\\n    }\\n\\n    if(_.isString(error)) {\\n        error = new Error(error);\\n    }\\n\\n    if (_.isFunction(callback)) {\\n        callback(error);\\n    }\\n    if (_.isFunction(reject)) {\\n        // suppress uncatched error if an error listener is present\\n        // OR suppress uncatched error if an callback listener is present\\n        if (emitter &&\\n            (_.isFunction(emitter.listeners) &&\\n            emitter.listeners(\'error\').length) || _.isFunction(callback)) {\\n            emitter.catch(function(){});\\n        }\\n        // reject later, to be able to return emitter\\n        setTimeout(function () {\\n            reject(error);\\n        }, 1);\\n    }\\n\\n    if(emitter && _.isFunction(emitter.emit)) {\\n        // emit later, to be able to return emitter\\n        setTimeout(function () {\\n            emitter.emit(\'error\', error);\\n            emitter.removeAllListeners();\\n        }, 1);\\n    }\\n\\n    return emitter;\\n};\\n\\n/**\\n * Should be used to create full function/event name from json abi\\n *\\n * @method _jsonInterfaceMethodToString\\n * @param {Object} json\\n * @return {String} full function/event name\\n */\\nvar _jsonInterfaceMethodToString = function (json) {\\n    if (_.isObject(json) && json.name && json.name.indexOf(\'(\') !== -1) {\\n        return json.name;\\n    }\\n\\n    return json.name + \'(\' + _flattenTypes(false, json.inputs).join(\',\') + \')\';\\n};\\n\\n\\n/**\\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\\n *\\n * @method _flattenTypes\\n * @param {bool} includeTuple\\n * @param {Object} puts\\n * @return {Array} parameters as strings\\n */\\nvar _flattenTypes = function(includeTuple, puts)\\n{\\n    // console.log(\\"entered _flattenTypes. inputs/outputs: \\" + puts)\\n    var types = [];\\n\\n    puts.forEach(function(param) {\\n        if (typeof param.components === \'object\') {\\n            if (param.type.substring(0, 5) !== \'tuple\') {\\n                throw new Error(\'components found but type is not tuple; report on GitHub\');\\n            }\\n            var suffix = \'\';\\n            var arrayBracket = param.type.indexOf(\'[\');\\n            if (arrayBracket >= 0) { suffix = param.type.substring(arrayBracket); }\\n            var result = _flattenTypes(includeTuple, param.components);\\n            // console.log(\\"result should have things: \\" + result)\\n            if(_.isArray(result) && includeTuple) {\\n                // console.log(\\"include tuple word, and its an array. joining...: \\" + result.types)\\n                types.push(\'tuple(\' + result.join(\',\') + \')\' + suffix);\\n            }\\n            else if(!includeTuple) {\\n                // console.log(\\"don\'t include tuple, but its an array. joining...: \\" + result)\\n                types.push(\'(\' + result.join(\',\') + \')\' + suffix);\\n            }\\n            else {\\n                // console.log(\\"its a single type within a tuple: \\" + result.types)\\n                types.push(\'(\' + result + \')\');\\n            }\\n        } else {\\n            // console.log(\\"its a type and not directly in a tuple: \\" + param.type)\\n            types.push(param.type);\\n        }\\n    });\\n\\n    return types;\\n};\\n\\n\\n/**\\n * Should be called to get ascii from it\'s hex representation\\n *\\n * @method hexToAscii\\n * @param {String} hex\\n * @returns {String} ascii string representation of hex value\\n */\\nvar hexToAscii = function(hex) {\\n    if (!utils.isHexStrict(hex))\\n        throw new Error(\'The parameter must be a valid HEX string.\');\\n\\n    var str = \\"\\";\\n    var i = 0, l = hex.length;\\n    if (hex.substring(0, 2) === \'0x\') {\\n        i = 2;\\n    }\\n    for (; i < l; i+=2) {\\n        var code = parseInt(hex.substr(i, 2), 16);\\n        str += String.fromCharCode(code);\\n    }\\n\\n    return str;\\n};\\n\\n/**\\n * Should be called to get hex representation (prefixed by 0x) of ascii string\\n *\\n * @method asciiToHex\\n * @param {String} str\\n * @returns {String} hex representation of input string\\n */\\nvar asciiToHex = function(str) {\\n    if(!str)\\n        return \\"0x00\\";\\n    var hex = \\"\\";\\n    for(var i = 0; i < str.length; i++) {\\n        var code = str.charCodeAt(i);\\n        var n = code.toString(16);\\n        hex += n.length < 2 ? \'0\' + n : n;\\n    }\\n\\n    return \\"0x\\" + hex;\\n};\\n\\n\\n\\n/**\\n * Returns value of unit in Wei\\n *\\n * @method getUnitValue\\n * @param {String} unit the unit to convert to, default ether\\n * @returns {BN} value of the unit (in Wei)\\n * @throws error if the unit is not correct:w\\n */\\nvar getUnitValue = function (unit) {\\n    unit = unit ? unit.toLowerCase() : \'ether\';\\n    if (!ethjsUnit.unitMap[unit]) {\\n        throw new Error(\'This unit \\"\'+ unit +\'\\" doesn\\\\\'t exist, please use the one of the following units\' + JSON.stringify(ethjsUnit.unitMap, null, 2));\\n    }\\n    return unit;\\n};\\n\\n/**\\n * Takes a number of wei and converts it to any other ether unit.\\n *\\n * Possible units are:\\n *   SI Short   SI Full        Effigy       Other\\n * - kwei       femtoether     babbage\\n * - mwei       picoether      lovelace\\n * - gwei       nanoether      shannon      nano\\n * - --         microether     szabo        micro\\n * - --         milliether     finney       milli\\n * - ether      --             --\\n * - kether                    --           grand\\n * - mether\\n * - gether\\n * - tether\\n *\\n * @method fromWei\\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\\n * @param {String} unit the unit to convert to, default ether\\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\\n */\\nvar fromWei = function(number, unit) {\\n    unit = getUnitValue(unit);\\n\\n    if(!utils.isBN(number) && !_.isString(number)) {\\n        throw new Error(\'Please pass numbers as strings or BigNumber objects to avoid precision errors.\');\\n    }\\n\\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\\n};\\n\\n/**\\n * Takes a number of a unit and converts it to wei.\\n *\\n * Possible units are:\\n *   SI Short   SI Full        Effigy       Other\\n * - kwei       femtoether     babbage\\n * - mwei       picoether      lovelace\\n * - gwei       nanoether      shannon      nano\\n * - --         microether     szabo        micro\\n * - --         microether     szabo        micro\\n * - --         milliether     finney       milli\\n * - ether      --             --\\n * - kether                    --           grand\\n * - mether\\n * - gether\\n * - tether\\n *\\n * @method toWei\\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\\n * @param {String} unit the unit to convert from, default ether\\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\\n */\\nvar toWei = function(number, unit) {\\n    unit = getUnitValue(unit);\\n\\n    if(!utils.isBN(number) && !_.isString(number)) {\\n        throw new Error(\'Please pass numbers as strings or BigNumber objects to avoid precision errors.\');\\n    }\\n\\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\\n};\\n\\n\\n\\n\\n/**\\n * Converts to a checksum address\\n *\\n * @method toChecksumAddress\\n * @param {String} address the given HEX address\\n * @return {String}\\n */\\nvar toChecksumAddress = function (address) {\\n    if (typeof address === \'undefined\') return \'\';\\n\\n    if(!/^(0x)?[0-9a-f]{40}$/i.test(address))\\n        throw new Error(\'Given address \\"\'+ address +\'\\" is not a valid Ethereum address.\');\\n\\n\\n\\n    address = address.toLowerCase().replace(/^0x/i,\'\');\\n    var addressHash = utils.sha3(address).replace(/^0x/i,\'\');\\n    var checksumAddress = \'0x\';\\n\\n    for (var i = 0; i < address.length; i++ ) {\\n        // If ith character is 9 to f then make it uppercase\\n        if (parseInt(addressHash[i], 16) > 7) {\\n            checksumAddress += address[i].toUpperCase();\\n        } else {\\n            checksumAddress += address[i];\\n        }\\n    }\\n    return checksumAddress;\\n};\\n\\n\\n\\nmodule.exports = {\\n    _fireError: _fireError,\\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\\n    _flattenTypes: _flattenTypes,\\n    // extractDisplayName: extractDisplayName,\\n    // extractTypeName: extractTypeName,\\n    randomHex: randomHex,\\n    _: _,\\n    BN: utils.BN,\\n    isBN: utils.isBN,\\n    isBigNumber: utils.isBigNumber,\\n    isHex: utils.isHex,\\n    isHexStrict: utils.isHexStrict,\\n    sha3: utils.sha3,\\n    keccak256: utils.sha3,\\n    soliditySha3: soliditySha3,\\n    isAddress: utils.isAddress,\\n    checkAddressChecksum: utils.checkAddressChecksum,\\n    toChecksumAddress: toChecksumAddress,\\n    toHex: utils.toHex,\\n    toBN: utils.toBN,\\n\\n    bytesToHex: utils.bytesToHex,\\n    hexToBytes: utils.hexToBytes,\\n\\n    hexToNumberString: utils.hexToNumberString,\\n\\n    hexToNumber: utils.hexToNumber,\\n    toDecimal: utils.hexToNumber, // alias\\n\\n    numberToHex: utils.numberToHex,\\n    fromDecimal: utils.numberToHex, // alias\\n\\n    hexToUtf8: utils.hexToUtf8,\\n    hexToString: utils.hexToUtf8,\\n    toUtf8: utils.hexToUtf8,\\n\\n    utf8ToHex: utils.utf8ToHex,\\n    stringToHex: utils.utf8ToHex,\\n    fromUtf8: utils.utf8ToHex,\\n\\n    hexToAscii: hexToAscii,\\n    toAscii: hexToAscii,\\n    asciiToHex: asciiToHex,\\n    fromAscii: asciiToHex,\\n\\n    unitMap: ethjsUnit.unitMap,\\n    toWei: toWei,\\n    fromWei: fromWei,\\n\\n    padLeft: utils.leftPad,\\n    leftPad: utils.leftPad,\\n    padRight: utils.rightPad,\\n    rightPad: utils.rightPad,\\n    toTwosComplement: utils.toTwosComplement\\n};\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,3,3,3,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,null,null,15,0,0,null,null,0,null,null,15,0,null,null,15,5,null,15,null,null,15,null,null,8,null,null,15,15,null,null,null,15,null,8,8,8,null,null,null,15,null,null,null,null,null,null,null,null,null,3,1793,0,null,null,1793,null,null,null,null,null,null,null,null,null,null,null,3,null,null,1928,null,1928,2761,135,0,null,135,135,135,135,null,135,null,0,null,135,null,135,null,null,null,0,null,null,null,2626,null,null,null,1928,null,null,null,null,null,null,null,null,null,null,3,3,0,null,3,3,3,3,null,3,97,97,null,null,3,null,null,null,null,null,null,null,null,null,3,3,0,3,3,97,97,97,null,null,3,null,null,null,null,null,null,null,null,null,null,null,null,3,41,41,1,null,40,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,12,null,12,0,null,null,12,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,29,null,28,0,null,null,28,null,null,null,null,null,null,null,null,null,null,null,null,3,469,null,467,0,null,null,null,467,467,467,null,467,null,18680,9314,null,9366,null,null,467,null,null,null,null,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[47,1,0,0,47,1,1,15,47,2,0,15,47,2,1,15,47,2,2,3,48,3,0,0,48,3,1,0,48,4,0,0,48,4,1,0,55,5,0,0,55,5,1,15,59,6,0,5,59,6,1,10,62,7,0,15,62,7,1,0,65,8,0,8,65,8,1,7,65,9,0,15,65,9,1,15,65,9,2,8,65,9,3,12,76,10,0,8,76,10,1,7,76,11,0,15,76,11,1,15,95,12,0,0,95,12,1,1793,95,13,0,1793,95,13,1,1793,95,13,2,1793,117,14,0,135,117,14,1,2626,118,15,0,0,118,15,1,135,123,16,0,0,123,16,1,135,126,17,0,0,126,17,1,135,126,18,0,135,126,18,1,135,130,19,0,135,130,19,1,0,156,20,0,0,156,20,1,3,161,21,0,3,161,21,1,0,180,22,0,0,180,22,1,3,186,23,0,16,186,23,1,81,203,24,0,41,203,24,1,0,204,25,0,1,204,25,1,40,234,26,0,0,234,26,1,12,234,27,0,12,234,27,1,12,238,28,0,0,238,28,1,12,266,29,0,0,266,29,1,28,266,30,0,28,266,30,1,28,270,31,0,0,270,31,1,28,284,32,0,2,284,32,1,467,286,33,0,0,286,33,1,467,297,34,0,9314,297,34,1,9366]},{"name":"packages/conflux-web/src/index.js","source":"/*\\n    This file is part of conflux-web.js.\\n\\n    conflux-web.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    conflux-web.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with conflux-web.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @authors:\\n *   Fabian Vogelsteller <fabian@ethereum.org>\\n *   Gav Wood <gav@parity.io>\\n *   Jeffrey Wilcke <jeffrey.wilcke@ethereum.org>\\n *   Marek Kotewicz <marek@parity.io>\\n *   Marian Oancea <marian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\n\\nvar version = require(\'../package.json\').version;\\nvar core = require(\'conflux-web-core\');\\nvar Cfx = require(\'conflux-web-cfx\');\\nvar Net = require(\'conflux-web-net\');\\n//var Personal = require(\'conflux-web-eth-personal\');\\n//var Shh = require(\'conflux-web-shh\');\\n//var Bzz = require(\'conflux-web-bzz\');\\nvar utils = require(\'conflux-web-utils\');\\n\\nvar ConfluxWeb = function ConfluxWeb() {\\n    var _this = this;\\n\\n    // sets _requestmanager etc\\n    core.packageInit(this, arguments);\\n\\n    this.version = version;\\n    this.utils = utils;\\n\\n    this.cfx = new Cfx(this);\\n    //this.shh = new Shh(this);\\n    //this.bzz = new Bzz(this);\\n\\n    // overwrite package setProvider\\n    var setProvider = this.setProvider;\\n    this.setProvider = function (provider, net) {\\n        setProvider.apply(_this, arguments);\\n\\n        this.cfx.setProvider(provider, net);\\n        //this.shh.setProvider(provider, net);\\n        //this.bzz.setProvider(provider);\\n\\n        return true;\\n    };\\n};\\n\\nConfluxWeb.version = version;\\nConfluxWeb.utils = utils;\\nConfluxWeb.modules = {\\n    Cfx: Cfx,\\n    Net: Net,\\n    //Personal: Personal,\\n    //Shh: Shh,\\n    //Bzz: Bzz\\n};\\n\\ncore.addProviders(ConfluxWeb);\\n\\nmodule.exports = ConfluxWeb;\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,null,null,null,1,null,1,221,null,null,221,null,220,220,null,220,null,null,null,null,220,220,17,null,16,null,null,null,16,null,null,null,1,1,1,null,null,null,null,null,null,null,1,null,1,null,null],"branches":[]},{"name":"packages/conflux-web-core/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\n\\nvar requestManager = require(\'conflux-web-core-requestmanager\');\\nvar extend = require(\'./extend.js\');\\n\\nmodule.exports = {\\n    packageInit: function (pkg, args) {\\n        args = Array.prototype.slice.call(args);\\n\\n        if (!pkg) {\\n            throw new Error(\'You need to instantiate using the \\"new\\" keyword.\');\\n        }\\n\\n\\n        // make property of pkg._provider, which can properly set providers\\n        Object.defineProperty(pkg, \'currentProvider\', {\\n            get: function () {\\n                return pkg._provider;\\n            },\\n            set: function (value) {\\n                return pkg.setProvider(value);\\n            },\\n            enumerable: true,\\n            configurable: true\\n        });\\n\\n        // inherit from web3 umbrella package\\n        if (args[0] && args[0]._requestManager) {\\n            pkg._requestManager = new requestManager.Manager(args[0].currentProvider);\\n\\n        // set requestmanager on package\\n        } else {\\n            pkg._requestManager = new requestManager.Manager();\\n            pkg._requestManager.setProvider(args[0], args[1]);\\n        }\\n\\n        // add givenProvider\\n        pkg.givenProvider = requestManager.Manager.givenProvider;\\n        pkg.providers = requestManager.Manager.providers;\\n\\n         pkg._provider =  pkg._requestManager.provider;\\n\\n        // add SETPROVIDER function (don\'t overwrite if already existing)\\n        if (!pkg.setProvider) {\\n            pkg.setProvider = function (provider, net) {\\n                pkg._requestManager.setProvider(provider, net);\\n                pkg._provider = pkg._requestManager.provider;\\n                return true;\\n            };\\n        }\\n\\n        // attach batch request creation\\n        pkg.BatchRequest = requestManager.BatchManager.bind(null, pkg._requestManager);\\n\\n        // attach extend function\\n        pkg.extend = extend(pkg);\\n    },\\n    addProviders: function (pkg) {\\n        pkg.givenProvider = requestManager.Manager.givenProvider;\\n        pkg.providers = requestManager.Manager.providers;\\n    }\\n};\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,null,1,null,3280,null,3280,0,null,null,null,null,3280,null,1624,null,null,0,null,null,null,null,null,null,3280,268,null,null,null,3012,3012,null,null,null,3277,3277,null,3277,null,null,3277,2779,286,283,283,null,null,null,null,3277,null,null,3277,null,null,3,3,null,null,null,null],"branches":[33,1,0,0,33,1,1,3280,51,2,0,268,51,2,1,3012,51,3,0,3280,51,3,1,1757,67,4,0,2779,67,4,1,498]},{"name":"packages/conflux-web-core-requestmanager/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\n\\nvar _ = require(\'underscore\');\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\nvar Jsonrpc = require(\'./jsonrpc.js\');\\nvar BatchManager = require(\'./batch.js\');\\nvar givenProvider = require(\'./givenProvider.js\');\\n\\n\\n\\n    /**\\n * It\'s responsible for passing messages to providers\\n * It\'s also responsible for polling the ethereum node for incoming messages\\n * Default poll timeout is 1 second\\n * Singleton\\n */\\nvar RequestManager = function RequestManager(provider) {\\n    this.provider = null;\\n    this.providers = RequestManager.providers;\\n\\n    this.setProvider(provider);\\n    this.subscriptions = {};\\n};\\n\\n\\n\\nRequestManager.givenProvider = givenProvider;\\n\\nRequestManager.providers = {\\n    WebsocketProvider: require(\'conflux-web-providers-ws\'),\\n    HttpProvider: require(\'conflux-web-providers-http\'),\\n    IpcProvider: require(\'conflux-web-providers-ipc\')\\n};\\n\\n\\n\\n/**\\n * Should be used to set provider of request manager\\n *\\n * @method setProvider\\n * @param {Object} p\\n */\\nRequestManager.prototype.setProvider = function (p, net) {\\n    var _this = this;\\n\\n    // autodetect provider\\n    if(p && typeof p === \'string\' && this.providers) {\\n\\n        // HTTP\\n        if(/^http(s)?:\\\\/\\\\//i.test(p)) {\\n            p = new this.providers.HttpProvider(p);\\n\\n            // WS\\n        } else if(/^ws(s)?:\\\\/\\\\//i.test(p)) {\\n            p = new this.providers.WebsocketProvider(p);\\n\\n            // IPC\\n        } else if(p && typeof net === \'object\'  && typeof net.connect === \'function\') {\\n            p = new this.providers.IpcProvider(p, net);\\n\\n        } else if(p) {\\n            throw new Error(\'Can\\\\\'t autodetect provider for \\"\'+ p +\'\\"\');\\n        }\\n    }\\n\\n    // reset the old one before changing, if still connected\\n    if(this.provider && this.provider.connected)\\n        this.clearSubscriptions();\\n\\n\\n    this.provider = p || null;\\n\\n    // listen to incoming notifications\\n    if(this.provider && this.provider.on) {\\n        this.provider.on(\'data\', function requestManagerNotification(result, deprecatedResult){\\n            result = result || deprecatedResult; // this is for possible old providers, which may had the error first handler\\n\\n            // check for result.method, to prevent old providers errors to pass as result\\n            if(result.method && _this.subscriptions[result.params.subscription] && _this.subscriptions[result.params.subscription].callback) {\\n                _this.subscriptions[result.params.subscription].callback(null, result.params.result);\\n            }\\n        });\\n        // TODO add error, end, timeout, connect??\\n        // this.provider.on(\'error\', function requestManagerNotification(result){\\n        //     Object.keys(_this.subscriptions).forEach(function(id){\\n        //         if(_this.subscriptions[id].callback)\\n        //             _this.subscriptions[id].callback(err);\\n        //     });\\n        // }\\n    }\\n};\\n\\n\\n/**\\n * Should be used to asynchronously send request\\n *\\n * @method sendAsync\\n * @param {Object} data\\n * @param {Function} callback\\n */\\nRequestManager.prototype.send = function (data, callback) {\\n    callback = callback || function(){};\\n\\n    if (!this.provider) {\\n        return callback(errors.InvalidProvider());\\n    }\\n\\n    var payload = Jsonrpc.toPayload(data.method, data.params);\\n    this.provider[this.provider.sendAsync ? \'sendAsync\' : \'send\'](payload, function (err, result) {\\n        if(result && result.id && payload.id !== result.id) return callback(new Error(\'Wrong response id \\"\'+ result.id +\'\\" (expected: \\"\'+ payload.id +\'\\") in \'+ JSON.stringify(payload)));\\n\\n        if (err) {\\n            return callback(err);\\n        }\\n\\n        if (result && result.error) {\\n            return callback(errors.ErrorResponse(result));\\n        }\\n\\n        if (!Jsonrpc.isValidResponse(result)) {\\n            return callback(errors.InvalidResponse(result));\\n        }\\n\\n        callback(null, result.result);\\n    });\\n};\\n\\n/**\\n * Should be called to asynchronously send batch request\\n *\\n * @method sendBatch\\n * @param {Array} batch data\\n * @param {Function} callback\\n */\\nRequestManager.prototype.sendBatch = function (data, callback) {\\n    if (!this.provider) {\\n        return callback(errors.InvalidProvider());\\n    }\\n\\n    var payload = Jsonrpc.toBatchPayload(data);\\n    this.provider[this.provider.sendAsync ? \'sendAsync\' : \'send\'](payload, function (err, results) {\\n        if (err) {\\n            return callback(err);\\n        }\\n\\n        if (!_.isArray(results)) {\\n            return callback(errors.InvalidResponse(results));\\n        }\\n\\n        callback(null, results);\\n    });\\n};\\n\\n\\n/**\\n * Waits for notifications\\n *\\n * @method addSubscription\\n * @param {String} id           the subscription id\\n * @param {String} name         the subscription name\\n * @param {String} type         the subscription namespace (eth, personal, etc)\\n * @param {Function} callback   the callback to call for incoming notifications\\n */\\nRequestManager.prototype.addSubscription = function (id, name, type, callback) {\\n    if(this.provider.on) {\\n        this.subscriptions[id] = {\\n            callback: callback,\\n            type: type,\\n            name: name\\n        };\\n\\n    } else {\\n        throw new Error(\'The provider doesn\\\\\'t support subscriptions: \'+ this.provider.constructor.name);\\n    }\\n};\\n\\n/**\\n * Waits for notifications\\n *\\n * @method removeSubscription\\n * @param {String} id           the subscription id\\n * @param {Function} callback   fired once the subscription is removed\\n */\\nRequestManager.prototype.removeSubscription = function (id, callback) {\\n    var _this = this;\\n\\n    if(this.subscriptions[id]) {\\n\\n        this.send({\\n            method: this.subscriptions[id].type + \'_unsubscribe\',\\n            params: [id]\\n        }, callback);\\n\\n        // remove subscription\\n        delete _this.subscriptions[id];\\n    }\\n};\\n\\n/**\\n * Should be called to reset the subscriptions\\n *\\n * @method reset\\n */\\nRequestManager.prototype.clearSubscriptions = function (keepIsSyncing) {\\n    var _this = this;\\n\\n\\n    // uninstall all subscriptions\\n    Object.keys(this.subscriptions).forEach(function(id){\\n        if(!keepIsSyncing || _this.subscriptions[id].name !== \'syncing\')\\n            _this.removeSubscription(id);\\n    });\\n\\n\\n    //  reset notification callbacks etc.\\n    if(this.provider.reset)\\n        this.provider.reset();\\n};\\n\\nmodule.exports = {\\n    Manager: RequestManager,\\n    BatchManager: BatchManager\\n};\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,1,null,null,null,null,null,null,null,null,null,1,3281,3281,null,3281,3281,null,null,null,null,1,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,6579,null,null,6579,null,null,77,22,null,null,55,27,null,null,28,22,null,6,6,null,null,null,null,6573,0,null,null,6573,null,null,6573,1860,798,null,null,798,175,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,712,null,712,0,null,null,712,712,712,null,712,3,null,null,709,0,null,null,709,0,null,null,709,null,null,null,null,null,null,null,null,null,null,1,6,0,null,null,6,6,6,0,null,null,6,0,null,null,6,null,null,null,null,null,null,null,null,null,null,null,null,null,1,45,45,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,1,41,null,41,null,41,null,null,null,null,null,41,null,null,null,null,null,null,null,null,1,0,null,null,null,0,0,0,null,null,null,null,0,0,null,null,1,null,null,null,null],"branches":[70,1,0,77,70,1,1,6502,70,2,0,6579,70,2,1,2027,70,2,2,77,73,3,0,22,73,3,1,55,77,4,0,27,77,4,1,28,81,5,0,22,81,5,1,6,81,6,0,28,81,6,1,28,81,6,2,22,84,7,0,6,84,7,1,0,90,8,0,0,90,8,1,6573,90,9,0,6573,90,9,1,223,94,10,0,6573,94,10,1,4552,97,11,0,1860,97,11,1,4713,97,12,0,6573,97,12,1,2021,99,13,0,798,99,13,1,0,102,14,0,175,102,14,1,623,102,15,0,798,102,15,1,798,102,15,2,175,125,16,0,712,125,16,1,41,127,17,0,0,127,17,1,712,132,18,0,0,132,18,1,712,133,19,0,0,133,19,1,712,133,20,0,712,133,20,1,712,133,20,2,712,135,21,0,3,135,21,1,709,139,22,0,0,139,22,1,709,139,23,0,709,139,23,1,709,143,24,0,0,143,24,1,709,159,25,0,0,159,25,1,6,164,26,0,1,164,26,1,5,165,27,0,0,165,27,1,6,169,28,0,0,169,28,1,6,188,29,0,45,188,29,1,0,210,30,0,41,210,30,1,0,233,31,0,0,233,31,1,0,233,32,0,0,233,32,1,0,239,33,0,0,239,33,1,0]},{"name":"packages/conflux-web-core-helpers/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar errors = require(\'./errors\');\\nvar formatters = require(\'./formatters\');\\n\\nmodule.exports = {\\n    errors: errors,\\n    formatters: formatters\\n};\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,3,null,null,null,null,null],"branches":[]},{"name":"packages/conflux-web-core-helpers/src/errors.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file errors.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @author Marek Kotewicz <marek@parity.io>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nmodule.exports = {\\n    ErrorResponse: function (result) {\\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);\\n        return new Error(\'Returned error: \' + message);\\n    },\\n    InvalidNumberOfParams: function (got, expected, method) {\\n        return new Error(\'Invalid number of parameters for \\"\'+ method +\'\\". Got \'+ got +\' expected \'+ expected +\'!\');\\n    },\\n    InvalidConnection: function (host){\\n        return new Error(\'CONNECTION ERROR: Couldn\\\\\'t connect to node \'+ host +\'.\');\\n    },\\n    InvalidProvider: function () {\\n        return new Error(\'Provider not set or invalid\');\\n    },\\n    InvalidResponse: function (result){\\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : \'Invalid JSON RPC response: \' + JSON.stringify(result);\\n        return new Error(message);\\n    },\\n    ConnectionTimeout: function (ms){\\n        return new Error(\'CONNECTION TIMEOUT: timeout of \' + ms + \' ms achived\');\\n    }\\n};\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,2,2,null,null,6,null,null,0,null,null,0,null,null,0,0,null,null,6,null,null,null],"branches":[28,1,0,2,28,1,1,0,28,2,0,2,28,2,1,2,28,2,2,2,41,3,0,0,41,3,1,0,41,4,0,0,41,4,1,0,41,4,2,0]},{"name":"packages/conflux-web-cfx-iban/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file iban.js\\n *\\n * Details: https://github.com/ethereum/wiki/wiki/ICAP:-Inter-exchange-Client-Address-Protocol\\n *\\n * @author Marek Kotewicz <marek@parity.io>\\n * @date 2015\\n */\\n\\n\\"use strict\\";\\n\\nvar utils = require(\'conflux-web-utils\');\\nvar BigNumber = require(\'bn.js\');\\n\\n\\nvar leftPad = function (string, bytes) {\\n    var result = string;\\n    while (result.length < bytes * 2) {\\n        result = \'0\' + result;\\n    }\\n    return result;\\n};\\n\\n/**\\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\\n *\\n * @method iso13616Prepare\\n * @param {String} iban the IBAN\\n * @returns {String} the prepared IBAN\\n */\\nvar iso13616Prepare = function (iban) {\\n    var A = \'A\'.charCodeAt(0);\\n    var Z = \'Z\'.charCodeAt(0);\\n\\n    iban = iban.toUpperCase();\\n    iban = iban.substr(4) + iban.substr(0,4);\\n\\n    return iban.split(\'\').map(function(n){\\n        var code = n.charCodeAt(0);\\n        if (code >= A && code <= Z){\\n            // A = 10, B = 11, ... Z = 35\\n            return code - A + 10;\\n        } else {\\n            return n;\\n        }\\n    }).join(\'\');\\n};\\n\\n/**\\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\\n *\\n * @method mod9710\\n * @param {String} iban\\n * @returns {Number}\\n */\\nvar mod9710 = function (iban) {\\n    var remainder = iban,\\n        block;\\n\\n    while (remainder.length > 2){\\n        block = remainder.slice(0, 9);\\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\\n    }\\n\\n    return parseInt(remainder, 10) % 97;\\n};\\n\\n/**\\n * This prototype should be used to create iban object from iban correct string\\n *\\n * @param {String} iban\\n */\\nvar Iban = function Iban(iban) {\\n    this._iban = iban;\\n};\\n\\n/**\\n * This method should be used to create an ethereum address from a direct iban address\\n *\\n * @method toAddress\\n * @param {String} iban address\\n * @return {String} the ethereum address\\n */\\nIban.toAddress = function (ib) {\\n    ib = new Iban(ib);\\n\\n    if(!ib.isDirect()) {\\n        throw new Error(\'IBAN is indirect and can\\\\\'t be converted\');\\n    }\\n\\n    return ib.toAddress();\\n};\\n\\n/**\\n * This method should be used to create iban address from an ethereum address\\n *\\n * @method toIban\\n * @param {String} address\\n * @return {String} the IBAN address\\n */\\nIban.toIban = function (address) {\\n    return Iban.fromAddress(address).toString();\\n};\\n\\n/**\\n * This method should be used to create iban object from an ethereum address\\n *\\n * @method fromAddress\\n * @param {String} address\\n * @return {Iban} the IBAN object\\n */\\nIban.fromAddress = function (address) {\\n    if(!utils.isAddress(address)){\\n        throw new Error(\'Provided address is not a valid address: \'+ address);\\n    }\\n\\n    address = address.replace(\'0x\',\'\').replace(\'0X\',\'\');\\n\\n    var asBn = new BigNumber(address, 16);\\n    var base36 = asBn.toString(36);\\n    var padded = leftPad(base36, 15);\\n    return Iban.fromBban(padded.toUpperCase());\\n};\\n\\n/**\\n * Convert the passed BBAN to an IBAN for this country specification.\\n * Please note that <i>\\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\\"</i>.\\n * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\\n *\\n * @method fromBban\\n * @param {String} bban the BBAN to convert to IBAN\\n * @returns {Iban} the IBAN object\\n */\\nIban.fromBban = function (bban) {\\n    var countryCode = \'XE\';\\n\\n    var remainder = mod9710(iso13616Prepare(countryCode + \'00\' + bban));\\n    var checkDigit = (\'0\' + (98 - remainder)).slice(-2);\\n\\n    return new Iban(countryCode + checkDigit + bban);\\n};\\n\\n/**\\n * Should be used to create IBAN object for given institution and identifier\\n *\\n * @method createIndirect\\n * @param {Object} options, required options are \\"institution\\" and \\"identifier\\"\\n * @return {Iban} the IBAN object\\n */\\nIban.createIndirect = function (options) {\\n    return Iban.fromBban(\'ETH\' + options.institution + options.identifier);\\n};\\n\\n/**\\n * This method should be used to check if given string is valid iban object\\n *\\n * @method isValid\\n * @param {String} iban string\\n * @return {Boolean} true if it is valid IBAN\\n */\\nIban.isValid = function (iban) {\\n    var i = new Iban(iban);\\n    return i.isValid();\\n};\\n\\n/**\\n * Should be called to check if iban is correct\\n *\\n * @method isValid\\n * @returns {Boolean} true if it is, otherwise false\\n */\\nIban.prototype.isValid = function () {\\n    return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) &&\\n        mod9710(iso13616Prepare(this._iban)) === 1;\\n};\\n\\n/**\\n * Should be called to check if iban number is direct\\n *\\n * @method isDirect\\n * @returns {Boolean} true if it is, otherwise false\\n */\\nIban.prototype.isDirect = function () {\\n    return this._iban.length === 34 || this._iban.length === 35;\\n};\\n\\n/**\\n * Should be called to check if iban number if indirect\\n *\\n * @method isIndirect\\n * @returns {Boolean} true if it is, otherwise false\\n */\\nIban.prototype.isIndirect = function () {\\n    return this._iban.length === 20;\\n};\\n\\n/**\\n * Should be called to get iban checksum\\n * Uses the mod-97-10 checksumming protocol (ISO/IEC 7064:2003)\\n *\\n * @method checksum\\n * @returns {String} checksum\\n */\\nIban.prototype.checksum = function () {\\n    return this._iban.substr(2, 2);\\n};\\n\\n/**\\n * Should be called to get institution identifier\\n * eg. XREG\\n *\\n * @method institution\\n * @returns {String} institution identifier\\n */\\nIban.prototype.institution = function () {\\n    return this.isIndirect() ? this._iban.substr(7, 4) : \'\';\\n};\\n\\n/**\\n * Should be called to get client identifier within institution\\n * eg. GAVOFYORK\\n *\\n * @method client\\n * @returns {String} client identifier\\n */\\nIban.prototype.client = function () {\\n    return this.isIndirect() ? this._iban.substr(11) : \'\';\\n};\\n\\n/**\\n * Should be called to get client direct address\\n *\\n * @method toAddress\\n * @returns {String} ethereum address\\n */\\nIban.prototype.toAddress = function () {\\n    if (this.isDirect()) {\\n        var base36 = this._iban.substr(4);\\n        var asBn = new BigNumber(base36, 36);\\n        return utils.toChecksumAddress(asBn.toString(16, 20));\\n    }\\n\\n    return \'\';\\n};\\n\\nIban.prototype.toString = function () {\\n    return this._iban;\\n};\\n\\nmodule.exports = Iban;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,3,null,null,3,13,13,4,null,13,null,null,null,null,null,null,null,null,null,null,3,49,49,null,49,49,null,49,1588,1588,null,1095,null,493,null,null,null,null,null,null,null,null,null,null,null,3,49,null,null,49,383,383,null,null,49,null,null,null,null,null,null,null,3,682,null,null,null,null,null,null,null,null,null,3,5,null,5,1,null,null,4,null,null,null,null,null,null,null,null,null,3,9,null,null,null,null,null,null,null,null,null,3,14,1,null,null,13,null,13,13,13,13,null,null,null,null,null,null,null,null,null,null,null,3,14,null,14,14,null,14,null,null,null,null,null,null,null,null,null,3,1,null,null,null,null,null,null,null,null,null,3,18,18,null,null,null,null,null,null,null,null,3,656,null,null,null,null,null,null,null,null,null,3,64,null,null,null,null,null,null,null,null,3,0,null,null,null,null,null,null,null,null,null,3,0,null,null,null,null,null,null,null,null,null,3,0,null,null,null,null,null,null,null,null,null,3,0,null,null,null,null,null,null,null,null,3,30,30,30,30,null,null,0,null,null,3,8,null,null,3,null],"branches":[57,1,0,1095,57,1,1,493,57,2,0,1588,57,2,1,1095,104,3,0,1,104,3,1,4,130,4,0,1,130,4,1,13,190,5,0,656,190,5,1,35,201,6,0,64,201,6,1,35,233,7,0,0,233,7,1,0,244,8,0,0,244,8,1,0,254,9,0,30,254,9,1,0]},{"name":"packages/conflux-web-core-requestmanager/src/jsonrpc.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/** @file jsonrpc.js\\n * @authors:\\n *   Fabian Vogelsteller <fabian@ethereum.org>\\n *   Marek Kotewicz <marek@ethdev.com>\\n *   Aaron Kumavis <aaron@kumavis.me>\\n * @date 2015\\n */\\n\\n\\"use strict\\";\\n\\n// Initialize Jsonrpc as a simple object with utility functions.\\nvar Jsonrpc = {\\n    messageId: 0\\n};\\n\\n/**\\n * Should be called to valid json create payload object\\n *\\n * @method toPayload\\n * @param {Function} method of jsonrpc call, required\\n * @param {Array} params, an array of method params, optional\\n * @returns {Object} valid jsonrpc payload object\\n */\\nJsonrpc.toPayload = function (method, params) {\\n    if (!method) {\\n        throw new Error(\'JSONRPC method should be specified for params: \\"\'+ JSON.stringify(params) +\'\\"!\');\\n    }\\n\\n    // advance message ID\\n    Jsonrpc.messageId++;\\n\\n    return {\\n        jsonrpc: \'2.0\',\\n        id: Jsonrpc.messageId,\\n        method: method,\\n        params: params || []\\n    };\\n};\\n\\n/**\\n * Should be called to check if jsonrpc response is valid\\n *\\n * @method isValidResponse\\n * @param {Object}\\n * @returns {Boolean} true if response is valid, otherwise false\\n */\\nJsonrpc.isValidResponse = function (response) {\\n    return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);\\n\\n    function validateSingleMessage(message){\\n      return !!message &&\\n        !message.error &&\\n        message.jsonrpc === \'2.0\' &&\\n        (typeof message.id === \'number\' || typeof message.id === \'string\') &&\\n        message.result !== undefined; // only undefined is not valid json object\\n    }\\n};\\n\\n/**\\n * Should be called to create batch payload object\\n *\\n * @method toBatchPayload\\n * @param {Array} messages, an array of objects with method (required) and params (optional) fields\\n * @returns {Array} batch payload\\n */\\nJsonrpc.toBatchPayload = function (messages) {\\n    return messages.map(function (message) {\\n        return Jsonrpc.toPayload(message.method, message.params);\\n    });\\n};\\n\\nmodule.exports = Jsonrpc;\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,731,0,null,null,null,731,null,731,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,730,null,1,730,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,8,15,null,null,null,1,null,null],"branches":[41,1,0,0,41,1,1,731,52,2,0,731,52,2,1,4,64,3,0,0,64,3,1,730,67,4,0,730,67,4,1,729,67,4,2,729,67,4,3,727,67,4,4,3,67,4,5,726]},{"name":"packages/conflux-web-core-requestmanager/src/batch.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file batch.js\\n * @author Marek Kotewicz <marek@ethdev.com>\\n * @date 2015\\n */\\n\\n\\"use strict\\";\\n\\nvar Jsonrpc = require(\'./jsonrpc\');\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\n\\nvar Batch = function (requestManager) {\\n    this.requestManager = requestManager;\\n    this.requests = [];\\n};\\n\\n/**\\n * Should be called to add create new request to batch request\\n *\\n * @method add\\n * @param {Object} jsonrpc requet object\\n */\\nBatch.prototype.add = function (request) {\\n    this.requests.push(request);\\n};\\n\\n/**\\n * Should be called to execute batch request\\n *\\n * @method execute\\n */\\nBatch.prototype.execute = function () {\\n    var requests = this.requests;\\n    this.requestManager.sendBatch(requests, function (err, results) {\\n        results = results || [];\\n        requests.map(function (request, index) {\\n            return results[index] || {};\\n        }).forEach(function (result, index) {\\n            if (requests[index].callback) {\\n                if (result && result.error) {\\n                    return requests[index].callback(errors.ErrorResponse(result));\\n                }\\n\\n                if (!Jsonrpc.isValidResponse(result)) {\\n                    return requests[index].callback(errors.InvalidResponse(result));\\n                }\\n\\n                try {\\n                    requests[index].callback(null, requests[index].format ? requests[index].format(result.result) : result.result);\\n                } catch (err) {\\n                    requests[index].callback(err);\\n                }\\n            }\\n        });\\n    });\\n};\\n\\nmodule.exports = Batch;\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,null,1,6,6,null,null,null,null,null,null,null,null,1,13,null,null,null,null,null,null,null,1,6,6,6,6,13,null,13,13,2,null,null,11,0,null,null,11,11,null,1,null,null,null,null,null,null,1,null,null],"branches":[51,1,0,6,51,1,1,0,53,2,0,13,53,2,1,0,55,3,0,13,55,3,1,0,56,4,0,2,56,4,1,11,56,5,0,13,56,5,1,13,60,6,0,0,60,6,1,11,65,7,0,11,65,7,1,0]},{"name":"packages/conflux-web-core-requestmanager/src/givenProvider.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file givenProvider.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar givenProvider = null;\\n\\n// ADD GIVEN PROVIDER\\n/* jshint ignore:start */\\nvar global;\\ntry {\\n  global = Function(\'return this\')();\\n} catch (e) {\\n  global = window;\\n}\\n\\n// EthereumProvider\\nif(typeof global.ethereumProvider !== \'undefined\') {\\n    givenProvider = global.ethereumProvider;\\n\\n// Legacy web3.currentProvider\\n} else if(typeof global.web3 !== \'undefined\' && global.web3.currentProvider) {\\n\\n    if(global.web3.currentProvider.sendAsync) {\\n        global.web3.currentProvider.send = global.web3.currentProvider.sendAsync;\\n        delete global.web3.currentProvider.sendAsync;\\n    }\\n\\n    // if connection is \'ipcProviderWrapper\', add subscription support\\n    if(!global.web3.currentProvider.on &&\\n        global.web3.currentProvider.connection &&\\n        global.web3.currentProvider.connection.constructor.name === \'ipcProviderWrapper\') {\\n\\n        global.web3.currentProvider.on = function (type, callback) {\\n\\n            if(typeof callback !== \'function\')\\n                throw new Error(\'The second parameter callback must be a function.\');\\n\\n            switch(type){\\n                case \'data\':\\n                    this.connection.on(\'data\', function(data) {\\n                        var result = \'\';\\n\\n                        data = data.toString();\\n\\n                        try {\\n                            result = JSON.parse(data);\\n                        } catch(e) {\\n                            return callback(new Error(\'Couldn\\\\\'t parse response data\'+ data));\\n                        }\\n\\n                        // notification\\n                        if(!result.id && result.method.indexOf(\'_subscription\') !== -1) {\\n                            callback(null, result);\\n                        }\\n\\n                    });\\n                    break;\\n\\n                default:\\n                    this.connection.on(type, callback);\\n                    break;\\n            }\\n        };\\n    }\\n\\n    givenProvider = global.web3.currentProvider;\\n}\\n/* jshint ignore:end */\\n\\n\\nmodule.exports = givenProvider;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,1,1,1,null,0,null,null,null,1,0,null,null,1,null,0,0,0,null,null,null,0,null,null,null,0,null,0,0,null,0,null,0,0,null,0,null,0,0,null,0,null,null,null,0,0,null,null,null,0,null,null,0,0,null,null,null,null,0,null,null,null,null,1,null],"branches":[37,1,0,0,37,1,1,1,41,2,0,0,41,2,1,1,41,3,0,1,41,3,1,0,43,4,0,0,43,4,1,0,49,5,0,0,49,5,1,0,49,6,0,0,49,6,1,0,49,6,2,0,55,7,0,0,55,7,1,0,58,8,0,0,58,8,1,0,72,9,0,0,72,9,1,0,72,10,0,0,72,10,1,0]},{"name":"packages/conflux-web-providers-ws/src/index.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/** @file WebsocketProvider.js\\n * @authors:\\n *   Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar _ = require(\'underscore\');\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\nvar Ws = require(\'websocket\').w3cwebsocket;\\n\\nvar isNode = Object.prototype.toString.call(typeof process !== \'undefined\' ? process : 0) === \'[object process]\';\\n\\nvar _btoa = null;\\nvar parseURL = null;\\nif (isNode) {\\n    _btoa = function(str) {\\n        return Buffer.from(str).toString(\'base64\');\\n    };\\n    var url = require(\'url\');\\n    if (url.URL) {\\n        // Use the new Node 6+ API for parsing URLs that supports username/password\\n        var newURL = url.URL;\\n        parseURL = function(url) {\\n            return new newURL(url);\\n        };\\n    }\\n    else {\\n        // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\\n        parseURL = require(\'url\').parse;\\n    }\\n} else {\\n    _btoa = btoa;\\n    parseURL = function(url) {\\n        return new URL(url);\\n    };\\n}\\n// Default connection ws://localhost:8546\\n\\n\\n\\n\\nvar WebsocketProvider = function WebsocketProvider(url, options)  {\\n    if (!Ws) {\\n        throw new Error(\'websocket is not available\');\\n    }\\n\\n    var _this = this;\\n    this.responseCallbacks = {};\\n    this.notificationCallbacks = [];\\n\\n    options = options || {};\\n    this._customTimeout = options.timeout;\\n\\n    // The w3cwebsocket implementation does not support Basic Auth\\n    // username/password in the URL. So generate the basic auth header, and\\n    // pass through with any additional headers supplied in constructor\\n    var parsedURL = parseURL(url);\\n    var headers = options.headers || {};\\n    var protocol = options.protocol || undefined;\\n    if (parsedURL.username && parsedURL.password) {\\n        headers.authorization = \'Basic \' + _btoa(parsedURL.username + \':\' + parsedURL.password);\\n    }\\n\\n    // Allow a custom client configuration\\n    var clientConfig = options.clientConfig || undefined;\\n    \\n    // Allow a custom request options\\n    // https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions\\n    var requestOptions = options.requestOptions || undefined;\\n\\n    // When all node core implementations that do not have the\\n    // WHATWG compatible URL parser go out of service this line can be removed.\\n    if (parsedURL.auth) {\\n        headers.authorization = \'Basic \' + _btoa(parsedURL.auth);\\n    }\\n    this.connection = new Ws(url, protocol, undefined, headers, requestOptions, clientConfig);\\n\\n    this.addDefaultEvents();\\n\\n\\n    // LISTEN FOR CONNECTION RESPONSES\\n    this.connection.onmessage = function(e) {\\n        /*jshint maxcomplexity: 6 */\\n        var data = (typeof e.data === \'string\') ? e.data : \'\';\\n\\n        _this._parseResponse(data).forEach(function(result){\\n\\n            var id = null;\\n\\n            // get the id which matches the returned id\\n            if(_.isArray(result)) {\\n                result.forEach(function(load){\\n                    if(_this.responseCallbacks[load.id])\\n                        id = load.id;\\n                });\\n            } else {\\n                id = result.id;\\n            }\\n\\n            // notification\\n            if(!id && result && result.method && result.method.indexOf(\'_subscription\') !== -1) {\\n                _this.notificationCallbacks.forEach(function(callback){\\n                    if(_.isFunction(callback))\\n                        callback(result);\\n                });\\n\\n                // fire the callback\\n            } else if(_this.responseCallbacks[id]) {\\n                _this.responseCallbacks[id](null, result);\\n                delete _this.responseCallbacks[id];\\n            }\\n        });\\n    };\\n\\n    // make property `connected` which will return the current connection status\\n    Object.defineProperty(this, \'connected\', {\\n      get: function () {\\n        return this.connection && this.connection.readyState === this.connection.OPEN;\\n      },\\n      enumerable: true,\\n  });\\n};\\n\\n/**\\n Will add the error and end event to timeout existing calls\\n\\n @method addDefaultEvents\\n */\\nWebsocketProvider.prototype.addDefaultEvents = function(){\\n    var _this = this;\\n\\n    this.connection.onerror = function(){\\n        _this._timeout();\\n    };\\n\\n    this.connection.onclose = function(){\\n        _this._timeout();\\n\\n        // reset all requests and callbacks\\n        _this.reset();\\n    };\\n\\n    // this.connection.on(\'timeout\', function(){\\n    //     _this._timeout();\\n    // });\\n};\\n\\n/**\\n Will parse the response and make an array out of it.\\n\\n @method _parseResponse\\n @param {String} data\\n */\\nWebsocketProvider.prototype._parseResponse = function(data) {\\n    var _this = this,\\n        returnValues = [];\\n\\n    // DE-CHUNKER\\n    var dechunkedData = data\\n        .replace(/\\\\}[\\\\n\\\\r]?\\\\{/g,\'}|--|{\') // }{\\n        .replace(/\\\\}\\\\][\\\\n\\\\r]?\\\\[\\\\{/g,\'}]|--|[{\') // }][{\\n        .replace(/\\\\}[\\\\n\\\\r]?\\\\[\\\\{/g,\'}|--|[{\') // }[{\\n        .replace(/\\\\}\\\\][\\\\n\\\\r]?\\\\{/g,\'}]|--|{\') // }]{\\n        .split(\'|--|\');\\n\\n    dechunkedData.forEach(function(data){\\n\\n        // prepend the last chunk\\n        if(_this.lastChunk)\\n            data = _this.lastChunk + data;\\n\\n        var result = null;\\n\\n        try {\\n            result = JSON.parse(data);\\n\\n        } catch(e) {\\n\\n            _this.lastChunk = data;\\n\\n            // start timeout to cancel all requests\\n            clearTimeout(_this.lastChunkTimeout);\\n            _this.lastChunkTimeout = setTimeout(function(){\\n                _this._timeout();\\n                throw errors.InvalidResponse(data);\\n            }, 1000 * 15);\\n\\n            return;\\n        }\\n\\n        // cancel timeout and set chunk to null\\n        clearTimeout(_this.lastChunkTimeout);\\n        _this.lastChunk = null;\\n\\n        if(result)\\n            returnValues.push(result);\\n    });\\n\\n    return returnValues;\\n};\\n\\n\\n/**\\n Adds a callback to the responseCallbacks object,\\n which will be called if a response matching the response Id will arrive.\\n\\n @method _addResponseCallback\\n */\\nWebsocketProvider.prototype._addResponseCallback = function(payload, callback) {\\n    var id = payload.id || payload[0].id;\\n    var method = payload.method || payload[0].method;\\n\\n    this.responseCallbacks[id] = callback;\\n    this.responseCallbacks[id].method = method;\\n\\n    var _this = this;\\n\\n    // schedule triggering the error response if a custom timeout is set\\n    if (this._customTimeout) {\\n        setTimeout(function () {\\n            if (_this.responseCallbacks[id]) {\\n                _this.responseCallbacks[id](errors.ConnectionTimeout(_this._customTimeout));\\n                delete _this.responseCallbacks[id];\\n            }\\n        }, this._customTimeout);\\n    }\\n};\\n\\n/**\\n Timeout all requests when the end/error event is fired\\n\\n @method _timeout\\n */\\nWebsocketProvider.prototype._timeout = function() {\\n    for(var key in this.responseCallbacks) {\\n        if(this.responseCallbacks.hasOwnProperty(key)){\\n            this.responseCallbacks[key](errors.InvalidConnection(\'on WS\'));\\n            delete this.responseCallbacks[key];\\n        }\\n    }\\n};\\n\\n\\nWebsocketProvider.prototype.send = function (payload, callback) {\\n    var _this = this;\\n\\n    if (this.connection.readyState === this.connection.CONNECTING) {\\n        setTimeout(function () {\\n            _this.send(payload, callback);\\n        }, 10);\\n        return;\\n    }\\n\\n    // try reconnect, when connection is gone\\n    // if(!this.connection.writable)\\n    //     this.connection.connect({url: this.url});\\n    if (this.connection.readyState !== this.connection.OPEN) {\\n        console.error(\'connection not open on send()\');\\n        if (typeof this.connection.onerror === \'function\') {\\n            this.connection.onerror(new Error(\'connection not open\'));\\n        } else {\\n            console.error(\'no error callback\');\\n        }\\n        callback(new Error(\'connection not open\'));\\n        return;\\n    }\\n\\n    this.connection.send(JSON.stringify(payload));\\n    this._addResponseCallback(payload, callback);\\n};\\n\\n/**\\n Subscribes to provider events.provider\\n\\n @method on\\n @param {String} type    \'notifcation\', \'connect\', \'error\', \'end\' or \'data\'\\n @param {Function} callback   the callback to call\\n */\\nWebsocketProvider.prototype.on = function (type, callback) {\\n\\n    if(typeof callback !== \'function\')\\n        throw new Error(\'The second parameter callback must be a function.\');\\n\\n    switch(type){\\n        case \'data\':\\n            this.notificationCallbacks.push(callback);\\n            break;\\n\\n        case \'connect\':\\n            this.connection.onopen = callback;\\n            break;\\n\\n        case \'end\':\\n            this.connection.onclose = callback;\\n            break;\\n\\n        case \'error\':\\n            this.connection.onerror = callback;\\n            break;\\n\\n        // default:\\n        //     this.connection.on(type, callback);\\n        //     break;\\n    }\\n};\\n\\n// TODO add once\\n\\n/**\\n Removes event listener\\n\\n @method removeListener\\n @param {String} type    \'notifcation\', \'connect\', \'error\', \'end\' or \'data\'\\n @param {Function} callback   the callback to call\\n */\\nWebsocketProvider.prototype.removeListener = function (type, callback) {\\n    var _this = this;\\n\\n    switch(type){\\n        case \'data\':\\n            this.notificationCallbacks.forEach(function(cb, index){\\n                if(cb === callback)\\n                    _this.notificationCallbacks.splice(index, 1);\\n            });\\n            break;\\n\\n        // TODO remvoving connect missing\\n\\n        // default:\\n        //     this.connection.removeListener(type, callback);\\n        //     break;\\n    }\\n};\\n\\n/**\\n Removes all event listeners\\n\\n @method removeAllListeners\\n @param {String} type    \'notifcation\', \'connect\', \'error\', \'end\' or \'data\'\\n */\\nWebsocketProvider.prototype.removeAllListeners = function (type) {\\n    switch(type){\\n        case \'data\':\\n            this.notificationCallbacks = [];\\n            break;\\n\\n        // TODO remvoving connect properly missing\\n\\n        case \'connect\':\\n            this.connection.onopen = null;\\n            break;\\n\\n        case \'end\':\\n            this.connection.onclose = null;\\n            break;\\n\\n        case \'error\':\\n            this.connection.onerror = null;\\n            break;\\n\\n        default:\\n            // this.connection.removeAllListeners(type);\\n            break;\\n    }\\n};\\n\\n/**\\n Resets the providers, clears all callbacks\\n\\n @method reset\\n */\\nWebsocketProvider.prototype.reset = function () {\\n    this._timeout();\\n    this.notificationCallbacks = [];\\n\\n    // this.connection.removeAllListeners(\'error\');\\n    // this.connection.removeAllListeners(\'end\');\\n    // this.connection.removeAllListeners(\'timeout\');\\n\\n    this.addDefaultEvents();\\n};\\n\\nWebsocketProvider.prototype.disconnect = function () {\\n    if (this.connection) {\\n        this.connection.close();\\n    }\\n};\\n\\nmodule.exports = WebsocketProvider;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,null,1,null,1,1,1,1,5,null,1,1,null,1,1,27,null,null,null,null,0,null,null,0,0,0,null,null,null,null,null,null,null,1,27,0,null,null,27,27,27,null,27,27,null,null,null,null,27,27,27,27,5,null,null,null,27,null,null,null,27,null,null,null,27,0,null,27,null,27,null,null,null,27,null,0,null,0,null,0,null,null,0,0,0,0,null,null,0,null,null,null,0,0,0,0,null,null,null,0,0,0,null,null,null,null,null,27,null,0,null,null,null,null,null,null,null,null,null,null,1,54,null,54,27,null,null,54,27,null,null,27,null,null,null,null,null,null,null,null,null,null,null,null,null,1,0,null,null,null,0,null,null,null,null,null,null,0,null,null,0,0,null,0,null,0,0,null,null,null,0,null,null,0,0,0,0,null,null,0,null,null,null,0,0,null,0,0,null,null,0,null,null,null,null,null,null,null,null,null,1,0,0,null,0,0,null,0,null,null,0,0,0,0,0,null,null,null,null,null,null,null,null,null,null,1,81,0,0,0,null,null,null,null,null,1,0,null,0,0,0,null,0,null,null,null,null,null,0,0,0,0,null,0,null,0,0,null,null,0,0,null,null,null,null,null,null,null,null,null,1,null,50,0,null,50,null,50,50,null,null,0,0,null,null,0,0,null,null,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,0,null,0,null,0,0,0,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,0,null,0,0,null,null,null,null,0,0,null,null,0,0,null,null,0,0,null,null,null,0,null,null,null,null,null,null,null,null,1,27,27,null,null,null,null,null,27,null,null,1,0,0,null,null,null,1,null],"branches":[29,1,0,1,29,1,1,0,33,2,0,1,33,2,1,0,38,3,0,1,38,3,1,0,61,4,0,0,61,4,1,27,69,5,0,27,69,5,1,27,76,6,0,27,76,6,1,27,77,7,0,27,77,7,1,27,78,8,0,5,78,8,1,22,78,9,0,27,78,9,1,5,83,10,0,27,83,10,1,27,87,11,0,27,87,11,1,27,91,12,0,0,91,12,1,27,102,13,0,0,102,13,1,0,109,14,0,0,109,14,1,0,111,15,0,0,111,15,1,0,119,16,0,0,119,16,1,0,119,17,0,0,119,17,1,0,119,17,2,0,119,17,3,0,121,18,0,0,121,18,1,0,126,19,0,0,126,19,1,0,136,20,0,0,136,20,1,0,187,21,0,0,187,21,1,0,213,22,0,0,213,22,1,0,228,23,0,0,228,23,1,0,229,24,0,0,229,24,1,0,237,25,0,0,237,25,1,0,239,26,0,0,239,26,1,0,254,27,0,0,254,27,1,0,265,28,0,0,265,28,1,0,275,29,0,0,275,29,1,0,277,30,0,0,277,30,1,0,299,31,0,0,299,31,1,50,302,32,0,50,302,32,1,0,302,32,2,0,302,32,3,0,337,33,0,0,340,34,0,0,340,34,1,0,360,35,0,0,360,35,1,0,360,35,2,0,360,35,3,0,360,35,4,0,402,36,0,0,402,36,1,0]},{"name":"packages/conflux-web-providers-http/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/** @file httpprovider.js\\n * @authors:\\n *   Marek Kotewicz <marek@parity.io>\\n *   Marian Oancea\\n *   Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2015\\n */\\n\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\nvar XHR2 = require(\'xhr2-cookies\').XMLHttpRequest // jshint ignore: line\\nvar http = require(\'http\');\\nvar https = require(\'https\');\\n\\n\\n/**\\n * HttpProvider should be used to send rpc calls over http\\n */\\nvar HttpProvider = function HttpProvider(host, options) {\\n    options = options || {};\\n\\n    var keepAlive =\\n        (options.keepAlive === true || options.keepAlive !== false) ?\\n            true :\\n            false;\\n    this.host = host || \'http://localhost:8545\';\\n    if (this.host.substring(0,5) === \\"https\\") {\\n        this.httpsAgent = new https.Agent({ keepAlive: keepAlive });\\n    }else{\\n        this.httpAgent = new http.Agent({ keepAlive: keepAlive });\\n    }\\n    this.timeout = options.timeout || 0;\\n    this.headers = options.headers;\\n    this.connected = false;\\n};\\n\\nHttpProvider.prototype._prepareRequest = function(){\\n    var request = new XHR2();\\n    request.nodejsSet({\\n        httpsAgent:this.httpsAgent,\\n        httpAgent:this.httpAgent\\n    });\\n\\n    request.open(\'POST\', this.host, true);\\n    request.setRequestHeader(\'Content-Type\',\'application/json\');\\n    request.timeout = this.timeout && this.timeout !== 1 ? this.timeout : 0;\\n    request.withCredentials = true;\\n\\n    if(this.headers) {\\n        this.headers.forEach(function(header) {\\n            request.setRequestHeader(header.name, header.value);\\n        });\\n    }\\n\\n    return request;\\n};\\n\\n/**\\n * Should be used to make async request\\n *\\n * @method send\\n * @param {Object} payload\\n * @param {Function} callback triggered on end with (err, result)\\n */\\nHttpProvider.prototype.send = function (payload, callback) {\\n    var _this = this;\\n    var request = this._prepareRequest();\\n\\n    request.onreadystatechange = function() {\\n        if (request.readyState === 4 && request.timeout !== 1) {\\n            var result = request.responseText;\\n            var error = null;\\n\\n            try {\\n                result = JSON.parse(result);\\n            } catch(e) {\\n                error = errors.InvalidResponse(request.responseText);\\n            }\\n\\n            _this.connected = true;\\n            callback(error, result);\\n        }\\n    };\\n\\n    request.ontimeout = function() {\\n        _this.connected = false;\\n        callback(errors.ConnectionTimeout(this.timeout));\\n    };\\n\\n    try {\\n        request.send(JSON.stringify(payload));\\n    } catch(error) {\\n        this.connected = false;\\n        callback(errors.InvalidConnection(this.host));\\n    }\\n};\\n\\nHttpProvider.prototype.disconnect = function () {\\n    //NO OP\\n};\\n\\n\\nmodule.exports = HttpProvider;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,2,2,2,null,null,null,null,null,2,24,null,24,null,null,null,24,24,0,null,24,null,24,24,24,null,null,2,2,2,null,null,null,null,2,2,2,2,null,2,1,1,null,null,null,2,null,null,null,null,null,null,null,null,null,2,1,1,null,1,1,1,1,null,1,1,null,0,null,null,1,1,null,null,null,1,0,0,null,null,1,1,null,0,0,null,null,null,2,null,null,null,null,2,null],"branches":[35,1,0,24,35,1,1,23,38,2,0,24,38,2,1,0,38,3,0,24,38,3,1,24,41,4,0,24,41,4,1,1,42,5,0,0,42,5,1,24,47,6,0,24,47,6,1,24,61,7,0,0,61,7,1,2,61,8,0,2,61,8,1,0,64,9,0,1,64,9,1,1,85,10,0,1,85,10,1,0,85,11,0,1,85,11,1,1]},{"name":"packages/conflux-web-providers-ipc/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/** @file index.js\\n * @authors:\\n *   Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar _ = require(\'underscore\');\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\nvar oboe = require(\'oboe\');\\n\\n\\nvar IpcProvider = function IpcProvider(path, net) {\\n    var _this = this;\\n    this.responseCallbacks = {};\\n    this.notificationCallbacks = [];\\n    this.path = path;\\n    this.connected = false;\\n\\n    this.connection = net.connect({path: this.path});\\n\\n    this.addDefaultEvents();\\n\\n    // LISTEN FOR CONNECTION RESPONSES\\n    var callback = function(result) {\\n        /*jshint maxcomplexity: 6 */\\n\\n        var id = null;\\n\\n        // get the id which matches the returned id\\n        if(_.isArray(result)) {\\n            result.forEach(function(load){\\n                if(_this.responseCallbacks[load.id])\\n                    id = load.id;\\n            });\\n        } else {\\n            id = result.id;\\n        }\\n\\n        // notification\\n        if(!id && result.method.indexOf(\'_subscription\') !== -1) {\\n            _this.notificationCallbacks.forEach(function(callback){\\n                if(_.isFunction(callback))\\n                    callback(result);\\n            });\\n\\n            // fire the callback\\n        } else if(_this.responseCallbacks[id]) {\\n            _this.responseCallbacks[id](null, result);\\n            delete _this.responseCallbacks[id];\\n        }\\n    };\\n\\n    // use oboe.js for Sockets\\n    if (net.constructor.name === \'Socket\') {\\n        oboe(this.connection)\\n        .done(callback);\\n    } else {\\n        this.connection.on(\'data\', function(data){\\n            _this._parseResponse(data.toString()).forEach(callback);\\n        });\\n    }\\n};\\n\\n/**\\nWill add the error and end event to timeout existing calls\\n\\n@method addDefaultEvents\\n*/\\nIpcProvider.prototype.addDefaultEvents = function(){\\n    var _this = this;\\n\\n    this.connection.on(\'connect\', function(){\\n        _this.connected = true;\\n    });\\n\\n    this.connection.on(\'close\', function(){\\n        _this.connected = false;\\n    });\\n\\n    this.connection.on(\'error\', function(){\\n        _this._timeout();\\n    });\\n\\n    this.connection.on(\'end\', function(){\\n        _this._timeout();\\n    });\\n\\n    this.connection.on(\'timeout\', function(){\\n        _this._timeout();\\n    });\\n};\\n\\n\\n/**\\n Will parse the response and make an array out of it.\\n\\n NOTE, this exists for backwards compatibility reasons.\\n\\n @method _parseResponse\\n @param {String} data\\n */\\nIpcProvider.prototype._parseResponse = function(data) {\\n    var _this = this,\\n        returnValues = [];\\n\\n    // DE-CHUNKER\\n    var dechunkedData = data\\n        .replace(/\\\\}[\\\\n\\\\r]?\\\\{/g,\'}|--|{\') // }{\\n        .replace(/\\\\}\\\\][\\\\n\\\\r]?\\\\[\\\\{/g,\'}]|--|[{\') // }][{\\n        .replace(/\\\\}[\\\\n\\\\r]?\\\\[\\\\{/g,\'}|--|[{\') // }[{\\n        .replace(/\\\\}\\\\][\\\\n\\\\r]?\\\\{/g,\'}]|--|{\') // }]{\\n        .split(\'|--|\');\\n\\n    dechunkedData.forEach(function(data){\\n\\n        // prepend the last chunk\\n        if(_this.lastChunk)\\n            data = _this.lastChunk + data;\\n\\n        var result = null;\\n\\n        try {\\n            result = JSON.parse(data);\\n\\n        } catch(e) {\\n\\n            _this.lastChunk = data;\\n\\n            // start timeout to cancel all requests\\n            clearTimeout(_this.lastChunkTimeout);\\n            _this.lastChunkTimeout = setTimeout(function(){\\n                _this._timeout();\\n                throw errors.InvalidResponse(data);\\n            }, 1000 * 15);\\n\\n            return;\\n        }\\n\\n        // cancel timeout and set chunk to null\\n        clearTimeout(_this.lastChunkTimeout);\\n        _this.lastChunk = null;\\n\\n        if(result)\\n            returnValues.push(result);\\n    });\\n\\n    return returnValues;\\n};\\n\\n\\n/**\\nGet the adds a callback to the responseCallbacks object,\\nwhich will be called if a response matching the response Id will arrive.\\n\\n@method _addResponseCallback\\n*/\\nIpcProvider.prototype._addResponseCallback = function(payload, callback) {\\n    var id = payload.id || payload[0].id;\\n    var method = payload.method || payload[0].method;\\n\\n    this.responseCallbacks[id] = callback;\\n    this.responseCallbacks[id].method = method;\\n};\\n\\n/**\\nTimeout all requests when the end/error event is fired\\n\\n@method _timeout\\n*/\\nIpcProvider.prototype._timeout = function() {\\n    for(var key in this.responseCallbacks) {\\n        if(this.responseCallbacks.hasOwnProperty(key)){\\n            this.responseCallbacks[key](errors.InvalidConnection(\'on IPC\'));\\n            delete this.responseCallbacks[key];\\n        }\\n    }\\n};\\n\\n/**\\n Try to reconnect\\n\\n @method reconnect\\n */\\nIpcProvider.prototype.reconnect = function() {\\n    this.connection.connect({path: this.path});\\n};\\n\\n\\nIpcProvider.prototype.send = function (payload, callback) {\\n    // try reconnect, when connection is gone\\n    if(!this.connection.writable)\\n        this.connection.connect({path: this.path});\\n\\n\\n    this.connection.write(JSON.stringify(payload));\\n    this._addResponseCallback(payload, callback);\\n};\\n\\n/**\\nSubscribes to provider events.provider\\n\\n@method on\\n@param {String} type    \'notification\', \'connect\', \'error\', \'end\' or \'data\'\\n@param {Function} callback   the callback to call\\n*/\\nIpcProvider.prototype.on = function (type, callback) {\\n\\n    if(typeof callback !== \'function\')\\n        throw new Error(\'The second parameter callback must be a function.\');\\n\\n    switch(type){\\n        case \'data\':\\n            this.notificationCallbacks.push(callback);\\n            break;\\n\\n        // adds error, end, timeout, connect\\n        default:\\n            this.connection.on(type, callback);\\n            break;\\n    }\\n};\\n\\n/**\\n Subscribes to provider events.provider\\n\\n @method on\\n @param {String} type    \'connect\', \'error\', \'end\' or \'data\'\\n @param {Function} callback   the callback to call\\n */\\nIpcProvider.prototype.once = function (type, callback) {\\n\\n    if(typeof callback !== \'function\')\\n        throw new Error(\'The second parameter callback must be a function.\');\\n\\n    this.connection.once(type, callback);\\n};\\n\\n/**\\nRemoves event listener\\n\\n@method removeListener\\n@param {String} type    \'data\', \'connect\', \'error\', \'end\' or \'data\'\\n@param {Function} callback   the callback to call\\n*/\\nIpcProvider.prototype.removeListener = function (type, callback) {\\n    var _this = this;\\n\\n    switch(type){\\n        case \'data\':\\n            this.notificationCallbacks.forEach(function(cb, index){\\n                if(cb === callback)\\n                    _this.notificationCallbacks.splice(index, 1);\\n            });\\n            break;\\n\\n        default:\\n            this.connection.removeListener(type, callback);\\n            break;\\n    }\\n};\\n\\n/**\\nRemoves all event listeners\\n\\n@method removeAllListeners\\n@param {String} type    \'data\', \'connect\', \'error\', \'end\' or \'data\'\\n*/\\nIpcProvider.prototype.removeAllListeners = function (type) {\\n    switch(type){\\n        case \'data\':\\n            this.notificationCallbacks = [];\\n            break;\\n\\n        default:\\n            this.connection.removeAllListeners(type);\\n            break;\\n    }\\n};\\n\\n/**\\nResets the providers, clears all callbacks\\n\\n@method reset\\n*/\\nIpcProvider.prototype.reset = function () {\\n    this._timeout();\\n    this.notificationCallbacks = [];\\n\\n    this.connection.removeAllListeners(\'error\');\\n    this.connection.removeAllListeners(\'end\');\\n    this.connection.removeAllListeners(\'timeout\');\\n\\n    this.addDefaultEvents();\\n};\\n\\nmodule.exports = IpcProvider;\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,2,2,null,null,2,22,22,22,22,22,null,22,null,22,null,null,22,null,null,0,null,null,0,0,0,0,null,null,0,null,null,null,0,0,0,0,null,null,null,0,0,0,null,null,null,null,22,0,null,null,22,0,null,null,null,null,null,null,null,null,null,2,22,null,22,0,null,null,22,22,null,null,22,22,null,null,22,0,null,null,22,0,null,null,null,null,null,null,null,null,null,null,null,null,2,0,null,null,null,0,null,null,null,null,null,null,0,null,null,0,0,null,0,null,0,0,null,null,null,0,null,null,0,0,0,0,null,null,0,null,null,null,0,0,null,0,0,null,null,0,null,null,null,null,null,null,null,null,null,2,0,0,null,0,0,null,null,null,null,null,null,null,2,22,0,0,0,null,null,null,null,null,null,null,null,null,2,0,null,null,null,2,null,0,0,null,null,0,0,null,null,null,null,null,null,null,null,null,2,null,40,0,null,40,null,40,40,null,null,null,0,0,null,null,null,null,null,null,null,null,null,null,2,null,0,0,null,0,null,null,null,null,null,null,null,null,null,2,0,null,0,null,0,0,0,null,0,null,null,0,0,null,null,null,null,null,null,null,null,null,2,0,null,0,0,null,null,0,0,null,null,null,null,null,null,null,null,2,0,0,null,0,0,0,null,0,null,null,2,null,null],"branches":[48,1,0,0,48,1,1,0,50,2,0,0,50,2,1,0,58,3,0,0,58,3,1,0,58,4,0,0,58,4,1,0,60,5,0,0,60,5,1,0,65,6,0,0,65,6,1,0,72,7,0,0,72,7,1,22,135,8,0,0,135,8,1,0,161,9,0,0,161,9,1,0,176,10,0,0,176,10,1,0,177,11,0,0,177,11,1,0,190,12,0,0,190,12,1,0,209,13,0,0,209,13,1,0,226,14,0,0,226,14,1,40,229,15,0,40,229,15,1,0,250,16,0,0,250,16,1,0,266,17,0,0,266,17,1,0,269,18,0,0,269,18,1,0,287,19,0,0,287,19,1,0]},{"name":"packages/conflux-web-core/src/extend.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file extend.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\n\\nvar formatters = require(\'conflux-web-core-helpers\').formatters;\\nvar Method = require(\'conflux-web-core-method\');\\nvar utils = require(\'conflux-web-utils\');\\n\\n\\nvar extend = function (pckg) {\\n    /* jshint maxcomplexity:5 */\\n    var ex = function (extension) {\\n\\n        var extendedObject;\\n        if (extension.property) {\\n            if (!pckg[extension.property]) {\\n                pckg[extension.property] = {};\\n            }\\n            extendedObject = pckg[extension.property];\\n        } else {\\n            extendedObject = pckg;\\n        }\\n\\n        if (extension.methods) {\\n            extension.methods.forEach(function (method) {\\n                if(!(method instanceof Method)) {\\n                    method = new Method(method);\\n                }\\n\\n                method.attachToObject(extendedObject);\\n                method.setRequestManager(pckg._requestManager);\\n            });\\n        }\\n\\n        return pckg;\\n    };\\n\\n    ex.formatters = formatters;\\n    ex.utils = utils;\\n    ex.Method = Method;\\n\\n    return ex;\\n};\\n\\n\\n\\nmodule.exports = extend;\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,null,null,1,null,3277,null,4,4,1,1,null,1,null,3,null,null,4,4,6,6,null,null,4,4,null,null,null,2,null,null,3277,3277,3277,null,3277,null,null,null,null,1,null,null],"branches":[36,1,0,1,36,1,1,3,37,2,0,1,37,2,1,0,45,3,0,4,45,3,1,0,47,4,0,6,47,4,1,0]},{"name":"packages/conflux-web-core-method/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @author Marek Kotewicz <marek@parity.io>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar _ = require(\'underscore\');\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\nvar formatters = require(\'conflux-web-core-helpers\').formatters;\\nvar utils = require(\'conflux-web-utils\');\\nvar promiEvent = require(\'conflux-web-core-promievent\');\\nvar Subscriptions = require(\'conflux-web-core-subscriptions\').subscriptions;\\n\\nvar TIMEOUTBLOCK = 50;\\nvar POLLINGTIMEOUT = 15 * TIMEOUTBLOCK; // ~average block time (seconds) * TIMEOUTBLOCK\\nvar CONFIRMATIONBLOCKS = 24;\\n\\nvar Method = function Method(options) {\\n\\n    if(!options.call || !options.name) {\\n        throw new Error(\'When creating a method you need to provide at least the \\"name\\" and \\"call\\" property.\');\\n    }\\n\\n    this.name = options.name;\\n    this.call = options.call;\\n    this.params = options.params || 0;\\n    this.inputFormatter = options.inputFormatter;\\n    this.outputFormatter = options.outputFormatter;\\n    this.transformPayload = options.transformPayload;\\n    this.extraFormatters = options.extraFormatters;\\n\\n    this.requestManager = options.requestManager;\\n\\n    // reference to eth.accounts\\n    this.accounts = options.accounts;\\n\\n    this.defaultBlock = options.defaultBlock || \'latest_state\';\\n    this.defaultAccount = options.defaultAccount || null;\\n};\\n\\nMethod.prototype.setRequestManager = function (requestManager, accounts) {\\n    this.requestManager = requestManager;\\n\\n    // reference to eth.accounts\\n    if (accounts) {\\n        this.accounts = accounts;\\n    }\\n\\n};\\n\\nMethod.prototype.createFunction = function (requestManager, accounts) {\\n    var func = this.buildCall();\\n    func.call = this.call;\\n\\n    this.setRequestManager(requestManager || this.requestManager, accounts || this.accounts);\\n\\n    return func;\\n};\\n\\nMethod.prototype.attachToObject = function (obj) {\\n    var func = this.buildCall();\\n    func.call = this.call;\\n    var name = this.name.split(\'.\');\\n    if (name.length > 1) {\\n        obj[name[0]] = obj[name[0]] || {};\\n        obj[name[0]][name[1]] = func;\\n    } else {\\n        obj[name[0]] = func;\\n    }\\n};\\n\\n/**\\n * Should be used to determine name of the jsonrpc method based on arguments\\n *\\n * @method getCall\\n * @param {Array} arguments\\n * @return {String} name of jsonrpc method\\n */\\nMethod.prototype.getCall = function (args) {\\n    return _.isFunction(this.call) ? this.call(args) : this.call;\\n};\\n\\n/**\\n * Should be used to extract callback from array of arguments. Modifies input param\\n *\\n * @method extractCallback\\n * @param {Array} arguments\\n * @return {Function|Null} callback, if exists\\n */\\nMethod.prototype.extractCallback = function (args) {\\n    if (_.isFunction(args[args.length - 1])) {\\n        return args.pop(); // modify the args array!\\n    }\\n};\\n\\n/**\\n * Should be called to check if the number of arguments is correct\\n *\\n * @method validateArgs\\n * @param {Array} arguments\\n * @throws {Error} if it is not\\n */\\nMethod.prototype.validateArgs = function (args) {\\n    if (args.length !== this.params) {\\n        throw errors.InvalidNumberOfParams(args.length, this.params, this.name);\\n    }\\n};\\n\\n/**\\n * Should be called to format input args of method\\n *\\n * @method formatInput\\n * @param {Array}\\n * @return {Array}\\n */\\nMethod.prototype.formatInput = function (args) {\\n    var _this = this;\\n\\n    if (!this.inputFormatter) {\\n        return args;\\n    }\\n\\n    return this.inputFormatter.map(function (formatter, index) {\\n        // bind this for defaultBlock, and defaultAccount\\n        return formatter ? formatter.call(_this, args[index]) : args[index];\\n    });\\n};\\n\\n/**\\n * Should be called to format output(result) of method\\n *\\n * @method formatOutput\\n * @param {Object}\\n * @return {Object}\\n */\\nMethod.prototype.formatOutput = function (result) {\\n    var _this = this;\\n\\n    if(_.isArray(result)) {\\n        return result.map(function(res){\\n            return _this.outputFormatter && res ? _this.outputFormatter(res) : res;\\n        });\\n    } else {\\n        return this.outputFormatter && result ? this.outputFormatter(result) : result;\\n    }\\n};\\n\\n/**\\n * Should create payload from given input args\\n *\\n * @method toPayload\\n * @param {Array} args\\n * @return {Object}\\n */\\nMethod.prototype.toPayload = function (args) {\\n    var call = this.getCall(args);\\n    var callback = this.extractCallback(args);\\n    var params = this.formatInput(args);\\n    this.validateArgs(params);\\n\\n    var payload = {\\n        method: call,\\n        params: params,\\n        callback: callback\\n    };\\n\\n    if (this.transformPayload) {\\n        payload = this.transformPayload(payload);\\n    }\\n\\n    return payload;\\n};\\n\\n\\nMethod.prototype._confirmTransaction = function (defer, result, payload) {\\n    var method = this,\\n        promiseResolved = false,\\n        canUnsubscribe = true,\\n        timeoutCount = 0,\\n        confirmationCount = 0,\\n        intervalId = null,\\n        receiptJSON = \'\',\\n        gasProvided = (_.isObject(payload.params[0]) && payload.params[0].gas) ? payload.params[0].gas : null,\\n        isContractDeployment = _.isObject(payload.params[0]) &&\\n            payload.params[0].data &&\\n            payload.params[0].from &&\\n            !payload.params[0].to;\\n\\n    // add custom send Methods\\n    var _ethereumCalls = [\\n        new Method({\\n            name: \'getTransactionReceipt\',\\n            //call: \'eth_getTransactionReceipt\',\\n            call: \'cfx_getTransactionReceipt\',\\n            params: 1,\\n            inputFormatter: [null],\\n            outputFormatter: formatters.outputTransactionReceiptFormatter\\n        }),\\n        new Method({\\n            name: \'getCode\',\\n            //call: \'eth_getCode\',\\n            call: \'cfx_getCode\',\\n            params: 2,\\n            inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter]\\n        }),\\n        new Subscriptions({\\n            name: \'subscribe\',\\n            //type: \'eth\',\\n            type: \'cfx\',\\n            subscriptions: {\\n                \'newBlockHeaders\': {\\n                    subscriptionName: \'newHeads\', // replace subscription with this name\\n                    params: 0,\\n                    outputFormatter: formatters.outputBlockFormatter\\n                }\\n            }\\n        })\\n    ];\\n    // attach methods to this._ethereumCall\\n    var _ethereumCall = {};\\n    _.each(_ethereumCalls, function (mthd) {\\n        mthd.attachToObject(_ethereumCall);\\n        mthd.requestManager = method.requestManager; // assign rather than call setRequestManager()\\n    });\\n\\n\\n    // fire \\"receipt\\" and confirmation events and resolve after\\n    var checkConfirmation = function (existingReceipt, isPolling, err, blockHeader, sub) {\\n        if (!err) {\\n            // create fake unsubscribe\\n            if (!sub) {\\n                sub = {\\n                    unsubscribe: function () {\\n                        clearInterval(intervalId);\\n                    }\\n                };\\n            }\\n            // if we have a valid receipt we don\'t need to send a request\\n            return (existingReceipt ? promiEvent.resolve(existingReceipt) : _ethereumCall.getTransactionReceipt(result))\\n            // catch error from requesting receipt\\n            .catch(function (err) {\\n                sub.unsubscribe();\\n                promiseResolved = true;\\n                utils._fireError({message: \'Failed to check for transaction receipt:\', data: err}, defer.eventEmitter, defer.reject);\\n            })\\n            // if CONFIRMATION listener exists check for confirmations, by setting canUnsubscribe = false\\n            .then(function(receipt) {\\n                if (!receipt || !receipt.blockHash) {\\n                    throw new Error(\'Receipt missing or blockHash null\');\\n                }\\n\\n                // apply extra formatters\\n                if (method.extraFormatters && method.extraFormatters.receiptFormatter) {\\n                    receipt = method.extraFormatters.receiptFormatter(receipt);\\n                }\\n\\n                // check if confirmation listener exists\\n                if (defer.eventEmitter.listeners(\'confirmation\').length > 0) {\\n\\n                    // If there was an immediately retrieved receipt, it\'s already\\n                    // been confirmed by the direct call to checkConfirmation needed\\n                    // for parity instant-seal\\n                    if (existingReceipt === undefined || confirmationCount !== 0){\\n                        defer.eventEmitter.emit(\'confirmation\', confirmationCount, receipt);\\n                    }\\n\\n                    canUnsubscribe = false;\\n                    confirmationCount++;\\n\\n                    if (confirmationCount === CONFIRMATIONBLOCKS + 1) { // add 1 so we account for conf 0\\n                        sub.unsubscribe();\\n                        defer.eventEmitter.removeAllListeners();\\n                    }\\n                }\\n\\n                return receipt;\\n            })\\n            // CHECK for CONTRACT DEPLOYMENT\\n            .then(function(receipt) {\\n\\n                if (isContractDeployment && !promiseResolved) {\\n\\n                    if (!receipt.contractAddress) {\\n\\n                        if (canUnsubscribe) {\\n                            sub.unsubscribe();\\n                            promiseResolved = true;\\n                        }\\n\\n                        utils._fireError(new Error(\'The transaction receipt didn\\\\\'t contain a contract address.\'), defer.eventEmitter, defer.reject);\\n                        return;\\n                    }\\n\\n                    _ethereumCall.getCode(receipt.contractAddress, function (e, code) {\\n\\n                        if (!code) {\\n                            return;\\n                        }\\n\\n\\n                        if (code.length > 2) {\\n                            defer.eventEmitter.emit(\'receipt\', receipt);\\n\\n                            // if contract, return instance instead of receipt\\n                            if (method.extraFormatters && method.extraFormatters.contractDeployFormatter) {\\n                                defer.resolve(method.extraFormatters.contractDeployFormatter(receipt));\\n                            } else {\\n                                defer.resolve(receipt);\\n                            }\\n\\n                            // need to remove listeners, as they aren\'t removed automatically when succesfull\\n                            if (canUnsubscribe) {\\n                                defer.eventEmitter.removeAllListeners();\\n                            }\\n\\n                        } else {\\n                            utils._fireError(new Error(\'The contract code couldn\\\\\'t be stored, please check your gas limit.\'), defer.eventEmitter, defer.reject);\\n                        }\\n\\n                        if (canUnsubscribe) {\\n                            sub.unsubscribe();\\n                        }\\n                        promiseResolved = true;\\n                    });\\n                }\\n\\n                return receipt;\\n            })\\n            // CHECK for normal tx check for receipt only\\n            .then(function(receipt) {\\n\\n                if (!isContractDeployment && !promiseResolved) {\\n\\n                    if(!receipt.outOfGas &&\\n                        (!gasProvided || gasProvided !== receipt.gasUsed) &&\\n                        (receipt.status === true || receipt.status === \'0x1\' || typeof receipt.status === \'undefined\')) {\\n                        defer.eventEmitter.emit(\'receipt\', receipt);\\n                        defer.resolve(receipt);\\n\\n                        // need to remove listeners, as they aren\'t removed automatically when succesfull\\n                        if (canUnsubscribe) {\\n                            defer.eventEmitter.removeAllListeners();\\n                        }\\n\\n                    } else {\\n                        receiptJSON = JSON.stringify(receipt, null, 2);\\n                        if (receipt.status === false || receipt.status === \'0x0\') {\\n                            utils._fireError(new Error(\\"Transaction has been reverted by the EVM:\\\\n\\" + receiptJSON),\\n                                defer.eventEmitter, defer.reject);\\n                        } else {\\n                            utils._fireError(\\n                                new Error(\\"Transaction ran out of gas. Please provide more gas:\\\\n\\" + receiptJSON),\\n                                defer.eventEmitter, defer.reject);\\n                        }\\n                    }\\n\\n                    if (canUnsubscribe) {\\n                        sub.unsubscribe();\\n                    }\\n                    promiseResolved = true;\\n                }\\n\\n            })\\n            // time out the transaction if not mined after 50 blocks\\n            .catch(function () {\\n                timeoutCount++;\\n\\n                // check to see if we are http polling\\n                if(!!isPolling) {\\n                    // polling timeout is different than TIMEOUTBLOCK blocks since we are triggering every second\\n                    if (timeoutCount - 1 >= POLLINGTIMEOUT) {\\n                        sub.unsubscribe();\\n                        promiseResolved = true;\\n                        utils._fireError(new Error(\'Transaction was not mined within\' + POLLINGTIMEOUT + \' seconds, please make sure your transaction was properly sent. Be aware that it might still be mined!\'), defer.eventEmitter, defer.reject);\\n                    }\\n                } else {\\n                    if (timeoutCount - 1 >= TIMEOUTBLOCK) {\\n                        sub.unsubscribe();\\n                        promiseResolved = true;\\n                        utils._fireError(new Error(\'Transaction was not mined within 50 blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!\'), defer.eventEmitter, defer.reject);\\n                    }\\n                }\\n            });\\n\\n\\n        } else {\\n            sub.unsubscribe();\\n            promiseResolved = true;\\n            utils._fireError({message: \'Failed to subscribe to new newBlockHeaders to confirm the transaction receipts.\', data: err}, defer.eventEmitter, defer.reject);\\n        }\\n    };\\n\\n    // start watching for confirmation depending on the support features of the provider\\n    var startWatching = function(existingReceipt) {\\n        // if provider allows PUB/SUB\\n        if (_.isFunction(this.requestManager.provider.on)) {\\n            _ethereumCall.subscribe(\'newBlockHeaders\', checkConfirmation.bind(null, existingReceipt, false));\\n        } else {\\n            intervalId = setInterval(checkConfirmation.bind(null, existingReceipt, true), 1000);\\n        }\\n    }.bind(this);\\n\\n\\n    // first check if we already have a confirmed transaction\\n    _ethereumCall.getTransactionReceipt(result)\\n    .then(function(receipt) {\\n        if (receipt && receipt.blockHash) {\\n            if (defer.eventEmitter.listeners(\'confirmation\').length > 0) {\\n                // We must keep on watching for new Blocks, if a confirmation listener is present\\n                startWatching(receipt);\\n            }\\n            checkConfirmation(receipt, false);\\n\\n        } else if (!promiseResolved) {\\n            startWatching();\\n        }\\n    })\\n    .catch(function(){\\n        if (!promiseResolved) startWatching();\\n    });\\n\\n};\\n\\n\\nvar getWallet = function(from, accounts) {\\n    var wallet = null;\\n\\n    // is index given\\n    if (_.isNumber(from)) {\\n        wallet = accounts.wallet[from];\\n\\n        // is account given\\n    } else if (_.isObject(from) && from.address && from.privateKey) {\\n        wallet = from;\\n\\n        // search in wallet for address\\n    } else {\\n        wallet = accounts.wallet[from.toLowerCase()];\\n    }\\n\\n    return wallet;\\n};\\n\\nMethod.prototype.buildCall = function() {\\n    var method = this,\\n        //isSendTx = (method.call === \'eth_sendTransaction\' || method.call === \'eth_sendRawTransaction\'); // || method.call === \'personal_sendTransaction\'\\n        isSendTx = (method.call === \'cfx_sendTransaction\' || method.call === \'cfx_sendRawTransaction\'); // || method.call === \'personal_sendTransaction\'\\n\\n    // actual send function\\n    var send = function () {\\n        var defer = promiEvent(!isSendTx),\\n            payload = method.toPayload(Array.prototype.slice.call(arguments));\\n\\n\\n        // CALLBACK function\\n        var sendTxCallback = function (err, result) {\\n            try {\\n                result = method.formatOutput(result);\\n            } catch(e) {\\n                err = e;\\n            }\\n\\n            if (result instanceof Error) {\\n                err = result;\\n            }\\n\\n            if (!err) {\\n                if (payload.callback) {\\n                    payload.callback(null, result);\\n                }\\n            } else {\\n                if(err.error) {\\n                    err = err.error;\\n                }\\n\\n                return utils._fireError(err, defer.eventEmitter, defer.reject, payload.callback);\\n            }\\n\\n            // return PROMISE\\n            if (!isSendTx) {\\n\\n                if (!err) {\\n                    defer.resolve(result);\\n\\n                }\\n\\n                // return PROMIEVENT\\n            } else {\\n                defer.eventEmitter.emit(\'transactionHash\', result);\\n\\n                method._confirmTransaction(defer, result, payload);\\n            }\\n\\n        };\\n\\n        // SENDS the SIGNED SIGNATURE\\n        var sendSignedTx = function(sign){\\n\\n            var signedPayload = _.extend({}, payload, {\\n                //method: \'eth_sendRawTransaction\',\\n                method: \'cfx_sendRawTransaction\',\\n                params: [sign.rawTransaction]\\n            });\\n\\n            method.requestManager.send(signedPayload, sendTxCallback);\\n        };\\n\\n\\n        var sendRequest = function(payload, method) {\\n\\n            if (method && method.accounts && method.accounts.wallet && method.accounts.wallet.length) {\\n                var wallet;\\n\\n                // ETH_SENDTRANSACTION\\n                //if (payload.method === \'eth_sendTransaction\') {\\n                if (payload.method === \'cfx_sendTransaction\') {\\n                    var tx = payload.params[0];\\n                    wallet = getWallet((_.isObject(tx)) ? tx.from : null, method.accounts);\\n\\n\\n                    // If wallet was found, sign tx, and send using sendRawTransaction\\n                    if (wallet && wallet.privateKey) {\\n                        return method.accounts.signTransaction(_.omit(tx, \'from\'), wallet.privateKey).then(sendSignedTx);\\n                    }\\n\\n                    // ETH_SIGN\\n                //} else if (payload.method === \'eth_sign\') {\\n                } else if (payload.method === \'cfx_sign\') {\\n                    var data = payload.params[1];\\n                    wallet = getWallet(payload.params[0], method.accounts);\\n\\n                    // If wallet was found, sign tx, and send using sendRawTransaction\\n                    if (wallet && wallet.privateKey) {\\n                        var sign = method.accounts.sign(data, wallet.privateKey);\\n\\n                        if (payload.callback) {\\n                            payload.callback(null, sign.signature);\\n                        }\\n\\n                        defer.resolve(sign.signature);\\n                        return;\\n                    }\\n\\n\\n                }\\n            }\\n\\n            return method.requestManager.send(payload, sendTxCallback);\\n        };\\n\\n        // Send the actual transaction\\n        if(isSendTx && _.isObject(payload.params[0]) && typeof payload.params[0].gasPrice === \'undefined\') {\\n\\n            var getGasPrice = (new Method({\\n                name: \'getGasPrice\',\\n                //call: \'eth_gasPrice\',\\n                call: \'cfx_gasPrice\',\\n                params: 0\\n            })).createFunction(method.requestManager);\\n\\n            getGasPrice(function (err, gasPrice) {\\n\\n                if (gasPrice) {\\n                    payload.params[0].gasPrice = gasPrice;\\n                }\\n                sendRequest(payload, method);\\n            });\\n\\n        } else {\\n            sendRequest(payload, method);\\n        }\\n\\n\\n        return defer.eventEmitter;\\n    };\\n\\n    // necessary to attach things to the method\\n    send.method = method;\\n    // necessary for batch requests\\n    send.request = this.request.bind(this);\\n    return send;\\n};\\n\\n/**\\n * Should be called to create the pure JSONRPC request which can be used in a batch request\\n *\\n * @method request\\n * @return {Object} jsonrpc request\\n */\\nMethod.prototype.request = function () {\\n    var payload = this.toPayload(Array.prototype.slice.call(arguments));\\n    payload.format = this.formatOutput.bind(this);\\n    return payload;\\n};\\n\\nmodule.exports = Method;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,1,1,null,1,1,1,null,1,null,15665,2,null,null,15663,15663,15663,15663,15663,15663,15663,null,15663,null,null,15663,null,15663,15663,null,null,1,15512,null,null,15512,9282,null,null,null,null,1,88,88,null,88,null,88,null,null,1,15544,15544,15544,15544,0,0,null,15544,null,null,null,null,null,null,null,null,null,null,1,614,null,null,null,null,null,null,null,null,null,1,613,119,null,null,null,null,null,null,null,null,null,null,1,610,2,null,null,null,null,null,null,null,null,null,null,1,612,null,612,95,null,null,517,null,686,null,null,null,null,null,null,null,null,null,null,1,605,null,605,10,20,null,null,595,null,null,null,null,null,null,null,null,null,null,1,610,610,610,606,null,606,null,null,null,null,null,606,8,null,null,606,null,null,null,1,69,null,null,null,null,null,null,null,null,null,null,null,null,null,69,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,69,69,207,207,null,null,null,null,69,197,null,197,14,null,12,null,null,null,null,197,null,null,0,0,0,null,null,null,197,130,null,null,null,67,19,null,null,null,67,null,null,null,null,31,29,null,null,29,29,null,29,1,1,null,null,null,65,null,null,null,null,65,null,9,null,2,2,2,null,null,2,2,null,null,7,null,7,0,null,null,null,7,5,null,null,5,3,null,2,null,null,null,5,5,null,null,null,2,null,null,7,7,null,7,null,null,null,63,null,null,null,null,65,null,30,null,null,30,30,null,null,30,27,null,null,null,0,0,0,null,null,0,null,null,null,null,null,30,27,null,30,null,null,null,null,null,132,null,null,132,null,0,0,0,0,null,null,132,2,2,2,null,null,null,null,null,null,0,0,0,null,null,null,null,69,null,67,57,null,10,null,null,null,null,null,69,null,69,4,null,2,null,4,null,65,65,null,null,null,0,null,null,null,null,null,1,11,null,null,11,2,null,null,9,2,null,null,null,7,null,null,11,null,null,1,15650,null,null,null,null,15650,603,null,null,null,null,599,595,595,null,3,null,null,595,1,null,null,595,588,103,null,null,7,3,null,null,7,null,null,null,588,null,519,519,null,null,null,null,null,69,null,69,null,null,null,null,null,599,null,7,null,null,null,null,null,7,null,null,null,599,null,599,11,null,null,null,11,7,7,null,null,null,7,7,null,null,null,null,4,4,4,null,null,4,4,null,4,2,null,null,4,4,null,null,null,null,null,null,588,null,null,null,599,null,7,null,null,null,null,null,null,7,null,7,7,null,7,null,null,null,592,null,null,null,599,null,null,null,15650,null,15650,15650,null,null,null,null,null,null,null,null,1,7,7,7,null,null,1,null],"branches":[39,1,0,2,39,1,1,15663,39,2,0,15665,39,2,1,15664,45,3,0,15663,45,3,1,7907,56,4,0,15663,56,4,1,15582,57,5,0,15663,57,5,1,15663,64,6,0,9282,64,6,1,6230,74,7,0,88,74,7,1,81,74,8,0,88,74,8,1,88,83,9,0,0,83,9,1,15544,84,10,0,0,84,10,1,0,99,11,0,27,99,11,1,587,110,12,0,119,110,12,1,494,123,13,0,2,123,13,1,608,138,14,0,95,138,14,1,517,144,15,0,420,144,15,1,266,158,16,0,10,158,16,1,595,160,17,0,17,160,17,1,3,160,18,0,20,160,18,1,17,163,19,0,217,163,19,1,378,163,20,0,595,163,20,1,418,186,21,0,8,186,21,1,598,202,22,0,19,202,22,1,50,202,23,0,69,202,23,1,69,203,24,0,69,203,24,1,69,203,24,2,48,203,24,3,48,248,25,0,197,248,25,1,0,250,26,0,14,250,26,1,183,258,27,0,8,258,27,1,189,267,28,0,130,267,28,1,67,267,29,0,197,267,29,1,67,272,30,0,19,272,30,1,48,272,31,0,67,272,31,1,19,277,32,0,31,277,32,1,36,282,33,0,29,282,33,1,2,282,34,0,31,282,34,1,6,289,35,0,1,289,35,1,28,300,36,0,9,300,36,1,56,300,37,0,65,300,37,1,9,302,38,0,2,302,38,1,7,304,39,0,2,304,39,1,0,315,40,0,0,315,40,1,7,320,41,0,5,320,41,1,2,324,42,0,3,324,42,1,2,324,43,0,5,324,43,1,3,331,44,0,5,331,44,1,0,339,45,0,7,339,45,1,0,351,46,0,30,351,46,1,35,351,47,0,65,351,47,1,56,353,48,0,30,353,48,1,0,353,49,0,30,353,49,1,30,353,49,2,3,353,49,3,30,353,49,4,30,353,49,5,30,360,50,0,27,360,50,1,3,366,51,0,0,366,51,1,0,366,52,0,0,366,52,1,0,376,53,0,27,376,53,1,3,388,54,0,0,388,54,1,132,390,55,0,0,390,55,1,0,396,56,0,2,396,56,1,130,415,57,0,57,415,57,1,10,426,58,0,4,426,58,1,65,426,59,0,69,426,59,1,4,427,60,0,2,427,60,1,2,433,61,0,65,433,61,1,0,438,62,0,0,438,62,1,0,448,63,0,2,448,63,1,9,452,64,0,2,452,64,1,7,452,65,0,9,452,65,1,2,452,65,2,2,466,66,0,15650,466,66,1,15261,482,67,0,1,482,67,1,594,486,68,0,588,486,68,1,7,487,69,0,103,487,69,1,485,491,70,0,3,491,70,1,4,499,71,0,519,499,71,1,69,501,72,0,519,501,72,1,0,530,73,0,11,530,73,1,588,530,74,0,599,530,74,1,599,530,74,2,178,530,74,3,168,535,75,0,7,535,75,1,4,537,76,0,7,537,76,1,0,541,77,0,7,541,77,1,0,541,78,0,7,541,78,1,7,547,79,0,4,547,79,1,0,552,80,0,4,552,80,1,0,552,81,0,4,552,81,1,4,555,82,0,2,555,82,1,2,571,83,0,7,571,83,1,592,571,84,0,599,571,84,1,69,571,84,2,69,582,85,0,7,582,85,1,0]},{"name":"packages/conflux-web-core-promievent/src/index.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2016\\n */\\n\\n\\"use strict\\";\\n\\nvar EventEmitter = require(\'eventemitter3\');\\nvar Promise = require(\\"any-promise\\");\\n\\n/**\\n * This function generates a defer promise and adds eventEmitter functionality to it\\n *\\n * @method eventifiedPromise\\n */\\nvar PromiEvent = function PromiEvent(justPromise) {\\n    var resolve, reject,\\n        eventEmitter = new Promise(function() {\\n            resolve = arguments[0];\\n            reject = arguments[1];\\n        });\\n\\n    if(justPromise) {\\n        return {\\n            resolve: resolve,\\n            reject: reject,\\n            eventEmitter: eventEmitter\\n        };\\n    }\\n\\n    // get eventEmitter\\n    var emitter = new EventEmitter();\\n\\n    // add eventEmitter to the promise\\n    eventEmitter._events = emitter._events;\\n    eventEmitter.emit = emitter.emit;\\n    eventEmitter.on = emitter.on;\\n    eventEmitter.once = emitter.once;\\n    eventEmitter.off = emitter.off;\\n    eventEmitter.listeners = emitter.listeners;\\n    eventEmitter.addListener = emitter.addListener;\\n    eventEmitter.removeListener = emitter.removeListener;\\n    eventEmitter.removeAllListeners = emitter.removeAllListeners;\\n\\n    return {\\n        resolve: resolve,\\n        reject: reject,\\n        eventEmitter: eventEmitter\\n    };\\n};\\n\\nPromiEvent.resolve = function(value) {\\n    var promise = PromiEvent(true);\\n    promise.resolve(value);\\n    return promise.eventEmitter;\\n};\\n\\nmodule.exports = PromiEvent;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,null,null,null,null,null,null,1,700,null,700,700,null,null,700,590,null,null,null,null,null,null,null,110,null,null,110,110,110,110,110,110,110,110,110,null,110,null,null,null,null,null,null,1,8,8,8,null,null,1,null],"branches":[40,1,0,590,40,1,1,110]},{"name":"packages/conflux-web-core-subscriptions/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar Subscription = require(\'./subscription.js\');\\n\\n\\nvar Subscriptions = function Subscriptions(options) {\\n    this.name = options.name;\\n    this.type = options.type;\\n    this.subscriptions = options.subscriptions || {};\\n    this.requestManager = null;\\n};\\n\\n\\nSubscriptions.prototype.setRequestManager = function (rm) {\\n    this.requestManager = rm;\\n};\\n\\n\\nSubscriptions.prototype.attachToObject = function (obj) {\\n    var func = this.buildCall();\\n    var name = this.name.split(\'.\');\\n    if (name.length > 1) {\\n        obj[name[0]] = obj[name[0]] || {};\\n        obj[name[0]][name[1]] = func;\\n    } else {\\n        obj[name[0]] = func;\\n    }\\n};\\n\\n\\nSubscriptions.prototype.buildCall = function() {\\n    var _this = this;\\n\\n    return function(){\\n        if(!_this.subscriptions[arguments[0]]) {\\n            console.warn(\'Subscription \'+ JSON.stringify(arguments[0]) +\' doesn\\\\\'t exist. Subscribing anyway.\');\\n        }\\n\\n        var subscription = new Subscription({\\n            subscription: _this.subscriptions[arguments[0]],\\n            requestManager: _this.requestManager,\\n            type: _this.type\\n        });\\n\\n        return subscription.subscribe.apply(subscription, arguments);\\n    };\\n};\\n\\n\\nmodule.exports = {\\n    subscriptions: Subscriptions,\\n    subscription: Subscription\\n};\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,1,411,411,411,411,null,null,null,1,342,null,null,null,1,411,411,411,0,0,null,411,null,null,null,null,1,411,null,411,57,0,null,null,57,null,null,null,null,null,57,null,null,null,null,1,null,null,null,null],"branches":[31,1,0,411,31,1,1,0,44,2,0,0,44,2,1,411,45,3,0,0,45,3,1,0,57,4,0,0,57,4,1,57]},{"name":"packages/conflux-web-core-subscriptions/src/subscription.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file subscription.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar _ = require(\'underscore\');\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\nvar EventEmitter = require(\'eventemitter3\');\\n\\nfunction Subscription(options) {\\n    EventEmitter.call(this);\\n\\n    this.id = null;\\n    this.callback = _.identity;\\n    this.arguments = null;\\n    this._reconnectIntervalId = null;\\n\\n    this.options = {\\n        subscription: options.subscription,\\n        type: options.type,\\n        requestManager: options.requestManager\\n    };\\n}\\n\\n// INHERIT\\nSubscription.prototype = Object.create(EventEmitter.prototype);\\nSubscription.prototype.constructor = Subscription;\\n\\n\\n/**\\n * Should be used to extract callback from array of arguments. Modifies input param\\n *\\n * @method extractCallback\\n * @param {Array} arguments\\n * @return {Function|Null} callback, if exists\\n */\\n\\nSubscription.prototype._extractCallback = function (args) {\\n    if (_.isFunction(args[args.length - 1])) {\\n        return args.pop(); // modify the args array!\\n    }\\n};\\n\\n/**\\n * Should be called to check if the number of arguments is correct\\n *\\n * @method validateArgs\\n * @param {Array} arguments\\n * @throws {Error} if it is not\\n */\\n\\nSubscription.prototype._validateArgs = function (args) {\\n    var subscription = this.options.subscription;\\n\\n    if(!subscription)\\n        subscription = {};\\n\\n    if(!subscription.params)\\n        subscription.params = 0;\\n\\n    if (args.length !== subscription.params) {\\n        throw errors.InvalidNumberOfParams(args.length, subscription.params + 1, args[0]);\\n    }\\n};\\n\\n/**\\n * Should be called to format input args of method\\n *\\n * @method formatInput\\n * @param {Array}\\n * @return {Array}\\n */\\n\\nSubscription.prototype._formatInput = function (args) {\\n    var subscription = this.options.subscription;\\n\\n    if (!subscription) {\\n        return args;\\n    }\\n\\n    if (!subscription.inputFormatter) {\\n        return args;\\n    }\\n\\n    var formattedArgs = subscription.inputFormatter.map(function (formatter, index) {\\n        return formatter ? formatter(args[index]) : args[index];\\n    });\\n\\n    return formattedArgs;\\n};\\n\\n/**\\n * Should be called to format output(result) of method\\n *\\n * @method formatOutput\\n * @param {Object}\\n * @return {Object}\\n */\\n\\nSubscription.prototype._formatOutput = function (result) {\\n    var subscription = this.options.subscription;\\n\\n    return (subscription && subscription.outputFormatter && result) ? subscription.outputFormatter(result) : result;\\n};\\n\\n/**\\n * Should create payload from given input args\\n *\\n * @method toPayload\\n * @param {Array} args\\n * @return {Object}\\n */\\nSubscription.prototype._toPayload = function (args) {\\n    var params = [];\\n    this.callback = this._extractCallback(args) || _.identity;\\n\\n    if (!this.subscriptionMethod) {\\n        this.subscriptionMethod = args.shift();\\n\\n        // replace subscription with given name\\n        if (this.options.subscription.subscriptionName) {\\n            this.subscriptionMethod = this.options.subscription.subscriptionName;\\n        }\\n    }\\n\\n    if (!this.arguments) {\\n        this.arguments = this._formatInput(args);\\n        this._validateArgs(this.arguments);\\n        args = []; // make empty after validation\\n\\n    }\\n\\n    // re-add subscriptionName\\n    params.push(this.subscriptionMethod);\\n    params = params.concat(this.arguments);\\n\\n\\n    if (args.length) {\\n        throw new Error(\'Only a callback is allowed as parameter on an already instantiated subscription.\');\\n    }\\n\\n    return {\\n        method: this.options.type + \'_subscribe\',\\n        params: params\\n    };\\n};\\n\\n/**\\n * Unsubscribes and clears callbacks\\n *\\n * @method unsubscribe\\n * @return {Object}\\n */\\nSubscription.prototype.unsubscribe = function(callback) {\\n    this.options.requestManager.removeSubscription(this.id, callback);\\n    this.id = null;\\n    this.removeAllListeners();\\n    clearInterval(this._reconnectIntervalId);\\n};\\n\\n/**\\n * Subscribes and watches for changes\\n *\\n * @method subscribe\\n * @param {String} subscription the subscription\\n * @param {Object} options the options object with address topics and fromBlock\\n * @return {Object}\\n */\\nSubscription.prototype.subscribe = function() {\\n    var _this = this;\\n    var args = Array.prototype.slice.call(arguments);\\n    var payload = this._toPayload(args);\\n\\n    if(!payload) {\\n        return this;\\n    }\\n\\n    if(!this.options.requestManager.provider) {\\n        var err1 = new Error(\'No provider set.\');\\n        this.callback(err1, null, this);\\n        this.emit(\'error\', err1);\\n        return this;\\n    }\\n\\n    // throw error, if provider doesnt support subscriptions\\n    if(!this.options.requestManager.provider.on) {\\n        var err2 = new Error(\'The current provider doesn\\\\\'t support subscriptions: \'+ this.options.requestManager.provider.constructor.name);\\n        this.callback(err2, null, this);\\n        this.emit(\'error\', err2);\\n        return this;\\n    }\\n\\n    // if id is there unsubscribe first\\n    if (this.id) {\\n        this.unsubscribe();\\n    }\\n\\n    // store the params in the options object\\n    this.options.params = payload.params[1];\\n\\n    // get past logs, if fromBlock is available\\n    if(payload.params[0] === \'logs\' && _.isObject(payload.params[1]) && payload.params[1].hasOwnProperty(\'fromBlock\') && isFinite(payload.params[1].fromBlock)) {\\n        // send the subscription request\\n        this.options.requestManager.send({\\n            method: \'cfx_getLogs\',\\n            params: [payload.params[1]]\\n        }, function (err, logs) {\\n            if(!err) {\\n                logs.forEach(function(log){\\n                    var output = _this._formatOutput(log);\\n                    _this.callback(null, output, _this);\\n                    _this.emit(\'data\', output);\\n                });\\n\\n                // TODO subscribe here? after the past logs?\\n\\n            } else {\\n                _this.callback(err, null, _this);\\n                _this.emit(\'error\', err);\\n            }\\n        });\\n    }\\n\\n    // create subscription\\n    // TODO move to separate function? so that past logs can go first?\\n\\n    if(typeof payload.params[1] === \'object\')\\n        delete payload.params[1].fromBlock;\\n\\n    this.options.requestManager.send(payload, function (err, result) {\\n        if(!err && result) {\\n            _this.id = result;\\n\\n            // call callback on notifications\\n            _this.options.requestManager.addSubscription(_this.id, payload.params[0] , _this.options.type, function(err, result) {\\n\\n                if (!err) {\\n                    if (!_.isArray(result)) {\\n                        result = [result];\\n                    }\\n\\n                    result.forEach(function(resultItem) {\\n                        var output = _this._formatOutput(resultItem);\\n\\n                        if (_.isFunction(_this.options.subscription.subscriptionHandler)) {\\n                            return _this.options.subscription.subscriptionHandler.call(_this, output);\\n                        } else {\\n                            _this.emit(\'data\', output);\\n                        }\\n\\n                        // call the callback, last so that unsubscribe there won\'t affect the emit above\\n                        _this.callback(null, output, _this);\\n                    });\\n                } else {\\n                    // unsubscribe, but keep listeners\\n                    _this.options.requestManager.removeSubscription(_this.id);\\n\\n                    // re-subscribe, if connection fails\\n                    if(_this.options.requestManager.provider.once) {\\n                        _this._reconnectIntervalId = setInterval(function () {\\n                            // TODO check if that makes sense!\\n                            if (_this.options.requestManager.provider.reconnect) {\\n                                _this.options.requestManager.provider.reconnect();\\n                            }\\n                        }, 500);\\n\\n                        _this.options.requestManager.provider.once(\'connect\', function () {\\n                            clearInterval(_this._reconnectIntervalId);\\n                            _this.subscribe(_this.callback);\\n                        });\\n                    }\\n                    _this.emit(\'error\', err);\\n\\n                     // call the callback, last so that unsubscribe there won\'t affect the emit above\\n                    _this.callback(err, null, _this);\\n                }\\n            });\\n        } else {\\n          _this.callback(err, null, _this);\\n          _this.emit(\'error\', err);\\n        }\\n    });\\n\\n    // return an object to cancel the subscription\\n    return this;\\n};\\n\\nmodule.exports = Subscription;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,null,1,73,null,73,73,73,73,null,73,null,null,null,null,null,null,null,1,1,null,null,null,null,null,null,null,null,null,null,1,73,73,null,null,null,null,null,null,null,null,null,null,null,1,73,null,73,0,null,73,57,null,73,0,null,null,null,null,null,null,null,null,null,null,null,1,73,null,73,0,null,null,73,57,null,null,16,16,null,null,16,null,null,null,null,null,null,null,null,null,null,1,179,null,179,null,null,null,null,null,null,null,null,null,1,73,73,null,73,73,null,null,73,57,null,null,null,73,73,73,73,null,null,null,null,73,73,null,null,73,0,null,null,73,null,null,null,null,null,null,null,null,null,null,null,1,41,41,41,41,null,null,null,null,null,null,null,null,null,null,1,73,73,73,null,73,0,null,null,73,0,0,0,0,null,null,null,73,0,0,0,0,null,null,null,73,0,null,null,null,73,null,null,73,null,2,null,null,null,2,2,4,4,4,null,null,null,null,null,0,0,null,null,null,null,null,null,null,73,16,null,73,73,45,null,null,45,null,175,175,175,null,null,175,175,null,175,20,null,155,null,null,null,155,null,null,null,0,null,null,0,0,null,0,0,null,null,null,0,0,0,null,null,0,null,null,0,null,null,null,28,28,null,null,null,null,73,null,null,1,null],"branches":[58,1,0,73,58,1,1,0,74,2,0,0,74,2,1,73,77,3,0,57,77,3,1,16,80,4,0,0,80,4,1,73,96,5,0,0,96,5,1,73,100,6,0,57,100,6,1,16,105,7,0,16,105,7,1,0,122,8,0,179,122,8,1,0,122,9,0,179,122,9,1,179,122,9,2,179,134,10,0,73,134,10,1,0,136,11,0,73,136,11,1,0,140,12,0,57,140,12,1,16,145,13,0,73,145,13,1,0,157,14,0,0,157,14,1,73,193,15,0,0,193,15,1,73,197,16,0,0,197,16,1,73,205,17,0,0,205,17,1,73,213,18,0,0,213,18,1,73,221,19,0,2,221,19,1,71,221,20,0,73,221,20,1,16,221,20,2,16,221,20,3,2,227,21,0,2,227,21,1,0,246,22,0,16,246,22,1,57,250,23,0,45,250,23,1,28,250,24,0,73,250,24,1,73,256,25,0,175,256,25,1,0,257,26,0,175,257,26,1,0,264,27,0,20,264,27,1,155,278,28,0,0,278,28,1,0,281,29,0,0,281,29,1,0]},{"name":"packages/conflux-web-cfx/src/index.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar _ = require(\'underscore\');\\nvar core = require(\'conflux-web-core\');\\nvar helpers = require(\'conflux-web-core-helpers\');\\nvar Subscriptions = require(\'conflux-web-core-subscriptions\').subscriptions;\\nvar Method = require(\'conflux-web-core-method\');\\nvar utils = require(\'conflux-web-utils\');\\nvar Net = require(\'conflux-web-net\');\\n\\n//var ENS = require(\'web3-eth-ens\');\\n//var Personal = require(\'web3-eth-personal\');\\nvar BaseContract = require(\'conflux-web-cfx-contract\');\\nvar Iban = require(\'conflux-web-cfx-iban\');\\nvar Accounts = require(\'conflux-web-cfx-accounts\');\\nvar abi = require(\'conflux-web-cfx-abi\');\\n\\nvar getNetworkType = require(\'./getNetworkType.js\');\\nvar formatter = helpers.formatters;\\n\\n\\nvar blockCall = function (args) {\\n    //return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \\"eth_getBlockByHash\\" : \\"eth_getBlockByNumber\\";\\n    return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \\"cfx_getBlockByHash\\" : \\"cfx_getBlockByNumber\\";\\n};\\n\\nvar transactionFromBlockCall = function (args) {\\n    //return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \'eth_getTransactionByBlockHashAndIndex\' : \'eth_getTransactionByBlockNumberAndIndex\';\\n    return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \'cfx_getTransactionByBlockHashAndIndex\' : \'cfx_getTransactionByBlockNumberAndIndex\';\\n};\\n\\n//var uncleCall = function (args) {\\n    //return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \'eth_getUncleByBlockHashAndIndex\' : \'eth_getUncleByBlockNumberAndIndex\';\\n//};\\n\\nvar getBlockTransactionCountCall = function (args) {\\n    //return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \'eth_getBlockTransactionCountByHash\' : \'eth_getBlockTransactionCountByNumber\';\\n    return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \'cfx_getBlockTransactionCountByHash\' : \'cfx_getBlockTransactionCountByNumber\';\\n};\\n\\n//var uncleCountCall = function (args) {\\n//    return (_.isString(args[0]) && args[0].indexOf(\'0x\') === 0) ? \'eth_getUncleCountByBlockHash\' : \'eth_getUncleCountByBlockNumber\';\\n//};\\n\\n\\nvar Cfx = function Cfx() {\\n    var _this = this;\\n\\n    // sets _requestmanager\\n    core.packageInit(this, arguments);\\n\\n    // overwrite setProvider\\n    var setProvider = this.setProvider;\\n    this.setProvider = function () {\\n        setProvider.apply(_this, arguments);\\n        _this.net.setProvider.apply(_this, arguments);\\n        //_this.personal.setProvider.apply(_this, arguments);\\n        _this.accounts.setProvider.apply(_this, arguments);\\n        _this.Contract.setProvider(_this.currentProvider, _this.accounts);\\n    };\\n\\n\\n    var defaultAccount = null;\\n    var defaultBlock = \'latest_state\';\\n\\n    Object.defineProperty(this, \'defaultAccount\', {\\n        get: function () {\\n            return defaultAccount;\\n        },\\n        set: function (val) {\\n            if(val) {\\n                defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\\n            }\\n\\n            // also set on the Contract object\\n            _this.Contract.defaultAccount = defaultAccount;\\n            //_this.personal.defaultAccount = defaultAccount;\\n\\n            // update defaultBlock\\n            methods.forEach(function(method) {\\n                method.defaultAccount = defaultAccount;\\n            });\\n\\n            return val;\\n        },\\n        enumerable: true\\n    });\\n    Object.defineProperty(this, \'defaultBlock\', {\\n        get: function () {\\n            return defaultBlock;\\n        },\\n        set: function (val) {\\n            defaultBlock = val;\\n            // also set on the Contract object\\n            _this.Contract.defaultBlock = defaultBlock;\\n            //_this.personal.defaultBlock = defaultBlock;\\n\\n            // update defaultBlock\\n            methods.forEach(function(method) {\\n                method.defaultBlock = defaultBlock;\\n            });\\n\\n            return val;\\n        },\\n        enumerable: true\\n    });\\n\\n\\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions;\\n\\n    // add net\\n    this.net = new Net(this.currentProvider);\\n    // add chain detection\\n    this.net.getNetworkType = getNetworkType.bind(this);\\n\\n    // add accounts\\n    this.accounts = new Accounts(this.currentProvider);\\n\\n    // add personal\\n    //this.personal = new Personal(this.currentProvider);\\n    //this.personal.defaultAccount = this.defaultAccount;\\n\\n    // create a proxy Contract type for this instance, as a Contract\'s provider\\n    // is stored as a class member rather than an instance variable. If we do\\n    // not create this proxy type, changing the provider in one instance of\\n    // web3-eth would subsequently change the provider for _all_ contract\\n    // instances!\\n    var self = this;\\n    var Contract = function Contract() {\\n        BaseContract.apply(this, arguments);\\n\\n        // when Eth.setProvider is called, call packageInit\\n        // on all contract instances instantiated via this Eth\\n        // instances. This will update the currentProvider for\\n        // the contract instances\\n        var _this = this;\\n        var setProvider = self.setProvider;\\n        self.setProvider = function() {\\n          setProvider.apply(self, arguments);\\n          core.packageInit(_this, [self.currentProvider]);\\n        };\\n    };\\n\\n    Contract.setProvider = function() {\\n        BaseContract.setProvider.apply(this, arguments);\\n    };\\n\\n    // make our proxy Contract inherit from web3-eth-contract so that it has all\\n    // the right functionality and so that instanceof and friends work properly\\n    Contract.prototype = Object.create(BaseContract.prototype);\\n    Contract.prototype.constructor = Contract;\\n\\n    // add contract\\n    this.Contract = Contract;\\n    this.Contract.defaultAccount = this.defaultAccount;\\n    this.Contract.defaultBlock = this.defaultBlock;\\n    this.Contract.setProvider(this.currentProvider, this.accounts);\\n\\n    // add IBAN\\n    this.Iban = Iban;\\n\\n    // add ABI\\n    this.abi = abi;\\n\\n    // add ENS\\n    //this.ens = new ENS(this);\\n\\n    var methods = [\\n        new Method({\\n            name: \'getNodeInfo\',\\n            call: \'web3_clientVersion\'\\n        }),\\n        new Method({\\n            name: \'getProtocolVersion\',\\n            call: \'cfx_protocolVersion\',\\n            params: 0\\n        }),\\n        new Method({\\n            name: \'getCoinbase\',\\n            call: \'cfx_coinbase\',\\n            params: 0\\n        }),\\n        new Method({\\n            name: \'isMining\',\\n            call: \'cfx_mining\',\\n            params: 0\\n        }),\\n        new Method({\\n            name: \'getHashrate\',\\n            call: \'cfx_hashrate\',\\n            params: 0,\\n            outputFormatter: utils.hexToNumber\\n        }),\\n        new Method({\\n            name: \'isSyncing\',\\n            call: \'cfx_syncing\',\\n            params: 0,\\n            outputFormatter: formatter.outputSyncingFormatter\\n        }),\\n        new Method({\\n            name: \'getGasPrice\',\\n            call: \'cfx_gasPrice\',\\n            params: 0,\\n            outputFormatter: formatter.outputBigNumberFormatter\\n        }),\\n        new Method({\\n            name: \'getAccounts\',\\n            call: \'cfx_accounts\',\\n            params: 0,\\n            outputFormatter: utils.toChecksumAddress\\n        }),\\n        new Method({\\n            name: \'getBlockNumber\',\\n            call: \'cfx_blockNumber\',\\n            params: 0,\\n            outputFormatter: utils.hexToNumber\\n        }),\\n        new Method({\\n            name: \'getBalance\',\\n            call: \'cfx_getBalance\',\\n            params: 2,\\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\\n            outputFormatter: formatter.outputBigNumberFormatter\\n        }),\\n        new Method({\\n            name: \'getStorageAt\',\\n            call: \'cfx_getStorageAt\',\\n            params: 3,\\n            inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\\n        }),\\n        new Method({\\n            name: \'getCode\',\\n            call: \'cfx_getCode\',\\n            params: 2,\\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\\n        }),\\n        new Method({\\n            name: \'getBlock\',\\n            call: blockCall,\\n            params: 2,\\n            inputFormatter: [formatter.inputBlockNumberFormatter, function (val) { return !!val; }],\\n            outputFormatter: formatter.outputBlockFormatter\\n        }),\\n        //new Method({\\n        //    name: \'getUncle\',\\n        //    call: uncleCall,\\n        //    params: 2,\\n        //    inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\\n        //    outputFormatter: formatter.outputBlockFormatter,\\n\\n        //}),\\n        new Method({\\n            name: \'getBlockTransactionCount\',\\n            call: getBlockTransactionCountCall,\\n            params: 1,\\n            inputFormatter: [formatter.inputBlockNumberFormatter],\\n            outputFormatter: utils.hexToNumber\\n        }),\\n        //new Method({\\n        //    name: \'getBlockUncleCount\',\\n        //    call: uncleCountCall,\\n        //    params: 1,\\n        //    inputFormatter: [formatter.inputBlockNumberFormatter],\\n        //    outputFormatter: utils.hexToNumber\\n        //}),\\n        new Method({\\n            name: \'getTransaction\',\\n            call: \'cfx_getTransactionByHash\',\\n            params: 1,\\n            inputFormatter: [null],\\n            outputFormatter: formatter.outputTransactionFormatter\\n        }),\\n        new Method({\\n            name: \'getTransactionFromBlock\',\\n            call: transactionFromBlockCall,\\n            params: 2,\\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\\n            outputFormatter: formatter.outputTransactionFormatter\\n        }),\\n        new Method({\\n            name: \'getTransactionReceipt\',\\n            call: \'cfx_getTransactionReceipt\',\\n            params: 1,\\n            inputFormatter: [null],\\n            outputFormatter: formatter.outputTransactionReceiptFormatter\\n        }),\\n        new Method({\\n            name: \'getTransactionCount\',\\n            call: \'cfx_getTransactionCount\',\\n            params: 2,\\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\\n            outputFormatter: utils.hexToNumber\\n        }),\\n        new Method({\\n            name: \'sendSignedTransaction\',\\n            call: \'cfx_sendRawTransaction\',\\n            params: 1,\\n            inputFormatter: [null]\\n        }),\\n        new Method({\\n            name: \'signTransaction\',\\n            call: \'cfx_signTransaction\',\\n            params: 1,\\n            inputFormatter: [formatter.inputTransactionFormatter]\\n        }),\\n        new Method({\\n            name: \'sendTransaction\',\\n            call: \'cfx_sendTransaction\',\\n            params: 1,\\n            inputFormatter: [formatter.inputTransactionFormatter]\\n        }),\\n        new Method({\\n            name: \'sign\',\\n            call: \'cfx_sign\',\\n            params: 2,\\n            inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\\n            transformPayload: function (payload) {\\n                payload.params.reverse();\\n                return payload;\\n            }\\n        }),\\n        new Method({\\n            name: \'call\',\\n            call: \'cfx_call\',\\n            params: 2,\\n            inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter]\\n        }),\\n        new Method({\\n            name: \'estimateGas\',\\n            call: \'cfx_estimateGas\',\\n            params: 1,\\n            inputFormatter: [formatter.inputCallFormatter],\\n            outputFormatter: utils.hexToNumber\\n        }),\\n        new Method({\\n            name: \'submitWork\',\\n            call: \'cfx_submitWork\',\\n            params: 3\\n        }),\\n        new Method({\\n            name: \'getWork\',\\n            call: \'cfx_getWork\',\\n            params: 0\\n        }),\\n        new Method({\\n            name: \'getPastLogs\',\\n            call: \'cfx_getLogs\',\\n            params: 1,\\n            inputFormatter: [formatter.inputLogFormatter],\\n            outputFormatter: formatter.outputLogFormatter\\n        }),\\n\\n        // subscriptions\\n        new Subscriptions({\\n            name: \'subscribe\',\\n            //type: \'eth\',\\n            type: \'cfx\',\\n            subscriptions: {\\n                \'newBlockHeaders\': {\\n                    // TODO rename on RPC side?\\n                    subscriptionName: \'newHeads\', // replace subscription with this name\\n                    params: 0,\\n                    outputFormatter: formatter.outputBlockFormatter\\n                },\\n                \'pendingTransactions\': {\\n                    subscriptionName: \'newPendingTransactions\', // replace subscription with this name\\n                    params: 0\\n                },\\n                \'logs\': {\\n                    params: 1,\\n                    inputFormatter: [formatter.inputLogFormatter],\\n                    outputFormatter: formatter.outputLogFormatter,\\n                    // DUBLICATE, also in web3-eth-contract\\n                    subscriptionHandler: function (output) {\\n                        if(output.removed) {\\n                            this.emit(\'changed\', output);\\n                        } else {\\n                            this.emit(\'data\', output);\\n                        }\\n\\n                        if (_.isFunction(this.callback)) {\\n                            this.callback(null, output, this);\\n                        }\\n                    }\\n                },\\n                \'syncing\': {\\n                    params: 0,\\n                    outputFormatter: formatter.outputSyncingFormatter,\\n                    subscriptionHandler: function (output) {\\n                        var _this = this;\\n\\n                        // fire TRUE at start\\n                        if(this._isSyncing !== true) {\\n                            this._isSyncing = true;\\n                            this.emit(\'changed\', _this._isSyncing);\\n\\n                            if (_.isFunction(this.callback)) {\\n                                this.callback(null, _this._isSyncing, this);\\n                            }\\n\\n                            setTimeout(function () {\\n                                _this.emit(\'data\', output);\\n\\n                                if (_.isFunction(_this.callback)) {\\n                                    _this.callback(null, output, _this);\\n                                }\\n                            }, 0);\\n\\n                            // fire sync status\\n                        } else {\\n                            this.emit(\'data\', output);\\n                            if (_.isFunction(_this.callback)) {\\n                                this.callback(null, output, this);\\n                            }\\n\\n                            // wait for some time before fireing the FALSE\\n                            clearTimeout(this._isSyncingTimeout);\\n                            this._isSyncingTimeout = setTimeout(function () {\\n                                if(output.currentBlock > output.highestBlock - 200) {\\n                                    _this._isSyncing = false;\\n                                    _this.emit(\'changed\', _this._isSyncing);\\n\\n                                    if (_.isFunction(_this.callback)) {\\n                                        _this.callback(null, _this._isSyncing, _this);\\n                                    }\\n                                }\\n                            }, 500);\\n                        }\\n                    }\\n                }\\n            }\\n        })\\n    ];\\n\\n    methods.forEach(function(method) {\\n        method.attachToObject(_this);\\n        method.setRequestManager(_this._requestManager, _this.accounts); // second param means is eth.accounts (necessary for wallet signing)\\n        method.defaultBlock = _this.defaultBlock;\\n        method.defaultAccount = _this.defaultAccount;\\n    });\\n\\n};\\n\\ncore.addProviders(Cfx);\\n\\n\\nmodule.exports = Cfx;\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,1,1,1,null,null,null,1,1,1,1,null,1,1,null,null,1,null,12,null,null,1,null,4,null,null,null,null,null,null,1,null,8,null,null,null,null,null,null,null,1,343,null,null,343,null,null,342,342,88,87,null,87,87,null,null,null,342,342,null,342,null,9925,null,null,4,4,null,null,null,3,null,null,null,3,84,null,null,3,null,null,null,342,null,9925,null,null,1,null,1,null,null,null,1,28,null,null,1,null,null,null,null,null,342,null,null,342,null,342,null,null,342,null,null,null,null,null,null,null,null,null,null,342,342,91,null,null,null,null,null,89,89,89,1,1,null,null,null,342,429,null,null,null,null,342,342,null,null,342,342,342,342,null,null,342,null,null,342,null,null,null,null,342,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8,8,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,null,0,null,null,0,0,null,null,null,null,null,null,null,0,null,null,0,0,0,null,0,0,null,null,0,0,null,0,0,null,null,null,null,null,0,0,0,null,null,null,0,0,0,0,0,null,0,0,null,null,null,null,null,null,null,null,null,null,342,9576,9576,9576,9576,null,null,null,null,1,null,null,1,null,null],"branches":[46,1,0,2,46,1,1,10,46,2,0,12,46,2,1,2,51,3,0,2,51,3,1,2,51,4,0,4,51,4,1,2,60,5,0,4,60,5,1,4,60,6,0,8,60,6,1,6,93,7,0,4,93,7,1,0,397,8,0,0,397,8,1,0,403,9,0,0,403,9,1,0,415,10,0,0,415,10,1,0,419,11,0,0,419,11,1,0,426,12,0,0,426,12,1,0,434,13,0,0,434,13,1,0,441,14,0,0,441,14,1,0,445,15,0,0,445,15,1,0]},{"name":"packages/conflux-web-net/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar core = require(\'conflux-web-core\');\\nvar Method = require(\'conflux-web-core-method\');\\nvar utils = require(\'conflux-web-utils\');\\n\\n\\nvar Net = function () {\\n    var _this = this;\\n\\n    // sets _requestmanager\\n    core.packageInit(this, arguments);\\n\\n\\n    [\\n        new Method({\\n            name: \'getId\',\\n            call: \'net_version\',\\n            params: 0,\\n            outputFormatter: utils.hexToNumber\\n        }),\\n        new Method({\\n            name: \'isListening\',\\n            call: \'net_listening\',\\n            params: 0\\n        }),\\n        new Method({\\n            name: \'getPeerCount\',\\n            call: \'net_peerCount\',\\n            params: 0,\\n            outputFormatter: utils.hexToNumber\\n        })\\n    ].forEach(function(method) {\\n        method.attachToObject(_this);\\n        method.setRequestManager(_this._requestManager);\\n    });\\n\\n};\\n\\ncore.addProviders(Net);\\n\\n\\nmodule.exports = Net;\\n\\n\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,null,null,1,356,null,null,356,null,null,355,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1065,1065,null,null,null,null,1,null,null,1,null,null,null],"branches":[]},{"name":"packages/conflux-web-cfx-contract/src/index.js","source":"/*\\n    This file is part of web3.js.\\n\\n    web3.js is free software: you can redistribute it and/or modify\\n    it under the terms of the GNU Lesser General Public License as published by\\n    the Free Software Foundation, either version 3 of the License, or\\n    (at your option) any later version.\\n\\n    web3.js is distributed in the hope that it will be useful,\\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n    GNU Lesser General Public License for more details.\\n\\n    You should have received a copy of the GNU Lesser General Public License\\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n*/\\n/**\\n * @file contract.js\\n *\\n * To initialize a contract use:\\n *\\n *  var Contract = require(\'web3-eth-contract\');\\n *  Contract.setProvider(\'ws://localhost:8546\');\\n *  var contract = new Contract(abi, address, ...);\\n *\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\n\\"use strict\\";\\n\\n\\nvar _ = require(\'underscore\');\\nvar core = require(\'conflux-web-core\');\\nvar Method = require(\'conflux-web-core-method\');\\nvar utils = require(\'conflux-web-utils\');\\nvar Subscription = require(\'conflux-web-core-subscriptions\').subscription;\\nvar formatters = require(\'conflux-web-core-helpers\').formatters;\\nvar errors = require(\'conflux-web-core-helpers\').errors;\\nvar promiEvent = require(\'conflux-web-core-promievent\');\\nvar abi = require(\'conflux-web-cfx-abi\');\\n\\n\\n/**\\n * Should be called to create new contract instance\\n *\\n * @method Contract\\n * @constructor\\n * @param {Array} jsonInterface\\n * @param {String} address\\n * @param {Object} options\\n */\\nvar Contract = function Contract(jsonInterface, address, options) {\\n    var _this = this,\\n        args = Array.prototype.slice.call(arguments);\\n\\n    if(!(this instanceof Contract)) {\\n        throw new Error(\'Please use the \\"new\\" keyword to instantiate a web3.cfx.contract() object!\');\\n    }\\n\\n    // sets _requestmanager\\n    core.packageInit(this, [this.constructor.currentProvider]);\\n\\n    this.clearSubscriptions = this._requestManager.clearSubscriptions;\\n\\n\\n\\n    if(!jsonInterface || !(Array.isArray(jsonInterface))) {\\n        throw new Error(\'You must provide the json interface of the contract when instantiating a contract object.\');\\n    }\\n\\n\\n\\n    // create the options object\\n    this.options = {};\\n\\n    var lastArg = args[args.length - 1];\\n    if(_.isObject(lastArg) && !_.isArray(lastArg)) {\\n        options = lastArg;\\n\\n        this.options = _.extend(this.options, this._getOrSetDefaultOptions(options));\\n        if(_.isObject(address)) {\\n            address = null;\\n        }\\n    }\\n\\n    // set address\\n    Object.defineProperty(this.options, \'address\', {\\n        set: function(value){\\n            if(value) {\\n                _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\\n            }\\n        },\\n        get: function(){\\n            return _this._address;\\n        },\\n        enumerable: true\\n    });\\n\\n    // add method and event signatures, when the jsonInterface gets set\\n    Object.defineProperty(this.options, \'jsonInterface\', {\\n        set: function(value){\\n            _this.methods = {};\\n            _this.events = {};\\n\\n            _this._jsonInterface = value.map(function(method) {\\n                var func,\\n                    funcName;\\n\\n                // make constant and payable backwards compatible\\n                method.constant = (method.stateMutability === \\"view\\" || method.stateMutability === \\"pure\\" || method.constant);\\n                method.payable = (method.stateMutability === \\"payable\\" || method.payable);\\n\\n\\n                if (method.name) {\\n                    funcName = utils._jsonInterfaceMethodToString(method);\\n                }\\n\\n\\n                // function\\n                if (method.type === \'function\') {\\n                    method.signature = abi.encodeFunctionSignature(funcName);\\n                    func = _this._createTxObject.bind({\\n                        method: method,\\n                        parent: _this\\n                    });\\n\\n\\n                    // add method only if not one already exists\\n                    if(!_this.methods[method.name]) {\\n                        _this.methods[method.name] = func;\\n                    } else {\\n                        var cascadeFunc = _this._createTxObject.bind({\\n                            method: method,\\n                            parent: _this,\\n                            nextMethod: _this.methods[method.name]\\n                        });\\n                        _this.methods[method.name] = cascadeFunc;\\n                    }\\n\\n                    // definitely add the method based on its signature\\n                    _this.methods[method.signature] = func;\\n\\n                    // add method by name\\n                    _this.methods[funcName] = func;\\n\\n\\n                // event\\n                } else if (method.type === \'event\') {\\n                    method.signature = abi.encodeEventSignature(funcName);\\n                    var event = _this._on.bind(_this, method.signature);\\n\\n                    // add method only if not already exists\\n                    if(!_this.events[method.name] || _this.events[method.name].name === \'bound \')\\n                        _this.events[method.name] = event;\\n\\n                    // definitely add the method based on its signature\\n                    _this.events[method.signature] = event;\\n\\n                    // add event by name\\n                    _this.events[funcName] = event;\\n                }\\n\\n\\n                return method;\\n            });\\n\\n            // add allEvents\\n            _this.events.allEvents = _this._on.bind(_this, \'allevents\');\\n\\n            return _this._jsonInterface;\\n        },\\n        get: function(){\\n            return _this._jsonInterface;\\n        },\\n        enumerable: true\\n    });\\n\\n    // get default account from the Class\\n    var defaultAccount = this.constructor.defaultAccount;\\n    var defaultBlock = this.constructor.defaultBlock || \'latest_state\';\\n\\n    Object.defineProperty(this, \'defaultAccount\', {\\n        get: function () {\\n            return defaultAccount;\\n        },\\n        set: function (val) {\\n            if(val) {\\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\\n            }\\n\\n            return val;\\n        },\\n        enumerable: true\\n    });\\n    Object.defineProperty(this, \'defaultBlock\', {\\n        get: function () {\\n            return defaultBlock;\\n        },\\n        set: function (val) {\\n            defaultBlock = val;\\n\\n            return val;\\n        },\\n        enumerable: true\\n    });\\n\\n    // properties\\n    this.methods = {};\\n    this.events = {};\\n\\n    this._address = null;\\n    this._jsonInterface = [];\\n\\n    // set getter/setter properties\\n    this.options.address = address;\\n    this.options.jsonInterface = jsonInterface;\\n\\n};\\n\\nContract.setProvider = function(provider, accounts) {\\n    // Contract.currentProvider = provider;\\n    core.packageInit(this, [provider]);\\n\\n    this._ethAccounts = accounts;\\n};\\n\\n\\n/**\\n * Get the callback and modiufy the array if necessary\\n *\\n * @method _getCallback\\n * @param {Array} args\\n * @return {Function} the callback\\n */\\nContract.prototype._getCallback = function getCallback(args) {\\n    if (args && _.isFunction(args[args.length - 1])) {\\n        return args.pop(); // modify the args array!\\n    }\\n};\\n\\n/**\\n * Checks that no listener with name \\"newListener\\" or \\"removeListener\\" is added.\\n *\\n * @method _checkListener\\n * @param {String} type\\n * @param {String} event\\n * @return {Object} the contract instance\\n */\\nContract.prototype._checkListener = function(type, event){\\n    if(event === type) {\\n        throw new Error(\'The event \\"\'+ type +\'\\" is a reserved event name, you can\\\\\'t use it.\');\\n    }\\n};\\n\\n\\n/**\\n * Use default values, if options are not available\\n *\\n * @method _getOrSetDefaultOptions\\n * @param {Object} options the options gived by the user\\n * @return {Object} the options with gaps filled by defaults\\n */\\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\\n    var gasPrice = options.gasPrice ? String(options.gasPrice): null;\\n    var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\\n\\n    options.data = options.data || this.options.data;\\n\\n    options.from = from || this.options.from;\\n    options.gasPrice = gasPrice || this.options.gasPrice;\\n    options.gas = options.gas || options.gasLimit || this.options.gas;\\n\\n    // TODO replace with only gasLimit?\\n    delete options.gasLimit;\\n\\n    return options;\\n};\\n\\n\\n/**\\n * Should be used to encode indexed params and options to one final object\\n *\\n * @method _encodeEventABI\\n * @param {Object} event\\n * @param {Object} options\\n * @return {Object} everything combined together and encoded\\n */\\nContract.prototype._encodeEventABI = function (event, options) {\\n    options = options || {};\\n    var filter = options.filter || {},\\n        result = {};\\n\\n    [\'fromBlock\', \'toBlock\'].filter(function (f) {\\n        return options[f] !== undefined;\\n    }).forEach(function (f) {\\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\\n    });\\n\\n    // use given topics\\n    if(_.isArray(options.topics)) {\\n        result.topics = options.topics;\\n\\n    // create topics based on filter\\n    } else {\\n\\n        result.topics = [];\\n\\n        // add event signature\\n        if (event && !event.anonymous && event.name !== \'ALLEVENTS\') {\\n            result.topics.push(event.signature);\\n        }\\n\\n        // add event topics (indexed arguments)\\n        if (event.name !== \'ALLEVENTS\') {\\n            var indexedTopics = event.inputs.filter(function (i) {\\n                return i.indexed === true;\\n            }).map(function (i) {\\n                var value = filter[i.name];\\n                if (!value) {\\n                    return null;\\n                }\\n\\n                // TODO: https://github.com/ethereum/web3.js/issues/344\\n                // TODO: deal properly with components\\n\\n                if (_.isArray(value)) {\\n                    return value.map(function (v) {\\n                        return abi.encodeParameter(i.type, v);\\n                    });\\n                }\\n                return abi.encodeParameter(i.type, value);\\n            });\\n\\n            result.topics = result.topics.concat(indexedTopics);\\n        }\\n\\n        if(!result.topics.length)\\n            delete result.topics;\\n    }\\n\\n    if(this.options.address) {\\n        result.address = this.options.address.toLowerCase();\\n    }\\n\\n    return result;\\n};\\n\\n/**\\n * Should be used to decode indexed params and options\\n *\\n * @method _decodeEventABI\\n * @param {Object} data\\n * @return {Object} result object with decoded indexed && not indexed params\\n */\\nContract.prototype._decodeEventABI = function (data) {\\n    var event = this;\\n\\n    data.data = data.data || \'\';\\n    data.topics = data.topics || [];\\n    var result = formatters.outputLogFormatter(data);\\n\\n    // if allEvents get the right event\\n    if(event.name === \'ALLEVENTS\') {\\n        event = event.jsonInterface.find(function (intf) {\\n            return (intf.signature === data.topics[0]);\\n        }) || {anonymous: true};\\n    }\\n\\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\\n    event.inputs = event.inputs || [];\\n\\n\\n    var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\\n\\n    result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\\n    delete result.returnValues.__length__;\\n\\n    // add name\\n    result.event = event.name;\\n\\n    // add signature\\n    result.signature = (event.anonymous || !data.topics[0]) ? null : data.topics[0];\\n\\n    // move the data and topics to \\"raw\\"\\n    result.raw = {\\n        data: result.data,\\n        topics: result.topics\\n    };\\n    delete result.data;\\n    delete result.topics;\\n\\n\\n    return result;\\n};\\n\\n/**\\n * Encodes an ABI for a method, including signature or the method.\\n * Or when constructor encodes only the constructor parameters.\\n *\\n * @method _encodeMethodABI\\n * @param {Mixed} args the arguments to encode\\n * @param {String} the encoded ABI\\n */\\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\\n    var methodSignature = this._method.signature,\\n        args = this.arguments || [];\\n\\n    var signature = false,\\n        paramsABI = this._parent.options.jsonInterface.filter(function (json) {\\n            return ((methodSignature === \'constructor\' && json.type === methodSignature) ||\\n                ((json.signature === methodSignature || json.signature === methodSignature.replace(\'0x\',\'\') || json.name === methodSignature) && json.type === \'function\'));\\n        }).map(function (json) {\\n            var inputLength = (_.isArray(json.inputs)) ? json.inputs.length : 0;\\n\\n            if (inputLength !== args.length) {\\n                throw new Error(\'The number of arguments is not matching the methods required number. You need to pass \'+ inputLength +\' arguments.\');\\n            }\\n\\n            if (json.type === \'function\') {\\n                signature = json.signature;\\n            }\\n            return _.isArray(json.inputs) ? json.inputs : [];\\n        }).map(function (inputs) {\\n            return abi.encodeParameters(inputs, args).replace(\'0x\',\'\');\\n        })[0] || \'\';\\n\\n    // return constructor\\n    if(methodSignature === \'constructor\') {\\n        if(!this._deployData)\\n            throw new Error(\'The contract has no contract data option set. This is necessary to append the constructor parameters.\');\\n\\n        return this._deployData + paramsABI;\\n\\n    // return method\\n    } else {\\n\\n        var returnValue = (signature) ? signature + paramsABI : paramsABI;\\n\\n        if(!returnValue) {\\n            throw new Error(\'Couldn\\\\\'t find a matching contract method named \\"\'+ this._method.name +\'\\".\');\\n        } else {\\n            return returnValue;\\n        }\\n    }\\n\\n};\\n\\n\\n/**\\n * Decode method return values\\n *\\n * @method _decodeMethodReturn\\n * @param {Array} outputs\\n * @param {String} returnValues\\n * @return {Object} decoded output return values\\n */\\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\\n    if (!returnValues) {\\n        return null;\\n    }\\n\\n    returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\\n    var result = abi.decodeParameters(outputs, returnValues);\\n\\n    if (result.__length__ === 1) {\\n        return result[0];\\n    } else {\\n        delete result.__length__;\\n        return result;\\n    }\\n};\\n\\n\\n/**\\n * Deploys a contract and fire events based on its state: transactionHash, receipt\\n *\\n * All event listeners will be removed, once the last possible event is fired (\\"error\\", or \\"receipt\\")\\n *\\n * @method deploy\\n * @param {Object} options\\n * @param {Function} callback\\n * @return {Object} EventEmitter possible events are \\"error\\", \\"transactionHash\\" and \\"receipt\\"\\n */\\nContract.prototype.deploy = function(options, callback){\\n\\n    options = options || {};\\n\\n    options.arguments = options.arguments || [];\\n    options = this._getOrSetDefaultOptions(options);\\n\\n\\n    // return error, if no \\"data\\" is specified\\n    if(!options.data) {\\n        return utils._fireError(new Error(\'No \\"data\\" specified in neither the given options, nor the default options.\'), null, null, callback);\\n    }\\n\\n    var constructor = _.find(this.options.jsonInterface, function (method) {\\n        return (method.type === \'constructor\');\\n    }) || {};\\n    constructor.signature = \'constructor\';\\n\\n    return this._createTxObject.apply({\\n        method: constructor,\\n        parent: this,\\n        deployData: options.data,\\n        _ethAccounts: this.constructor._ethAccounts\\n    }, options.arguments);\\n\\n};\\n\\n/**\\n * Gets the event signature and outputformatters\\n *\\n * @method _generateEventOptions\\n * @param {Object} event\\n * @param {Object} options\\n * @param {Function} callback\\n * @return {Object} the event options object\\n */\\nContract.prototype._generateEventOptions = function() {\\n    var args = Array.prototype.slice.call(arguments);\\n\\n    // get the callback\\n    var callback = this._getCallback(args);\\n\\n    // get the options\\n    var options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\\n\\n    var event = (_.isString(args[0])) ? args[0] : \'allevents\';\\n    event = (event.toLowerCase() === \'allevents\') ? {\\n            name: \'ALLEVENTS\',\\n            jsonInterface: this.options.jsonInterface\\n        } : this.options.jsonInterface.find(function (json) {\\n            return (json.type === \'event\' && (json.name === event || json.signature === \'0x\'+ event.replace(\'0x\',\'\')));\\n        });\\n\\n    if (!event) {\\n        throw new Error(\'Event \\"\' + event.name + \'\\" doesn\\\\\'t exist in this contract.\');\\n    }\\n\\n    if (!utils.isAddress(this.options.address)) {\\n        throw new Error(\'This contract object doesn\\\\\'t have address set yet, please set an address first.\');\\n    }\\n\\n    return {\\n        params: this._encodeEventABI(event, options),\\n        event: event,\\n        callback: callback\\n    };\\n};\\n\\n/**\\n * Adds event listeners and creates a subscription, and remove it once its fired.\\n *\\n * @method clone\\n * @return {Object} the event subscription\\n */\\nContract.prototype.clone = function() {\\n    return new this.constructor(this.options.jsonInterface, this.options.address, this.options);\\n};\\n\\n\\n/**\\n * Adds event listeners and creates a subscription, and remove it once its fired.\\n *\\n * @method once\\n * @param {String} event\\n * @param {Object} options\\n * @param {Function} callback\\n * @return {Object} the event subscription\\n */\\nContract.prototype.once = function(event, options, callback) {\\n    var args = Array.prototype.slice.call(arguments);\\n\\n    // get the callback\\n    callback = this._getCallback(args);\\n\\n    if (!callback) {\\n        throw new Error(\'Once requires a callback as the second parameter.\');\\n    }\\n\\n    // don\'t allow fromBlock\\n    if (options)\\n        delete options.fromBlock;\\n\\n    // don\'t return as once shouldn\'t provide \\"on\\"\\n    this._on(event, options, function (err, res, sub) {\\n        sub.unsubscribe();\\n        if(_.isFunction(callback)){\\n            callback(err, res, sub);\\n        }\\n    });\\n\\n    return undefined;\\n};\\n\\n/**\\n * Adds event listeners and creates a subscription.\\n *\\n * @method _on\\n * @param {String} event\\n * @param {Object} options\\n * @param {Function} callback\\n * @return {Object} the event subscription\\n */\\nContract.prototype._on = function(){\\n    var subOptions = this._generateEventOptions.apply(this, arguments);\\n\\n\\n    // prevent the event \\"newListener\\" and \\"removeListener\\" from being overwritten\\n    this._checkListener(\'newListener\', subOptions.event.name, subOptions.callback);\\n    this._checkListener(\'removeListener\', subOptions.event.name, subOptions.callback);\\n\\n    // TODO check if listener already exists? and reuse subscription if options are the same.\\n\\n    // create new subscription\\n    var subscription = new Subscription({\\n        subscription: {\\n            params: 1,\\n            inputFormatter: [formatters.inputLogFormatter],\\n            outputFormatter: this._decodeEventABI.bind(subOptions.event),\\n            // DUBLICATE, also in web3-eth\\n            subscriptionHandler: function (output) {\\n                if(output.removed) {\\n                    this.emit(\'changed\', output);\\n                } else {\\n                    this.emit(\'data\', output);\\n                }\\n\\n                if (_.isFunction(this.callback)) {\\n                    this.callback(null, output, this);\\n                }\\n            }\\n        },\\n        //type: \'eth\',\\n        type: \'cfx\',\\n        requestManager: this._requestManager\\n    });\\n    subscription.subscribe(\'logs\', subOptions.params, subOptions.callback || function () {});\\n\\n    return subscription;\\n};\\n\\n/**\\n * Get past events from contracts\\n *\\n * @method getPastEvents\\n * @param {String} event\\n * @param {Object} options\\n * @param {Function} callback\\n * @return {Object} the promievent\\n */\\nContract.prototype.getPastEvents = function(){\\n    var subOptions = this._generateEventOptions.apply(this, arguments);\\n\\n    var getPastLogs = new Method({\\n        name: \'getPastLogs\',\\n        call: \'cfx_getLogs\',\\n        params: 1,\\n        inputFormatter: [formatters.inputLogFormatter],\\n        outputFormatter: this._decodeEventABI.bind(subOptions.event)\\n    });\\n    getPastLogs.setRequestManager(this._requestManager);\\n    var call = getPastLogs.buildCall();\\n\\n    getPastLogs = null;\\n\\n    return call(subOptions.params, subOptions.callback);\\n};\\n\\n\\n/**\\n * returns the an object with call, send, estimate functions\\n *\\n * @method _createTxObject\\n * @returns {Object} an object with functions to call the methods\\n */\\nContract.prototype._createTxObject =  function _createTxObject(){\\n    var args = Array.prototype.slice.call(arguments);\\n    var txObject = {};\\n\\n    if(this.method.type === \'function\') {\\n\\n        txObject.call = this.parent._executeMethod.bind(txObject, \'call\');\\n        txObject.call.request = this.parent._executeMethod.bind(txObject, \'call\', true); // to make batch requests\\n\\n    }\\n\\n    txObject.send = this.parent._executeMethod.bind(txObject, \'send\');\\n    txObject.send.request = this.parent._executeMethod.bind(txObject, \'send\', true); // to make batch requests\\n    txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\\n    txObject.estimateGas = this.parent._executeMethod.bind(txObject, \'estimate\');\\n\\n    if (args && this.method.inputs && args.length !== this.method.inputs.length) {\\n        if (this.nextMethod) {\\n            return this.nextMethod.apply(null, args);\\n        }\\n        throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\\n    }\\n\\n    txObject.arguments = args || [];\\n    txObject._method = this.method;\\n    txObject._parent = this.parent;\\n    txObject._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts;\\n\\n    if(this.deployData) {\\n        txObject._deployData = this.deployData;\\n    }\\n\\n    return txObject;\\n};\\n\\n\\n/**\\n * Generates the options for the execute call\\n *\\n * @method _processExecuteArguments\\n * @param {Array} args\\n * @param {Promise} defer\\n */\\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\\n    var processedArgs = {};\\n\\n    processedArgs.type = args.shift();\\n\\n    // get the callback\\n    processedArgs.callback = this._parent._getCallback(args);\\n\\n    // get block number to use for call\\n    if(processedArgs.type === \'call\' && args[args.length - 1] !== true && (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1])))\\n        processedArgs.defaultBlock = args.pop();\\n\\n    // get the options\\n    processedArgs.options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\\n\\n    // get the generateRequest argument for batch requests\\n    processedArgs.generateRequest = (args[args.length - 1] === true)? args.pop() : false;\\n\\n    processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\\n    processedArgs.options.data = this.encodeABI();\\n\\n    // add contract address\\n    if(!this._deployData && !utils.isAddress(this._parent.options.address))\\n        throw new Error(\'This contract object doesn\\\\\'t have address set yet, please set an address first.\');\\n\\n    if(!this._deployData)\\n        processedArgs.options.to = this._parent.options.address;\\n\\n    // return error, if no \\"data\\" is specified\\n    if(!processedArgs.options.data)\\n        return utils._fireError(new Error(\'Couldn\\\\\'t find a matching contract method, or the number of parameters is wrong.\'), defer.eventEmitter, defer.reject, processedArgs.callback);\\n\\n    return processedArgs;\\n};\\n\\n/**\\n * Executes a call, transact or estimateGas on a contract function\\n *\\n * @method _executeMethod\\n * @param {String} type the type this execute function should execute\\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\\n */\\nContract.prototype._executeMethod = function _executeMethod(){\\n    var _this = this,\\n        args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer),\\n        defer = promiEvent((args.type !== \'send\')),\\n        ethAccounts = _this.constructor._ethAccounts || _this._ethAccounts;\\n\\n    // simple return request for batch requests\\n    if(args.generateRequest) {\\n\\n        var payload = {\\n            params: [formatters.inputCallFormatter.call(this._parent, args.options)],\\n            callback: args.callback\\n        };\\n\\n        if(args.type === \'call\') {\\n            payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\\n            //payload.method = \'eth_call\';\\n            payload.method = \'cfx_call\';\\n            payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\\n        } else {\\n            //payload.method = \'eth_sendTransaction\';\\n            payload.method = \'cfx_sendTransaction\';\\n        }\\n\\n        return payload;\\n\\n    } else {\\n\\n        switch (args.type) {\\n            case \'estimate\':\\n\\n                var estimateGas = (new Method({\\n                    name: \'estimateGas\',\\n                    //call: \'eth_estimateGas\',\\n                    call: \'cfx_estimateGas\',\\n                    params: 1,\\n                    inputFormatter: [formatters.inputCallFormatter],\\n                    outputFormatter: utils.hexToNumber,\\n                    requestManager: _this._parent._requestManager,\\n                    accounts: ethAccounts, // is eth.accounts (necessary for wallet signing)\\n                    defaultAccount: _this._parent.defaultAccount,\\n                    defaultBlock: _this._parent.defaultBlock\\n                })).createFunction();\\n\\n                return estimateGas(args.options, args.callback);\\n\\n            case \'call\':\\n\\n                // TODO check errors: missing \\"from\\" should give error on deploy and send, call ?\\n\\n                var call = (new Method({\\n                    name: \'call\',\\n                    //call: \'eth_call\',\\n                    call: \'cfx_call\',\\n                    params: 2,\\n                    inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\\n                    // add output formatter for decoding\\n                    outputFormatter: function (result) {\\n                        return _this._parent._decodeMethodReturn(_this._method.outputs, result);\\n                    },\\n                    requestManager: _this._parent._requestManager,\\n                    accounts: ethAccounts, // is eth.accounts (necessary for wallet signing)\\n                    defaultAccount: _this._parent.defaultAccount,\\n                    defaultBlock: _this._parent.defaultBlock\\n                })).createFunction();\\n\\n                return call(args.options, args.defaultBlock, args.callback);\\n\\n            case \'send\':\\n\\n                // return error, if no \\"from\\" is specified\\n                if(!utils.isAddress(args.options.from)) {\\n                    return utils._fireError(new Error(\'No \\"from\\" address specified in neither the given options, nor the default options.\'), defer.eventEmitter, defer.reject, args.callback);\\n                }\\n\\n                if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\\n                    return utils._fireError(new Error(\'Can not send value to non-payable contract method or constructor\'), defer.eventEmitter, defer.reject, args.callback);\\n                }\\n\\n\\n                // make sure receipt logs are decoded\\n                var extraFormatters = {\\n                    receiptFormatter: function (receipt) {\\n                        if (_.isArray(receipt.logs)) {\\n\\n                            // decode logs\\n                            var events = _.map(receipt.logs, function(log) {\\n                                return _this._parent._decodeEventABI.call({\\n                                    name: \'ALLEVENTS\',\\n                                    jsonInterface: _this._parent.options.jsonInterface\\n                                }, log);\\n                            });\\n\\n                            // make log names keys\\n                            receipt.events = {};\\n                            var count = 0;\\n                            events.forEach(function (ev) {\\n                                if (ev.event) {\\n                                    // if > 1 of the same event, don\'t overwrite any existing events\\n                                    if (receipt.events[ev.event]) {\\n                                        if (Array.isArray(receipt.events[ ev.event ])) {\\n                                            receipt.events[ ev.event ].push(ev);\\n                                        } else {\\n                                            receipt.events[ev.event] = [receipt.events[ev.event], ev];\\n                                        }\\n                                    } else {\\n                                        receipt.events[ ev.event ] = ev;\\n                                    }\\n                                } else {\\n                                    receipt.events[count] = ev;\\n                                    count++;\\n                                }\\n                            });\\n\\n                            delete receipt.logs;\\n                        }\\n                        return receipt;\\n                    },\\n                    contractDeployFormatter: function (receipt) {\\n                        var newContract = _this._parent.clone();\\n                        newContract.options.address = receipt.contractAddress;\\n                        return newContract;\\n                    }\\n                };\\n\\n                var sendTransaction = (new Method({\\n                    name: \'sendTransaction\',\\n                    //call: \'eth_sendTransaction\',\\n                    call: \'cfx_sendTransaction\',\\n                    params: 1,\\n                    inputFormatter: [formatters.inputTransactionFormatter],\\n                    requestManager: _this._parent._requestManager,\\n                    accounts: _this.constructor._ethAccounts || _this._ethAccounts, // is eth.accounts (necessary for wallet signing)\\n                    defaultAccount: _this._parent.defaultAccount,\\n                    defaultBlock: _this._parent.defaultBlock,\\n                    extraFormatters: extraFormatters\\n                })).createFunction();\\n\\n                return sendTransaction(args.options, args.callback);\\n\\n        }\\n\\n    }\\n\\n};\\n\\nmodule.exports = Contract;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,1,1,1,1,1,null,null,null,null,null,null,null,null,null,null,null,1,161,null,null,161,0,null,null,null,161,null,161,null,null,null,161,0,null,null,null,null,null,161,null,161,161,13,null,13,11,0,null,null,null,null,159,null,166,147,null,null,null,272,null,null,null,null,null,159,null,161,161,null,161,1918,null,null,null,1918,1918,null,null,1918,1783,null,null,null,null,1918,1498,1498,null,null,null,null,null,null,1498,1363,null,135,null,null,null,null,135,null,null,null,1498,null,null,1498,null,null,null,420,273,273,null,null,273,273,null,null,273,null,null,273,null,null,null,1918,null,null,null,161,null,161,null,null,153,null,null,null,null,null,159,159,null,159,null,84,null,null,0,0,null,null,0,null,null,null,159,null,84,null,null,0,null,0,null,null,null,null,null,159,159,null,159,159,null,null,159,157,null,null,null,1,null,497,null,497,null,null,null,null,null,null,null,null,null,null,1,113,52,null,null,null,null,null,null,null,null,null,null,null,1,32,0,null,null,null,null,null,null,null,null,null,null,null,1,113,113,null,111,null,111,111,111,null,null,111,null,111,null,null,null,null,null,null,null,null,null,null,null,1,33,33,null,null,33,66,null,10,null,null,null,33,0,null,null,null,null,33,null,null,33,29,null,null,null,33,31,103,null,58,58,30,null,null,null,null,null,28,3,6,null,null,25,null,null,31,null,null,33,2,null,null,33,33,null,null,33,null,null,null,null,null,null,null,null,null,1,46,null,46,46,46,null,null,46,16,182,null,null,null,null,46,null,null,46,null,46,46,null,null,46,null,null,46,null,null,46,null,null,null,46,46,null,null,46,null,null,null,null,null,null,null,null,null,null,1,98,null,null,98,null,1255,null,null,98,null,98,0,null,null,98,87,null,98,null,98,null,null,null,98,11,0,null,11,null,null,null,null,87,null,87,0,null,87,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,45,0,null,null,45,45,null,42,40,null,2,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,11,null,11,11,null,null,null,11,0,null,null,11,11,null,11,null,11,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,18,null,null,18,null,null,18,null,18,18,null,null,null,176,null,null,18,0,null,null,18,0,null,null,18,null,null,null,null,null,null,null,null,null,null,null,null,1,5,null,null,null,null,null,null,null,null,null,null,null,null,1,6,null,null,6,null,6,2,null,null,null,4,4,null,null,4,4,4,4,null,null,null,4,null,null,null,null,null,null,null,null,null,null,null,1,16,null,null,null,16,16,null,null,null,null,16,null,null,null,null,null,null,20,2,null,18,null,null,20,20,null,null,null,null,null,null,null,16,null,16,null,null,null,null,null,null,null,null,null,null,null,1,2,null,2,null,null,null,null,null,null,2,2,null,2,null,2,null,null,null,null,null,null,null,null,null,1,96,96,null,96,null,85,85,null,null,null,96,96,96,96,null,96,4,2,null,2,null,null,92,92,92,92,null,92,11,null,null,92,null,null,null,null,null,null,null,null,null,null,1,89,null,89,null,null,89,null,null,89,7,null,null,89,null,null,89,null,89,89,null,null,89,0,null,89,82,null,null,89,0,null,89,null,null,null,null,null,null,null,null,null,1,89,null,null,null,null,null,89,null,6,null,null,null,null,6,6,null,6,6,null,null,0,null,null,6,null,null,null,83,null,null,6,null,null,null,null,null,null,null,null,null,null,null,null,6,null,null,null,null,null,40,null,null,null,null,null,null,null,36,null,null,null,null,null,null,null,40,null,null,null,null,37,0,null,null,37,2,null,null,null,null,35,null,19,null,null,8,12,null,null,null,null,null,null,8,8,8,12,null,12,2,0,null,2,null,null,10,null,null,0,0,null,null,null,8,null,19,null,null,3,3,3,null,null,null,35,null,null,null,null,null,null,null,null,null,null,null,null,35,null,null,null,null,null,null,null,1,null],"branches":[58,1,0,0,58,1,1,161,69,2,0,0,69,2,1,161,69,3,0,161,69,3,1,161,79,4,0,13,79,4,1,148,79,5,0,161,79,5,1,17,83,6,0,0,83,6,1,11,91,7,0,147,91,7,1,19,112,8,0,1918,112,8,1,1510,112,8,2,1510,113,9,0,1918,113,9,1,1783,116,10,0,1783,116,10,1,135,122,11,0,1498,122,11,1,420,131,12,0,1363,131,12,1,135,150,13,0,273,150,13,1,147,155,14,0,273,155,14,1,0,155,15,0,273,155,15,1,0,182,16,0,159,182,16,1,69,189,17,0,0,189,17,1,0,238,18,0,52,238,18,1,61,238,19,0,113,238,19,1,113,252,20,0,0,252,20,1,32,266,21,0,39,266,21,1,74,267,22,0,64,267,22,1,49,269,23,0,111,269,23,1,100,271,24,0,111,271,24,1,49,272,25,0,111,272,25,1,72,273,26,0,111,273,26,1,86,273,26,2,86,291,27,0,33,291,27,1,2,292,28,0,33,292,28,1,7,302,29,0,0,302,29,1,33,311,30,0,29,311,30,1,4,311,31,0,33,311,31,1,33,311,31,2,31,316,32,0,31,316,32,1,2,321,33,0,30,321,33,1,28,328,34,0,3,328,34,1,25,339,35,0,2,339,35,1,31,343,36,0,33,343,36,1,0,360,37,0,46,360,37,1,1,361,38,0,46,361,38,1,2,365,39,0,16,365,39,1,30,366,40,0,16,366,40,1,0,372,41,0,46,372,41,1,0,375,42,0,1,375,42,1,45,384,43,0,3,384,43,1,43,384,44,0,46,384,44,1,45,408,45,0,98,408,45,1,0,411,46,0,98,411,46,1,13,412,47,0,1255,412,47,1,154,412,47,2,1244,412,47,3,1157,412,47,4,1157,412,47,5,87,415,48,0,98,415,48,1,0,417,49,0,0,417,49,1,98,421,50,0,87,421,50,1,11,424,51,0,98,424,51,1,0,430,52,0,11,430,52,1,87,431,53,0,0,431,53,1,11,439,54,0,87,439,54,1,0,441,55,0,0,441,55,1,87,460,56,0,0,460,56,1,45,464,57,0,45,464,57,1,0,467,58,0,40,467,58,1,2,488,59,0,11,488,59,1,0,490,60,0,11,490,60,1,0,495,61,0,0,495,61,1,11,499,62,0,11,499,62,1,0,529,63,0,16,529,63,1,2,531,64,0,18,531,64,1,0,532,65,0,2,532,65,1,16,536,66,0,176,536,66,1,16,536,66,2,10,539,67,0,0,539,67,1,18,543,68,0,0,543,68,1,18,580,69,0,2,580,69,1,4,585,70,0,4,585,70,1,0,591,71,0,4,591,71,1,0,626,72,0,2,626,72,1,18,632,73,0,20,632,73,1,0,641,74,0,16,641,74,1,4,684,75,0,85,684,75,1,11,696,76,0,4,696,76,1,92,696,77,0,96,696,77,1,96,696,77,2,96,697,78,0,2,697,78,1,2,703,79,0,92,703,79,1,0,706,80,0,92,706,80,1,41,708,81,0,11,708,81,1,81,732,82,0,7,732,82,1,82,732,83,0,89,732,83,1,46,732,83,2,44,732,83,3,44,736,84,0,58,736,84,1,31,739,85,0,6,739,85,1,83,745,86,0,0,745,86,1,89,745,87,0,89,745,87,1,82,748,88,0,82,748,88,1,7,752,89,0,0,752,89,1,89,769,90,0,89,769,90,1,89,772,91,0,6,772,91,1,83,779,92,0,6,779,92,1,0,793,93,0,6,793,93,1,40,793,93,2,37,836,94,0,0,836,94,1,37,840,95,0,2,840,95,1,35,840,96,0,37,840,96,1,28,840,96,2,6,840,96,3,2,848,97,0,8,848,97,1,11,862,98,0,12,862,98,1,0,864,99,0,2,864,99,1,10,865,100,0,0,865,100,1,2,897,101,0,35,897,101,1,35]},{"name":"packages/conflux-web-cfx-accounts/src/index.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file accounts.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar _ = require(\\"underscore\\");\\nvar core = require(\'conflux-web-core\');\\nvar Method = require(\'conflux-web-core-method\');\\nvar Promise = require(\'any-promise\');\\nvar Account = require(\\"eth-lib/lib/account\\");\\nvar Hash = require(\\"eth-lib/lib/hash\\");\\nvar RLP = require(\\"eth-lib/lib/rlp\\");\\nvar Nat = require(\\"eth-lib/lib/nat\\");\\nvar Bytes = require(\\"eth-lib/lib/bytes\\");\\nvar cryp = (typeof global === \'undefined\') ? require(\'crypto-browserify\') : require(\'crypto\');\\nvar scrypt = require(\'./scrypt\');\\nvar uuid = require(\'uuid\');\\nvar utils = require(\'conflux-web-utils\');\\nvar helpers = require(\'conflux-web-core-helpers\');\\n\\nvar isNot = function(value) {\\n    return (_.isUndefined(value) || _.isNull(value));\\n};\\n\\nvar trimLeadingZero = function (hex) {\\n    while (hex && hex.startsWith(\'0x0\')) {\\n        hex = \'0x\' + hex.slice(3);\\n    }\\n    return hex;\\n};\\n\\nvar makeEven = function (hex) {\\n    if(hex.length % 2 === 1) {\\n        hex = hex.replace(\'0x\', \'0x0\');\\n    }\\n    return hex;\\n};\\n\\n\\nvar Accounts = function Accounts() {\\n    var _this = this;\\n\\n    // sets _requestmanager\\n    core.packageInit(this, arguments);\\n\\n    // remove unecessary core functions\\n    delete this.BatchRequest;\\n    delete this.extend;\\n\\n    var _ethereumCall = [\\n        new Method({\\n            name: \'getId\',\\n            call: \'net_version\',\\n            params: 0,\\n            outputFormatter: utils.hexToNumber\\n        }),\\n        new Method({\\n            name: \'getGasPrice\',\\n            //call: \'eth_gasPrice\',\\n            call: \'cfx_gasPrice\',\\n            params: 0\\n        }),\\n        new Method({\\n            name: \'getTransactionCount\',\\n            //call: \'eth_getTransactionCount\',\\n            call: \'cfx_getTransactionCount\',\\n            params: 2,\\n            inputFormatter: [function (address) {\\n                if (utils.isAddress(address)) {\\n                    return address;\\n                } else {\\n                    throw new Error(\'Address \'+ address +\' is not a valid address to get the \\"transactionCount\\".\');\\n                }\\n            }, function () { return \'latest_state\'; }]\\n        })\\n    ];\\n    // attach methods to this._ethereumCall\\n    this._ethereumCall = {};\\n    _.each(_ethereumCall, function (method) {\\n        method.attachToObject(_this._ethereumCall);\\n        method.setRequestManager(_this._requestManager);\\n    });\\n\\n\\n    this.wallet = new Wallet(this);\\n};\\n\\nAccounts.prototype._addAccountFunctions = function (account) {\\n    var _this = this;\\n\\n    // add sign functions\\n    account.signTransaction = function signTransaction(tx, callback) {\\n        return _this.signTransaction(tx, account.privateKey, callback);\\n    };\\n    account.sign = function sign(data) {\\n        return _this.sign(data, account.privateKey);\\n    };\\n\\n    account.encrypt = function encrypt(password, options) {\\n        return _this.encrypt(account.privateKey, password, options);\\n    };\\n\\n\\n    return account;\\n};\\n\\nAccounts.prototype.create = function create(entropy) {\\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\\n};\\n\\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey) {\\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\\n};\\n\\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\\n    var _this = this,\\n        error = false,\\n        result;\\n\\n    callback = callback || function () {};\\n\\n    if (!tx) {\\n        error = new Error(\'No transaction object given!\');\\n\\n        callback(error);\\n        return Promise.reject(error);\\n    }\\n\\n    function signed (tx) {\\n\\n        if (!tx.gas && !tx.gasLimit) {\\n            error = new Error(\'\\"gas\\" is missing\');\\n        }\\n\\n        if (tx.nonce  < 0 ||\\n            tx.gas  < 0 ||\\n            tx.gasPrice  < 0 ||\\n            tx.chainId  < 0) {\\n            error = new Error(\'Gas, gasPrice, nonce or chainId is lower than 0\');\\n        }\\n\\n        if (error) {\\n            callback(error);\\n            return Promise.reject(error);\\n        }\\n\\n        try {\\n            tx = helpers.formatters.inputCallFormatter(tx);\\n\\n            var transaction = tx;\\n            transaction.to = tx.to || \'0x\';\\n            transaction.data = tx.data || \'0x\';\\n            transaction.value = tx.value || \'0x\';\\n            transaction.chainId = utils.numberToHex(tx.chainId);\\n\\n            var rlpEncoded = RLP.encode([\\n                Bytes.fromNat(transaction.nonce),\\n                Bytes.fromNat(transaction.gasPrice),\\n                Bytes.fromNat(transaction.gas),\\n                transaction.to.toLowerCase(),\\n                Bytes.fromNat(transaction.value),\\n                transaction.data,\\n                Bytes.fromNat(transaction.chainId || \\"0x1\\"),\\n                \\"0x\\",\\n                \\"0x\\"]);\\n\\n\\n            var hash = Hash.keccak256(rlpEncoded);\\n\\n            var signature = Account.makeSigner(Nat.toNumber(transaction.chainId || \\"0x1\\") * 2 + 35)(Hash.keccak256(rlpEncoded), privateKey);\\n\\n            var rawTx = RLP.decode(rlpEncoded).slice(0, 6).concat(Account.decodeSignature(signature));\\n\\n            rawTx[6] = makeEven(trimLeadingZero(rawTx[6]));\\n            rawTx[7] = makeEven(trimLeadingZero(rawTx[7]));\\n            rawTx[8] = makeEven(trimLeadingZero(rawTx[8]));\\n\\n            var rawTransaction = RLP.encode(rawTx);\\n\\n            var values = RLP.decode(rawTransaction);\\n            result = {\\n                messageHash: hash,\\n                v: trimLeadingZero(values[6]),\\n                r: trimLeadingZero(values[7]),\\n                s: trimLeadingZero(values[8]),\\n                rawTransaction: rawTransaction\\n            };\\n\\n        } catch(e) {\\n            callback(e);\\n            return Promise.reject(e);\\n        }\\n\\n        callback(null, result);\\n        return result;\\n    }\\n\\n    // Resolve immediately if nonce, chainId and price are provided\\n    if (tx.nonce !== undefined && tx.chainId !== undefined && tx.gasPrice !== undefined) {\\n        return Promise.resolve(signed(tx));\\n    }\\n\\n\\n    // Otherwise, get the missing info from the Ethereum Node\\n    return Promise.all([\\n        isNot(tx.chainId) ? _this._ethereumCall.getId() : tx.chainId,\\n        isNot(tx.gasPrice) ? _this._ethereumCall.getGasPrice() : tx.gasPrice,\\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce\\n    ]).then(function (args) {\\n        if (isNot(args[0]) || isNot(args[1]) || isNot(args[2])) {\\n            throw new Error(\'One of the values \\"chainId\\", \\"gasPrice\\", or \\"nonce\\" couldn\\\\\'t be fetched: \'+ JSON.stringify(args));\\n        }\\n        return signed(_.extend(tx, {chainId: args[0], gasPrice: args[1], nonce: args[2]}));\\n    });\\n};\\n\\n/* jshint ignore:start */\\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\\n    var values = RLP.decode(rawTx);\\n    var signature = Account.encodeSignature(values.slice(6,9));\\n    var recovery = Bytes.toNumber(values[6]);\\n    var extraData = recovery < 35 ? [] : [Bytes.fromNumber((recovery - 35) >> 1), \\"0x\\", \\"0x\\"];\\n    var signingData = values.slice(0,6).concat(extraData);\\n    var signingDataHex = RLP.encode(signingData);\\n    return Account.recover(Hash.keccak256(signingDataHex), signature);\\n};\\n/* jshint ignore:end */\\n\\nAccounts.prototype.hashMessage = function hashMessage(data) {\\n    var message = utils.isHexStrict(data) ? utils.hexToBytes(data) : data;\\n    var messageBuffer = Buffer.from(message);\\n    var preamble = \\"\\\\x19Ethereum Signed Message:\\\\n\\" + message.length;\\n    var preambleBuffer = Buffer.from(preamble);\\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\\n    return Hash.keccak256s(ethMessage);\\n};\\n\\nAccounts.prototype.sign = function sign(data, privateKey) {\\n    var hash = this.hashMessage(data);\\n    var signature = Account.sign(hash, privateKey);\\n    var vrs = Account.decodeSignature(signature);\\n    return {\\n        message: data,\\n        messageHash: hash,\\n        v: vrs[0],\\n        r: vrs[1],\\n        s: vrs[2],\\n        signature: signature\\n    };\\n};\\n\\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\\n    var args = [].slice.apply(arguments);\\n\\n\\n    if (_.isObject(message)) {\\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\\n    }\\n\\n    if (!preFixed) {\\n        message = this.hashMessage(message);\\n    }\\n\\n    if (args.length >= 4) {\\n        preFixed = args.slice(-1)[0];\\n        preFixed = _.isBoolean(preFixed) ? !!preFixed : false;\\n\\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\\n    }\\n    return Account.recover(message, signature);\\n};\\n\\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\\n    /* jshint maxcomplexity: 10 */\\n\\n    if(!_.isString(password)) {\\n        throw new Error(\'No password given.\');\\n    }\\n\\n    var json = (_.isObject(v3Keystore)) ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\\n\\n    if (json.version !== 3) {\\n        throw new Error(\'Not a valid V3 wallet\');\\n    }\\n\\n    var derivedKey;\\n    var kdfparams;\\n    if (json.crypto.kdf === \'scrypt\') {\\n        kdfparams = json.crypto.kdfparams;\\n\\n        // FIXME: support progress reporting callback\\n        derivedKey = scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, \'hex\'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\\n    } else if (json.crypto.kdf === \'pbkdf2\') {\\n        kdfparams = json.crypto.kdfparams;\\n\\n        if (kdfparams.prf !== \'hmac-sha256\') {\\n            throw new Error(\'Unsupported parameters to PBKDF2\');\\n        }\\n\\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, \'hex\'), kdfparams.c, kdfparams.dklen, \'sha256\');\\n    } else {\\n        throw new Error(\'Unsupported key derivation scheme\');\\n    }\\n\\n    var ciphertext = Buffer.from(json.crypto.ciphertext, \'hex\');\\n\\n    var mac = utils.sha3(Buffer.concat([ derivedKey.slice(16, 32), ciphertext ])).replace(\'0x\',\'\');\\n    if (mac !== json.crypto.mac) {\\n        throw new Error(\'Key derivation failed - possibly wrong password\');\\n    }\\n\\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, \'hex\'));\\n    var seed = \'0x\'+ Buffer.concat([ decipher.update(ciphertext), decipher.final() ]).toString(\'hex\');\\n\\n    return this.privateKeyToAccount(seed);\\n};\\n\\nAccounts.prototype.encrypt = function (privateKey, password, options) {\\n    /* jshint maxcomplexity: 20 */\\n    var account = this.privateKeyToAccount(privateKey);\\n\\n    options = options || {};\\n    var salt = options.salt || cryp.randomBytes(32);\\n    var iv = options.iv || cryp.randomBytes(16);\\n\\n    var derivedKey;\\n    var kdf = options.kdf || \'scrypt\';\\n    var kdfparams = {\\n        dklen: options.dklen || 32,\\n        salt: salt.toString(\'hex\')\\n    };\\n\\n    if (kdf === \'pbkdf2\') {\\n        kdfparams.c = options.c || 262144;\\n        kdfparams.prf = \'hmac-sha256\';\\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, \'hex\'), kdfparams.c, kdfparams.dklen, \'sha256\');\\n    } else if (kdf === \'scrypt\') {\\n        // FIXME: support progress reporting callback\\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\\n        kdfparams.r = options.r || 8;\\n        kdfparams.p = options.p || 1;\\n        derivedKey = scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, \'hex\'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\\n    } else {\\n        throw new Error(\'Unsupported kdf\');\\n    }\\n\\n    var cipher = cryp.createCipheriv(options.cipher || \'aes-128-ctr\', derivedKey.slice(0, 16), iv);\\n    if (!cipher) {\\n        throw new Error(\'Unsupported cipher\');\\n    }\\n\\n    var ciphertext = Buffer.concat([ cipher.update(Buffer.from(account.privateKey.replace(\'0x\',\'\'), \'hex\')), cipher.final() ]);\\n\\n    var mac = utils.sha3(Buffer.concat([ derivedKey.slice(16, 32), Buffer.from(ciphertext, \'hex\') ])).replace(\'0x\',\'\');\\n\\n    return {\\n        version: 3,\\n        id: uuid.v4({ random: options.uuid || cryp.randomBytes(16) }),\\n        address: account.address.toLowerCase().replace(\'0x\',\'\'),\\n        crypto: {\\n            ciphertext: ciphertext.toString(\'hex\'),\\n            cipherparams: {\\n                iv: iv.toString(\'hex\')\\n            },\\n            cipher: options.cipher || \'aes-128-ctr\',\\n            kdf: kdf,\\n            kdfparams: kdfparams,\\n            mac: mac.toString(\'hex\')\\n        }\\n    };\\n};\\n\\n\\n// Note: this is trying to follow closely the specs on\\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\\n\\nfunction Wallet(accounts) {\\n    this._accounts = accounts;\\n    this.length = 0;\\n    this.defaultKeyName = \\"web3js_wallet\\";\\n}\\n\\nWallet.prototype._findSafeIndex = function (pointer) {\\n    pointer = pointer || 0;\\n    if (_.has(this, pointer)) {\\n        return this._findSafeIndex(pointer + 1);\\n    } else {\\n        return pointer;\\n    }\\n};\\n\\nWallet.prototype._currentIndexes = function () {\\n    var keys = Object.keys(this);\\n    var indexes = keys\\n        .map(function(key) { return parseInt(key); })\\n        .filter(function(n) { return (n < 9e20); });\\n\\n    return indexes;\\n};\\n\\nWallet.prototype.create = function (numberOfAccounts, entropy) {\\n    for (var i = 0; i < numberOfAccounts; ++i) {\\n        this.add(this._accounts.create(entropy).privateKey);\\n    }\\n    return this;\\n};\\n\\nWallet.prototype.add = function (account) {\\n\\n    if (_.isString(account)) {\\n        account = this._accounts.privateKeyToAccount(account);\\n    }\\n    if (!this[account.address]) {\\n        account = this._accounts.privateKeyToAccount(account.privateKey);\\n        account.index = this._findSafeIndex();\\n\\n        this[account.index] = account;\\n        this[account.address] = account;\\n        this[account.address.toLowerCase()] = account;\\n\\n        this.length++;\\n\\n        return account;\\n    } else {\\n        return this[account.address];\\n    }\\n};\\n\\nWallet.prototype.remove = function (addressOrIndex) {\\n    var account = this[addressOrIndex];\\n\\n    if (account && account.address) {\\n        // address\\n        this[account.address].privateKey = null;\\n        delete this[account.address];\\n        // address lowercase\\n        this[account.address.toLowerCase()].privateKey = null;\\n        delete this[account.address.toLowerCase()];\\n        // index\\n        this[account.index].privateKey = null;\\n        delete this[account.index];\\n\\n        this.length--;\\n\\n        return true;\\n    } else {\\n        return false;\\n    }\\n};\\n\\nWallet.prototype.clear = function () {\\n    var _this = this;\\n    var indexes = this._currentIndexes();\\n\\n    indexes.forEach(function(index) {\\n        _this.remove(index);\\n    });\\n\\n    return this;\\n};\\n\\nWallet.prototype.encrypt = function (password, options) {\\n    var _this = this;\\n    var indexes = this._currentIndexes();\\n\\n    var accounts = indexes.map(function(index) {\\n        return _this[index].encrypt(password, options);\\n    });\\n\\n    return accounts;\\n};\\n\\n\\nWallet.prototype.decrypt = function (encryptedWallet, password) {\\n    var _this = this;\\n\\n    encryptedWallet.forEach(function (keystore) {\\n        var account = _this._accounts.decrypt(keystore, password);\\n\\n        if (account) {\\n            _this.add(account);\\n        } else {\\n            throw new Error(\'Couldn\\\\\'t decrypt accounts. Password wrong?\');\\n        }\\n    });\\n\\n    return this;\\n};\\n\\nWallet.prototype.save = function (password, keyName) {\\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\\n\\n    return true;\\n};\\n\\nWallet.prototype.load = function (password, keyName) {\\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\\n\\n    if (keystore) {\\n        try {\\n            keystore = JSON.parse(keystore);\\n        } catch(e) {\\n\\n        }\\n    }\\n\\n    return this.decrypt(keystore || [], password);\\n};\\n\\nif (typeof localStorage === \'undefined\') {\\n    delete Wallet.prototype.save;\\n    delete Wallet.prototype.load;\\n}\\n\\n\\nmodule.exports = Accounts;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,1,1,1,1,1,1,1,1,1,1,1,null,1,324,null,null,1,552,78,null,552,null,null,1,276,23,null,276,null,null,null,1,1701,null,null,1701,null,null,1701,1701,null,1701,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30,30,null,0,null,30,null,null,null,1701,1701,5103,5103,null,null,null,1701,null,null,1,1718,null,null,1718,95,null,1718,0,null,null,1718,108,null,null,null,1718,null,null,1,1174,null,null,1,544,null,null,1,102,null,null,null,102,null,102,0,null,0,0,null,null,1,null,102,0,null,null,102,null,null,null,5,null,null,102,5,5,null,null,97,97,null,92,92,92,92,92,null,92,null,null,null,null,null,null,null,null,null,null,null,92,null,92,null,92,null,92,92,92,null,92,null,92,92,null,null,null,null,null,null,null,null,5,5,null,null,92,92,null,null,null,102,48,null,null,null,null,54,null,null,null,null,54,0,null,54,null,null,null,null,1,24,24,24,24,24,24,24,null,null,null,1,40,40,40,40,40,40,null,null,1,25,25,25,25,null,null,null,null,null,null,null,null,null,1,36,null,null,36,6,null,null,30,9,null,null,30,9,9,null,9,null,21,null,null,null,1,null,null,112,0,null,null,112,null,112,0,null,null,112,112,112,111,null,null,111,1,1,null,1,0,null,null,1,null,0,null,null,112,null,112,112,0,null,null,112,112,null,112,null,null,1,null,108,null,108,108,108,null,108,108,108,null,null,null,null,108,0,0,0,108,null,108,108,108,108,null,0,null,null,108,108,0,null,null,108,null,108,null,108,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1701,1701,1701,null,null,1,375,375,268,null,107,null,null,null,1,8,8,180,180,null,8,null,null,1,14,74,null,14,null,null,1,null,109,95,null,109,105,105,null,105,105,105,null,105,null,105,null,4,null,null,null,1,60,null,60,null,60,60,null,60,60,null,60,60,null,60,null,60,null,0,null,null,null,1,6,6,null,6,44,null,null,6,null,null,1,2,2,null,2,8,null,null,2,null,null,null,1,2,null,2,8,null,8,8,null,0,null,null,null,2,null,null,1,0,null,0,null,null,1,0,null,0,0,0,null,null,null,null,null,0,null,null,1,1,1,null,null,null,1,null],"branches":[34,1,0,0,34,1,1,1,41,2,0,324,41,2,1,240,45,3,0,630,45,3,1,630,52,4,0,23,52,4,1,253,88,5,0,30,88,5,1,0,127,6,0,1174,127,6,1,1170,139,7,0,102,139,7,1,102,141,8,0,0,141,8,1,102,150,9,0,0,150,9,1,102,150,10,0,102,150,10,1,0,154,11,0,5,154,11,1,97,154,12,0,102,154,12,1,101,154,12,2,100,154,12,3,99,161,13,0,5,161,13,1,97,170,14,0,92,170,14,1,2,171,15,0,92,171,15,1,11,172,16,0,92,172,16,1,2,182,17,0,92,182,17,1,0,189,18,0,92,189,18,1,0,218,19,0,48,218,19,1,54,218,20,0,102,218,20,1,72,218,20,2,60,225,21,0,30,225,21,1,24,226,22,0,24,226,22,1,30,227,23,0,30,227,23,1,24,229,24,0,0,229,24,1,54,229,25,0,54,229,25,1,54,229,25,2,54,241,26,0,12,241,26,1,12,249,27,0,22,249,27,1,18,275,28,0,6,275,28,1,30,279,29,0,9,279,29,1,21,283,30,0,9,283,30,1,21,285,31,0,3,285,31,1,6,296,32,0,0,296,32,1,112,300,33,0,62,300,33,1,50,300,34,0,50,300,34,1,0,302,35,0,0,302,35,1,112,308,36,0,111,308,36,1,1,313,37,0,1,313,37,1,0,316,38,0,0,316,38,1,1,328,39,0,0,328,39,1,112,342,40,0,108,342,40,1,8,343,41,0,108,343,41,1,58,344,42,0,108,344,42,1,58,347,43,0,108,347,43,1,108,349,44,0,108,349,44,1,108,353,45,0,0,353,45,1,108,354,46,0,0,354,46,1,0,357,47,0,108,357,47,1,0,359,48,0,108,359,48,1,8,360,49,0,108,360,49,1,58,361,50,0,108,361,50,1,58,367,51,0,108,367,51,1,108,368,52,0,0,368,52,1,108,378,53,0,108,378,53,1,58,385,54,0,108,385,54,1,108,404,55,0,375,404,55,1,107,405,56,0,268,405,56,1,107,430,57,0,95,430,57,1,14,433,58,0,105,433,58,1,4,452,59,0,60,452,59,1,0,452,60,0,60,452,60,1,60,500,61,0,8,500,61,1,0,511,62,0,0,511,62,1,0,517,63,0,0,517,63,1,0,519,64,0,0,519,64,1,0,527,65,0,0,527,65,1,0,530,66,0,1,530,66,1,0]},{"name":"packages/conflux-web-cfx-accounts/src/scrypt.js","source":"var scryptsy = require(\'scryptsy\');\\n\\nvar scrypt;\\n\\nvar isNode = Object.prototype.toString.call(typeof process !== \'undefined\' ? process : 0) === \'[object process]\';\\nif (isNode) {\\n    var NODE_MIN_VER_WITH_BUILTIN_SCRYPT = \'10.5.0\';\\n    var NODE_MIN_VER_INCOMPAT_SCRYPT_PKG = \'12.0.0\';\\n    var semver = require(\'semver\');\\n    var useNodeBuiltin = isNode && semver.Range(\'>=\' + NODE_MIN_VER_WITH_BUILTIN_SCRYPT).test(process.version);\\n\\n    var tryScryptPkg = (function() {\\n        var scryptPkg;\\n        return function() {\\n            if (scryptPkg !== undefined) { return scryptPkg; }\\n            try {\\n                scryptPkg = (function(m) { return require(m); })(\'scrypt\');\\n            } catch (e) {\\n                if (/was compiled against a different/.test(e.message)) {\\n                    throw e;\\n                }\\n                scryptPkg = null;\\n            }\\n            return scryptPkg;\\n        };\\n    })();\\n\\n    var canImprove = function(nodeVer) {\\n        return \'can improve web3\\\\\'s peformance when running Node.js versions older than \' + nodeVer + \' by installing the (deprecated) scrypt package in your project\';\\n    };\\n\\n    if (useNodeBuiltin) {\\n        var crypto = require(\'crypto\');\\n        var fallbackCount = 0;\\n        scrypt = function(key, salt, N, r, p, dkLen) {\\n            try {\\n                return crypto.scryptSync(key, salt, dkLen, {N: N, r: r, p: p});\\n            } catch (e) {\\n                if (/scrypt:memory limit exceeded/.test(e.message)) {\\n                    var scryptPkg = tryScryptPkg();\\n                    if (scryptPkg) {\\n                        return scryptPkg.hashSync(key, {N: N, r: r, p: p}, dkLen, salt);\\n                    }\\n                    fallbackCount += 1;\\n                    console.warn(\\n                        \'\\\\x1b[33m%s\\\\x1b[0m\',\\n                        \'Memory limit exceeded for Node\\\\\'s built-in crypto.scrypt, falling back to scryptsy (times: \' + fallbackCount + \'), if this happens frequently you \' + canImprove(NODE_MIN_VER_INCOMPAT_SCRYPT_PKG)\\n                    );\\n                    return scryptsy(key, salt, N, r, p, dkLen);\\n                }\\n                throw e;\\n            }\\n        };\\n    } else {\\n        var scryptPkg = tryScryptPkg();\\n        if (scryptPkg) {\\n            scrypt = function(key, salt, N, r, p, dkLen) {\\n                return scryptPkg.hashSync(key, {N: N, r: r, p: p}, dkLen, salt);\\n            };\\n        } else {\\n            console.warn(\\n                \'\\\\x1b[33m%s\\\\x1b[0m\',\\n                \'You \' + canImprove(NODE_MIN_VER_WITH_BUILTIN_SCRYPT)\\n            );\\n        }\\n    }\\n}\\n\\nscrypt = scrypt || scryptsy;\\n\\nmodule.exports = scrypt;\\n","coverage":[1,null,1,null,1,1,1,1,1,1,null,1,1,1,1,1,1,null,1,0,null,1,null,1,null,null,null,1,1,null,null,1,1,1,1,219,219,null,1,1,1,0,null,1,1,null,null,null,1,null,0,null,null,null,0,0,0,0,null,null,0,null,null,null,null,null,null,null,1,null,1,null],"branches":[5,1,0,1,5,1,1,0,6,2,0,1,6,2,1,0,10,3,0,1,10,3,1,1,15,4,0,0,15,4,1,1,19,5,0,0,19,5,1,1,32,6,0,1,32,6,1,0,39,7,0,1,39,7,1,0,41,8,0,0,41,8,1,1,56,9,0,0,56,9,1,0,69,10,0,1,69,10,1,0]},{"name":"packages/conflux-web-cfx/src/getNetworkType.js","source":"/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file getNetworkType.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2017\\n */\\n\\n\\"use strict\\";\\n\\nvar _ = require(\'underscore\');\\n\\nvar getNetworkType = function (callback) {\\n    var _this = this,\\n        id;\\n\\n\\n    return this.net.getId()\\n        .then(function (givenId) {\\n\\n            id = givenId;\\n\\n            return _this.getBlock(0);\\n        })\\n        .then(function (genesis) {\\n            var returnValue = \'private\';\\n\\n            if (genesis.hash === \'0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\' &&\\n                id === 1) {\\n                returnValue = \'main\';\\n            }\\n            if (genesis.hash === \'0cd786a2425d16f152c658316c423e6ce1181e15c3295826d7c9904cba9ce303\' &&\\n                id === 2) {\\n                returnValue = \'morden\';\\n            }\\n            if (genesis.hash === \'0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d\' &&\\n                id === 3) {\\n                returnValue = \'ropsten\';\\n            }\\n            if (genesis.hash === \'0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177\' &&\\n                id === 4) {\\n                returnValue = \'rinkeby\';\\n            }\\n            if (genesis.hash === \'0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9\' &&\\n                id === 42) {\\n                returnValue = \'kovan\';\\n            }\\n\\n            if (_.isFunction(callback)) {\\n                callback(null, returnValue);\\n            }\\n\\n            return returnValue;\\n        })\\n        .catch(function (err) {\\n            if (_.isFunction(callback)) {\\n                callback(err);\\n            } else {\\n                throw err;\\n            }\\n        });\\n};\\n\\nmodule.exports = getNetworkType;\\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,1,6,null,null,null,6,null,null,6,null,6,null,null,6,null,6,null,3,null,6,null,0,null,6,null,0,null,6,null,0,null,6,null,0,null,null,6,0,null,null,6,null,null,0,0,null,0,null,null,null,null,1,null],"branches":[42,1,0,3,42,1,1,3,42,2,0,6,42,2,1,4,46,3,0,0,46,3,1,6,46,4,0,6,46,4,1,0,50,5,0,0,50,5,1,6,50,6,0,6,50,6,1,0,54,7,0,0,54,7,1,6,54,8,0,6,54,8,1,0,58,9,0,0,58,9,1,6,58,10,0,6,58,10,1,0,63,11,0,0,63,11,1,6,70,12,0,0,70,12,1,0]}],"git":{"head":{"id":"a26b48272662eb08f00487f5177c19e34fbed333","committer_name":"liuis","committer_email":"ping.li@conflux-chain.org","message":"Test case all pass! 2361 passing","author_name":"liuis","author_email":"ping.li@conflux-chain.org"},"branch":"conflux-web-1.2.1","remotes":[{"name":"origin","url":"ssh://git@github.com/Conflux-Chain/ConfluxWeb.git"}]},"run_at":"2019-09-05T03:29:40.241Z"}'
